{"openapi":"3.0.1","info":{"title":"RDX Rest API","description":"List of endpoints and schemas to create, update, delete and search entities and their sub-entities supported by RDX server","version":"V31"},"servers":[{"url":"http://localhost:8080/ionweb/r/restapi/RDX_CPS/"}],"paths":{"/Counterparty":{"get":{"tags":["/Counterparty"],"summary":"Returns latest versions of all matching Counterpartiesin json format. This action requires the caller entitled to view Counterparties","operationId":"getEntity","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Counterparty field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Counterparty","schema":{},"examples":{"Filter by WithholdingTaxExemptionReason, in operator":{"description":"Filter by WithholdingTaxExemptionReason, in operator","value":"WithholdingTaxExemptionReason,IN,A,B,C"},"Filter by WithholdingTaxExemptionReason, not in operator":{"description":"Filter by WithholdingTaxExemptionReason, not in operator","value":"WithholdingTaxExemptionReason,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Counterparty fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Counterparty","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Counterparty field. For possible fields, refer to the schema section for Counterparty","schema":{},"examples":{"Sort by WithholdingTaxExemptionReason, descending order":{"description":"Sort by WithholdingTaxExemptionReason, descending order","value":"WithholdingTaxExemptionReason:DESC"},"Sort by WithholdingTaxExemptionReason, ascending order":{"description":"Sort by WithholdingTaxExemptionReason, ascending order","value":"WithholdingTaxExemptionReason:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Counterparties","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Counterparties. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty"],"summary":"Creates a new Counterparty. This action requires the caller entitled to create Counterparties","description":"Creates a new  Counterparty.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are ShortName,Name.\n For possible entity Fields, refer to the schema section for Counterparty. This action requires the caller entitled to create Counterparties","operationId":"createEntity","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Counterparty. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Counterparty. The response body would contain the created Counterparty","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}":{"get":{"tags":["/Counterparty/{Id}"],"summary":"Returns latest version of a specific Counterpartyin json format. This action requires the caller entitled to view Counterparties","operationId":"getEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Counterparty field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Counterparty","schema":{},"examples":{"Filter by WithholdingTaxExemptionReason, in operator":{"description":"Filter by WithholdingTaxExemptionReason, in operator","value":"WithholdingTaxExemptionReason,IN,A,B,C"},"Filter by WithholdingTaxExemptionReason, not in operator":{"description":"Filter by WithholdingTaxExemptionReason, not in operator","value":"WithholdingTaxExemptionReason,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Counterparty fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Counterparty","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Counterparty field. For possible fields, refer to the schema section for Counterparty","schema":{},"examples":{"Sort by WithholdingTaxExemptionReason, descending order":{"description":"Sort by WithholdingTaxExemptionReason, descending order","value":"WithholdingTaxExemptionReason:DESC"},"Sort by WithholdingTaxExemptionReason, ascending order":{"description":"Sort by WithholdingTaxExemptionReason, ascending order","value":"WithholdingTaxExemptionReason:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Counterparties","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}"],"summary":"Deletes an existing Counterparty subject to caller is entitled to delete Counterparties","description":"Deletes a existing Counterparty.\n. This action is subject to caller is entitled to delete Counterparties","operationId":"deleteEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}"],"summary":"Updates an existing Counterparty subject to caller is entitled to edit Counterparties","description":"Updates a existing Counterparty.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are ShortName,Name.\n For possible entity Fields, refer to the schema section for Counterparty in json format, subject to caller is entitled to edit Counterparties","operationId":"updateEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Counterparty. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Addresses":{"get":{"tags":["/Counterparty/{Id}/Addresses"],"summary":"Returns latest versions of all matching Addresses belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Addresses","operationId":"getEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Address fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Address","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Address field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Address","schema":{},"examples":{"Filter by Town, not in operator":{"description":"Filter by Town, not in operator","value":"Town,NOT_IN,A,B,C"},"Filter by Town, in operator":{"description":"Filter by Town, in operator","value":"Town,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Address field. For possible fields, refer to the schema section for Address","schema":{},"examples":{"Sort by Town, descending order":{"description":"Sort by Town, descending order","value":"Town:DESC"},"Sort by Town, ascending order":{"description":"Sort by Town, ascending order","value":"Town:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Addresses","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Addresses belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Address"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/Addresses"],"summary":"Creates a new Address belonging to Counterparty. This action requires the caller entitled to create Addresses","description":"Creates a new  Address.\nAddress is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is AddressTypeId.\n For possible entity Fields, refer to the schema section for Address. This action requires the caller entitled to create Addresses","operationId":"createEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Address. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Address for the parent Counterparty. The response body would contain the created Address","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Address"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Addresses/{AddressesId}":{"get":{"tags":["/Counterparty/{Id}/Addresses/{AddressesId}"],"summary":"Returns latest version of a specific Address belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Addresses","operationId":"getEntity","parameters":[{"name":"AddressesId","in":"path","description":"Id of Address","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Address fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Address","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Address field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Address","schema":{},"examples":{"Filter by Town, not in operator":{"description":"Filter by Town, not in operator","value":"Town,NOT_IN,A,B,C"},"Filter by Town, in operator":{"description":"Filter by Town, in operator","value":"Town,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Address field. For possible fields, refer to the schema section for Address","schema":{},"examples":{"Sort by Town, descending order":{"description":"Sort by Town, descending order","value":"Town:DESC"},"Sort by Town, ascending order":{"description":"Sort by Town, ascending order","value":"Town:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Addresses","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Address belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Address"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/Addresses/{AddressesId}"],"summary":"Deletes an existing Address belonging to Counterparty subject to caller is entitled to delete Addresses","description":"Deletes a existing Address.\nAddress is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Addresses","operationId":"deleteEntity","parameters":[{"name":"AddressesId","in":"path","description":"Id of Address","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Address belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/Addresses/{AddressesId}"],"summary":"Updates an existing Address belonging to Counterparty subject to caller is entitled to edit Addresses","description":"Updates a existing Address.\nAddress is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is AddressTypeId.\n For possible entity Fields, refer to the schema section for Address in json format, subject to caller is entitled to edit Addresses","operationId":"updateEntity","parameters":[{"name":"AddressesId","in":"path","description":"Id of Address","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Address. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Address belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Address"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/BICs":{"get":{"tags":["/Counterparty/{Id}/BICs"],"summary":"Returns latest versions of all matching BIC Type Relations belonging to the parent Counterpartyin json format. This action requires the caller entitled to view BIC Type Relations","operationId":"getEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned BIC Type Relations","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the BIC Type Relation field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BICTypeRelation","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any BIC Type Relation field. For possible fields, refer to the schema section for BICTypeRelation","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of BIC Type Relation fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BICTypeRelation","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching BIC Type Relations belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BICTypeRelation"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/BICs"],"summary":"Creates a new BIC Type Relation belonging to Counterparty. This action requires the caller entitled to create BIC Type Relations","description":"Creates a new  BIC Type Relation.\nBIC Type Relation is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are Type,BIC.\n For possible entity Fields, refer to the schema section for BICTypeRelation. This action requires the caller entitled to create BIC Type Relations","operationId":"createEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the BIC Type Relation. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of BIC Type Relation for the parent Counterparty. The response body would contain the created BIC Type Relation","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BICTypeRelation"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/BICs/{BiCsId}":{"get":{"tags":["/Counterparty/{Id}/BICs/{BiCsId}"],"summary":"Returns latest version of a specific BIC Type Relation belonging to the parent Counterpartyin json format. This action requires the caller entitled to view BIC Type Relations","operationId":"getEntity","parameters":[{"name":"BiCsId","in":"path","description":"Id of BIC Type Relation","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned BIC Type Relations","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the BIC Type Relation field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BICTypeRelation","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any BIC Type Relation field. For possible fields, refer to the schema section for BICTypeRelation","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of BIC Type Relation fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BICTypeRelation","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific BIC Type Relation belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BICTypeRelation"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/BICs/{BiCsId}"],"summary":"Deletes an existing BIC Type Relation belonging to Counterparty subject to caller is entitled to delete BIC Type Relations","description":"Deletes a existing BIC Type Relation.\nBIC Type Relation is a sub-entity of Counterparty. This action is subject to caller is entitled to delete BIC Type Relations","operationId":"deleteEntity","parameters":[{"name":"BiCsId","in":"path","description":"Id of BIC Type Relation","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific BIC Type Relation belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/BICs/{BiCsId}"],"summary":"Updates an existing BIC Type Relation belonging to Counterparty subject to caller is entitled to edit BIC Type Relations","description":"Updates a existing BIC Type Relation.\nBIC Type Relation is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are Type,BIC.\n For possible entity Fields, refer to the schema section for BICTypeRelation in json format, subject to caller is entitled to edit BIC Type Relations","operationId":"updateEntity","parameters":[{"name":"BiCsId","in":"path","description":"Id of BIC Type Relation","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified BIC Type Relation. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific BIC Type Relation belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BICTypeRelation"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/BankAccounts":{"get":{"tags":["/Counterparty/{Id}/BankAccounts"],"summary":"Returns latest versions of all matching Bank accounts belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Bank accounts","operationId":"getEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Bank account fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BankAccount","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Bank account field. For possible fields, refer to the schema section for BankAccount","schema":{},"examples":{"Sort by SwiftCode, ascending order":{"description":"Sort by SwiftCode, ascending order","value":"SwiftCode:ASC"},"Sort by SwiftCode, descending order":{"description":"Sort by SwiftCode, descending order","value":"SwiftCode:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Bank account field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BankAccount","schema":{},"examples":{"Filter by SwiftCode, in operator":{"description":"Filter by SwiftCode, in operator","value":"SwiftCode,IN,A,B,C"},"Filter by SwiftCode, not in operator":{"description":"Filter by SwiftCode, not in operator","value":"SwiftCode,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Bank accounts","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Bank accounts belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BankAccount"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/BankAccounts"],"summary":"Creates a new Bank account belonging to Counterparty. This action requires the caller entitled to create Bank accounts","description":"Creates a new  Bank account.\nBank account is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for BankAccount. This action requires the caller entitled to create Bank accounts","operationId":"createEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Bank account. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Bank account for the parent Counterparty. The response body would contain the created Bank account","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BankAccount"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/BankAccounts/{BankAccountsId}":{"get":{"tags":["/Counterparty/{Id}/BankAccounts/{BankAccountsId}"],"summary":"Returns latest version of a specific Bank account belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Bank accounts","operationId":"getEntity","parameters":[{"name":"BankAccountsId","in":"path","description":"Id of Bank account","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Bank account fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BankAccount","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Bank account field. For possible fields, refer to the schema section for BankAccount","schema":{},"examples":{"Sort by SwiftCode, ascending order":{"description":"Sort by SwiftCode, ascending order","value":"SwiftCode:ASC"},"Sort by SwiftCode, descending order":{"description":"Sort by SwiftCode, descending order","value":"SwiftCode:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Bank account field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BankAccount","schema":{},"examples":{"Filter by SwiftCode, in operator":{"description":"Filter by SwiftCode, in operator","value":"SwiftCode,IN,A,B,C"},"Filter by SwiftCode, not in operator":{"description":"Filter by SwiftCode, not in operator","value":"SwiftCode,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Bank accounts","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Bank account belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BankAccount"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/BankAccounts/{BankAccountsId}"],"summary":"Deletes an existing Bank account belonging to Counterparty subject to caller is entitled to delete Bank accounts","description":"Deletes a existing Bank account.\nBank account is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Bank accounts","operationId":"deleteEntity","parameters":[{"name":"BankAccountsId","in":"path","description":"Id of Bank account","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Bank account belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/BankAccounts/{BankAccountsId}"],"summary":"Updates an existing Bank account belonging to Counterparty subject to caller is entitled to edit Bank accounts","description":"Updates a existing Bank account.\nBank account is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for BankAccount in json format, subject to caller is entitled to edit Bank accounts","operationId":"updateEntity","parameters":[{"name":"BankAccountsId","in":"path","description":"Id of Bank account","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Bank account. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Bank account belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BankAccount"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/BusinessUnits":{"get":{"tags":["/Counterparty/{Id}/BusinessUnits"],"summary":"Returns latest versions of all matching Business Unit Relations belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Business Unit Relations","operationId":"getEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Business Unit Relation field. For possible fields, refer to the schema section for BusinessUnitSubEntity","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Business Unit Relation field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BusinessUnitSubEntity","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Business Unit Relation fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BusinessUnitSubEntity","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Business Unit Relations","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Business Unit Relations belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BusinessUnitSubEntity"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/BusinessUnits"],"summary":"Creates a new Business Unit Relation belonging to Counterparty. This action requires the caller entitled to create Business Unit Relations","description":"Creates a new  Business Unit Relation.\nBusiness Unit Relation is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is BusinessUnit.\n For possible entity Fields, refer to the schema section for BusinessUnitSubEntity. This action requires the caller entitled to create Business Unit Relations","operationId":"createEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Business Unit Relation. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Business Unit Relation for the parent Counterparty. The response body would contain the created Business Unit Relation","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BusinessUnitSubEntity"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/BusinessUnits/{BusinessUnitsId}":{"get":{"tags":["/Counterparty/{Id}/BusinessUnits/{BusinessUnitsId}"],"summary":"Returns latest version of a specific Business Unit Relation belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Business Unit Relations","operationId":"getEntity","parameters":[{"name":"BusinessUnitsId","in":"path","description":"Id of Business Unit Relation","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Business Unit Relation field. For possible fields, refer to the schema section for BusinessUnitSubEntity","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Business Unit Relation field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BusinessUnitSubEntity","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Business Unit Relation fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BusinessUnitSubEntity","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Business Unit Relations","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Business Unit Relation belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BusinessUnitSubEntity"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/BusinessUnits/{BusinessUnitsId}"],"summary":"Deletes an existing Business Unit Relation belonging to Counterparty subject to caller is entitled to delete Business Unit Relations","description":"Deletes a existing Business Unit Relation.\nBusiness Unit Relation is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Business Unit Relations","operationId":"deleteEntity","parameters":[{"name":"BusinessUnitsId","in":"path","description":"Id of Business Unit Relation","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Business Unit Relation belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/BusinessUnits/{BusinessUnitsId}"],"summary":"Updates an existing Business Unit Relation belonging to Counterparty subject to caller is entitled to edit Business Unit Relations","description":"Updates a existing Business Unit Relation.\nBusiness Unit Relation is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is BusinessUnit.\n For possible entity Fields, refer to the schema section for BusinessUnitSubEntity in json format, subject to caller is entitled to edit Business Unit Relations","operationId":"updateEntity","parameters":[{"name":"BusinessUnitsId","in":"path","description":"Id of Business Unit Relation","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Business Unit Relation. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Business Unit Relation belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BusinessUnitSubEntity"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/ClearingCodes":{"get":{"tags":["/Counterparty/{Id}/ClearingCodes"],"summary":"Returns latest versions of all matching Clearing codes belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Clearing codes","operationId":"getEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Clearing codes","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Clearing code field. For possible fields, refer to the schema section for ClearingCode","schema":{},"examples":{"Sort by Code, descending order":{"description":"Sort by Code, descending order","value":"Code:DESC"},"Sort by Code, ascending order":{"description":"Sort by Code, ascending order","value":"Code:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Clearing code fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ClearingCode","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Clearing code field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ClearingCode","schema":{},"examples":{"Filter by Code, not in operator":{"description":"Filter by Code, not in operator","value":"Code,NOT_IN,A,B,C"},"Filter by Code, in operator":{"description":"Filter by Code, in operator","value":"Code,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Clearing codes belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.ClearingCode"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/ClearingCodes"],"summary":"Creates a new Clearing code belonging to Counterparty. This action requires the caller entitled to create Clearing codes","description":"Creates a new  Clearing code.\nClearing code is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are ClearingFormat,Type,Code,ClearingSystem.\n For possible entity Fields, refer to the schema section for ClearingCode. This action requires the caller entitled to create Clearing codes","operationId":"createEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Clearing code. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Clearing code for the parent Counterparty. The response body would contain the created Clearing code","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.ClearingCode"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/ClearingCodes/{ClearingCodesId}":{"get":{"tags":["/Counterparty/{Id}/ClearingCodes/{ClearingCodesId}"],"summary":"Returns latest version of a specific Clearing code belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Clearing codes","operationId":"getEntity","parameters":[{"name":"ClearingCodesId","in":"path","description":"Id of Clearing code","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Clearing codes","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Clearing code field. For possible fields, refer to the schema section for ClearingCode","schema":{},"examples":{"Sort by Code, descending order":{"description":"Sort by Code, descending order","value":"Code:DESC"},"Sort by Code, ascending order":{"description":"Sort by Code, ascending order","value":"Code:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Clearing code fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ClearingCode","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Clearing code field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ClearingCode","schema":{},"examples":{"Filter by Code, not in operator":{"description":"Filter by Code, not in operator","value":"Code,NOT_IN,A,B,C"},"Filter by Code, in operator":{"description":"Filter by Code, in operator","value":"Code,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Clearing code belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.ClearingCode"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/ClearingCodes/{ClearingCodesId}"],"summary":"Deletes an existing Clearing code belonging to Counterparty subject to caller is entitled to delete Clearing codes","description":"Deletes a existing Clearing code.\nClearing code is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Clearing codes","operationId":"deleteEntity","parameters":[{"name":"ClearingCodesId","in":"path","description":"Id of Clearing code","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Clearing code belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/ClearingCodes/{ClearingCodesId}"],"summary":"Updates an existing Clearing code belonging to Counterparty subject to caller is entitled to edit Clearing codes","description":"Updates a existing Clearing code.\nClearing code is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are ClearingFormat,Type,Code,ClearingSystem.\n For possible entity Fields, refer to the schema section for ClearingCode in json format, subject to caller is entitled to edit Clearing codes","operationId":"updateEntity","parameters":[{"name":"ClearingCodesId","in":"path","description":"Id of Clearing code","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Clearing code. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Clearing code belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.ClearingCode"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Contacts":{"get":{"tags":["/Counterparty/{Id}/Contacts"],"summary":"Returns latest versions of all matching Contacts belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Contacts","operationId":"getEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Contact fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Contact","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Contact field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Contact","schema":{},"examples":{"Filter by Phone, in operator":{"description":"Filter by Phone, in operator","value":"Phone,IN,A,B,C"},"Filter by Phone, not in operator":{"description":"Filter by Phone, not in operator","value":"Phone,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Contacts","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Contact field. For possible fields, refer to the schema section for Contact","schema":{},"examples":{"Sort by Phone, descending order":{"description":"Sort by Phone, descending order","value":"Phone:DESC"},"Sort by Phone, ascending order":{"description":"Sort by Phone, ascending order","value":"Phone:ASC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Contacts belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Contact"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/Contacts"],"summary":"Creates a new Contact belonging to Counterparty. This action requires the caller entitled to create Contacts","description":"Creates a new  Contact.\nContact is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for Contact. This action requires the caller entitled to create Contacts","operationId":"createEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Contact. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Contact for the parent Counterparty. The response body would contain the created Contact","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Contact"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Contacts/{ContactsId}":{"get":{"tags":["/Counterparty/{Id}/Contacts/{ContactsId}"],"summary":"Returns latest version of a specific Contact belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Contacts","operationId":"getEntity","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Contact fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Contact","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Contact field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Contact","schema":{},"examples":{"Filter by Phone, in operator":{"description":"Filter by Phone, in operator","value":"Phone,IN,A,B,C"},"Filter by Phone, not in operator":{"description":"Filter by Phone, not in operator","value":"Phone,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Contacts","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Contact field. For possible fields, refer to the schema section for Contact","schema":{},"examples":{"Sort by Phone, descending order":{"description":"Sort by Phone, descending order","value":"Phone:DESC"},"Sort by Phone, ascending order":{"description":"Sort by Phone, ascending order","value":"Phone:ASC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Contact belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Contact"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/Contacts/{ContactsId}"],"summary":"Deletes an existing Contact belonging to Counterparty subject to caller is entitled to delete Contacts","description":"Deletes a existing Contact.\nContact is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Contacts","operationId":"deleteEntity","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Contact belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/Contacts/{ContactsId}"],"summary":"Updates an existing Contact belonging to Counterparty subject to caller is entitled to edit Contacts","description":"Updates a existing Contact.\nContact is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Contact in json format, subject to caller is entitled to edit Contacts","operationId":"updateEntity","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Contact. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Contact belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Contact"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/DepositoryCodes":{"get":{"tags":["/Counterparty/{Id}/DepositoryCodes"],"summary":"Returns latest versions of all matching Depository codes belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Depository codes","operationId":"getEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Depository codes","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Depository code field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for DepositoryCode","schema":{},"examples":{"Filter by Code, not in operator":{"description":"Filter by Code, not in operator","value":"Code,NOT_IN,A,B,C"},"Filter by Code, in operator":{"description":"Filter by Code, in operator","value":"Code,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Depository code fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for DepositoryCode","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Depository code field. For possible fields, refer to the schema section for DepositoryCode","schema":{},"examples":{"Sort by Code, descending order":{"description":"Sort by Code, descending order","value":"Code:DESC"},"Sort by Code, ascending order":{"description":"Sort by Code, ascending order","value":"Code:ASC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Depository codes belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.DepositoryCode"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/DepositoryCodes"],"summary":"Creates a new Depository code belonging to Counterparty. This action requires the caller entitled to create Depository codes","description":"Creates a new  Depository code.\nDepository code is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are Format,Code.\n For possible entity Fields, refer to the schema section for DepositoryCode. This action requires the caller entitled to create Depository codes","operationId":"createEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Depository code. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Depository code for the parent Counterparty. The response body would contain the created Depository code","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.DepositoryCode"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/DepositoryCodes/{DepositoryCodesId}":{"get":{"tags":["/Counterparty/{Id}/DepositoryCodes/{DepositoryCodesId}"],"summary":"Returns latest version of a specific Depository code belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Depository codes","operationId":"getEntity","parameters":[{"name":"DepositoryCodesId","in":"path","description":"Id of Depository code","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Depository codes","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Depository code field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for DepositoryCode","schema":{},"examples":{"Filter by Code, not in operator":{"description":"Filter by Code, not in operator","value":"Code,NOT_IN,A,B,C"},"Filter by Code, in operator":{"description":"Filter by Code, in operator","value":"Code,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Depository code fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for DepositoryCode","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Depository code field. For possible fields, refer to the schema section for DepositoryCode","schema":{},"examples":{"Sort by Code, descending order":{"description":"Sort by Code, descending order","value":"Code:DESC"},"Sort by Code, ascending order":{"description":"Sort by Code, ascending order","value":"Code:ASC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Depository code belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.DepositoryCode"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/DepositoryCodes/{DepositoryCodesId}"],"summary":"Deletes an existing Depository code belonging to Counterparty subject to caller is entitled to delete Depository codes","description":"Deletes a existing Depository code.\nDepository code is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Depository codes","operationId":"deleteEntity","parameters":[{"name":"DepositoryCodesId","in":"path","description":"Id of Depository code","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Depository code belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/DepositoryCodes/{DepositoryCodesId}"],"summary":"Updates an existing Depository code belonging to Counterparty subject to caller is entitled to edit Depository codes","description":"Updates a existing Depository code.\nDepository code is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are Format,Code.\n For possible entity Fields, refer to the schema section for DepositoryCode in json format, subject to caller is entitled to edit Depository codes","operationId":"updateEntity","parameters":[{"name":"DepositoryCodesId","in":"path","description":"Id of Depository code","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Depository code. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Depository code belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.DepositoryCode"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Farms":{"get":{"tags":["/Counterparty/{Id}/Farms"],"summary":"Returns latest versions of all matching Farms belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Farms","operationId":"getEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Farm field. For possible fields, refer to the schema section for Farm","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Farm field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Farm","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Farm fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Farm","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Farms","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Farms belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/Farms"],"summary":"Creates a new Farm belonging to Counterparty. This action requires the caller entitled to create Farms","description":"Creates a new  Farm.\nFarm is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for Farm. This action requires the caller entitled to create Farms","operationId":"createEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Farm. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Farm for the parent Counterparty. The response body would contain the created Farm","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Farms/{FarmsId}":{"get":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}"],"summary":"Returns latest version of a specific Farm belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Farms","operationId":"getEntity","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Farm field. For possible fields, refer to the schema section for Farm","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Farm field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Farm","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Farm fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Farm","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Farms","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Farm belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}"],"summary":"Deletes an existing Farm belonging to Counterparty subject to caller is entitled to delete Farms","description":"Deletes a existing Farm.\nFarm is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Farms","operationId":"deleteEntity","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Farm belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}"],"summary":"Updates an existing Farm belonging to Counterparty subject to caller is entitled to edit Farms","description":"Updates a existing Farm.\nFarm is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Farm in json format, subject to caller is entitled to edit Farms","operationId":"updateEntity","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Farm. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Farm belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Farms/{FarmsId}/SplitDefaults":{"get":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}/SplitDefaults"],"summary":"Returns latest versions of all matching Splits belonging to the parent Farmin json format. This action requires the caller entitled to view Splits","operationId":"getEntity","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Splits","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Split field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Split","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Split fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Split","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Split field. For possible fields, refer to the schema section for Split","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Splits belonging to the parent Farm. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm.Split"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}/SplitDefaults"],"summary":"Creates a new Split belonging to Farm. This action requires the caller entitled to create Splits","description":"Creates a new  Split.\nSplit is a sub-entity of  Farm The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are Counterparty,Percentage.\n For possible entity Fields, refer to the schema section for Split. This action requires the caller entitled to create Splits","operationId":"createEntity","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Split. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Split for the parent Farm. The response body would contain the created Split","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm.Split"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Farms/{FarmsId}/SplitDefaults/{SplitDefaultsId}":{"get":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}/SplitDefaults/{SplitDefaultsId}"],"summary":"Returns latest version of a specific Split belonging to the parent Farmin json format. This action requires the caller entitled to view Splits","operationId":"getEntity","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SplitDefaultsId","in":"path","description":"Id of Split","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Splits","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Split field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Split","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Split fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Split","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Split field. For possible fields, refer to the schema section for Split","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Split belonging to the parent Farm. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm.Split"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}/SplitDefaults/{SplitDefaultsId}"],"summary":"Deletes an existing Split belonging to Farm subject to caller is entitled to delete Splits","description":"Deletes a existing Split.\nSplit is a sub-entity of Farm. This action is subject to caller is entitled to delete Splits","operationId":"deleteEntity","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SplitDefaultsId","in":"path","description":"Id of Split","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Split belonging to the parent Farm","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}/SplitDefaults/{SplitDefaultsId}"],"summary":"Updates an existing Split belonging to Farm subject to caller is entitled to edit Splits","description":"Updates a existing Split.\nSplit is a sub-entity of Farm The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are Counterparty,Percentage.\n For possible entity Fields, refer to the schema section for Split in json format, subject to caller is entitled to edit Splits","operationId":"updateEntity","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SplitDefaultsId","in":"path","description":"Id of Split","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Split. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Split belonging to the parent Farm. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm.Split"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/InvestmentManagers":{"get":{"tags":["/Counterparty/{Id}/InvestmentManagers"],"summary":"Returns latest versions of all matching Investment managers belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Investment managers","operationId":"getEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Investment manager field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for InvestmentManager","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Investment manager field. For possible fields, refer to the schema section for InvestmentManager","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Investment manager fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for InvestmentManager","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Investment managers","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Investment managers belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.InvestmentManager"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/InvestmentManagers"],"summary":"Creates a new Investment manager belonging to Counterparty. This action requires the caller entitled to create Investment managers","description":"Creates a new  Investment manager.\nInvestment manager is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is InvestmentManager.\n For possible entity Fields, refer to the schema section for InvestmentManager. This action requires the caller entitled to create Investment managers","operationId":"createEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Investment manager. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Investment manager for the parent Counterparty. The response body would contain the created Investment manager","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.InvestmentManager"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/InvestmentManagers/{InvestmentManagersId}":{"get":{"tags":["/Counterparty/{Id}/InvestmentManagers/{InvestmentManagersId}"],"summary":"Returns latest version of a specific Investment manager belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Investment managers","operationId":"getEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"InvestmentManagersId","in":"path","description":"Id of Investment manager","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Investment manager field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for InvestmentManager","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Investment manager field. For possible fields, refer to the schema section for InvestmentManager","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Investment manager fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for InvestmentManager","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Investment managers","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Investment manager belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.InvestmentManager"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/InvestmentManagers/{InvestmentManagersId}"],"summary":"Deletes an existing Investment manager belonging to Counterparty subject to caller is entitled to delete Investment managers","description":"Deletes a existing Investment manager.\nInvestment manager is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Investment managers","operationId":"deleteEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"InvestmentManagersId","in":"path","description":"Id of Investment manager","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Investment manager belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/InvestmentManagers/{InvestmentManagersId}"],"summary":"Updates an existing Investment manager belonging to Counterparty subject to caller is entitled to edit Investment managers","description":"Updates a existing Investment manager.\nInvestment manager is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is InvestmentManager.\n For possible entity Fields, refer to the schema section for InvestmentManager in json format, subject to caller is entitled to edit Investment managers","operationId":"updateEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"InvestmentManagersId","in":"path","description":"Id of Investment manager","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Investment manager. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Investment manager belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.InvestmentManager"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/SWIFTFields":{"get":{"tags":["/Counterparty/{Id}/SWIFTFields"],"summary":"Returns latest versions of all matching SWIFT fieldses belonging to the parent Counterpartyin json format. This action requires the caller entitled to view SWIFT fieldses","operationId":"getEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the SWIFT fields field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for SWIFTFields","schema":{},"examples":{"Filter by Field87Line5, not in operator":{"description":"Filter by Field87Line5, not in operator","value":"Field87Line5,NOT_IN,A,B,C"},"Filter by Field87Line5, in operator":{"description":"Filter by Field87Line5, in operator","value":"Field87Line5,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of SWIFT fields fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for SWIFTFields","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned SWIFT fieldses","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any SWIFT fields field. For possible fields, refer to the schema section for SWIFTFields","schema":{},"examples":{"Sort by Field87Line5, ascending order":{"description":"Sort by Field87Line5, ascending order","value":"Field87Line5:ASC"},"Sort by Field87Line5, descending order":{"description":"Sort by Field87Line5, descending order","value":"Field87Line5:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching SWIFT fieldses belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.SWIFTFields"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/SWIFTFields"],"summary":"Creates a new SWIFT fields belonging to Counterparty. This action requires the caller entitled to create SWIFT fieldses","description":"Creates a new  SWIFT fields.\nSWIFT fields is a sub-entity of  CounterpartyFields required for creation is ConfirmationFieldType.\n For possible entity Fields, refer to the schema section for SWIFTFields. This action requires the caller entitled to create SWIFT fieldses","operationId":"createEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the SWIFT fields. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of SWIFT fields for the parent Counterparty. The response body would contain the created SWIFT fields","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.SWIFTFields"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/SWIFTFields/{SwIFTFieldsId}":{"get":{"tags":["/Counterparty/{Id}/SWIFTFields/{SwIFTFieldsId}"],"summary":"Returns latest version of a specific SWIFT fields belonging to the parent Counterpartyin json format. This action requires the caller entitled to view SWIFT fieldses","operationId":"getEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SwIFTFieldsId","in":"path","description":"Id of SWIFT fields","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the SWIFT fields field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for SWIFTFields","schema":{},"examples":{"Filter by Field87Line5, not in operator":{"description":"Filter by Field87Line5, not in operator","value":"Field87Line5,NOT_IN,A,B,C"},"Filter by Field87Line5, in operator":{"description":"Filter by Field87Line5, in operator","value":"Field87Line5,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of SWIFT fields fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for SWIFTFields","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned SWIFT fieldses","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any SWIFT fields field. For possible fields, refer to the schema section for SWIFTFields","schema":{},"examples":{"Sort by Field87Line5, ascending order":{"description":"Sort by Field87Line5, ascending order","value":"Field87Line5:ASC"},"Sort by Field87Line5, descending order":{"description":"Sort by Field87Line5, descending order","value":"Field87Line5:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific SWIFT fields belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.SWIFTFields"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/SWIFTFields/{SwIFTFieldsId}"],"summary":"Deletes an existing SWIFT fields belonging to Counterparty subject to caller is entitled to delete SWIFT fieldses","description":"Deletes a existing SWIFT fields.\nSWIFT fields is a sub-entity of Counterparty. This action is subject to caller is entitled to delete SWIFT fieldses","operationId":"deleteEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SwIFTFieldsId","in":"path","description":"Id of SWIFT fields","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific SWIFT fields belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/SWIFTFields/{SwIFTFieldsId}"],"summary":"Updates an existing SWIFT fields belonging to Counterparty subject to caller is entitled to edit SWIFT fieldses","description":"Updates a existing SWIFT fields.\nSWIFT fields is a sub-entity of CounterpartyFields required to be passed while editing is ConfirmationFieldType.\n For possible entity Fields, refer to the schema section for SWIFTFields in json format, subject to caller is entitled to edit SWIFT fieldses","operationId":"updateEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SwIFTFieldsId","in":"path","description":"Id of SWIFT fields","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified SWIFT fields. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific SWIFT fields belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.SWIFTFields"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/SplitDefaults":{"get":{"tags":["/Counterparty/{Id}/SplitDefaults"],"summary":"Returns latest versions of all matching Splits belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Splits","operationId":"getEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Splits","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Split field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Split","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Split fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Split","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Split field. For possible fields, refer to the schema section for Split","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Splits belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Split"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/SplitDefaults"],"summary":"Creates a new Split belonging to Counterparty. This action requires the caller entitled to create Splits","description":"Creates a new  Split.\nSplit is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are Counterparty,Percentage.\n For possible entity Fields, refer to the schema section for Split. This action requires the caller entitled to create Splits","operationId":"createEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Split. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Split for the parent Counterparty. The response body would contain the created Split","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Split"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/SplitDefaults/{SplitDefaultsId}":{"get":{"tags":["/Counterparty/{Id}/SplitDefaults/{SplitDefaultsId}"],"summary":"Returns latest version of a specific Split belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Splits","operationId":"getEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SplitDefaultsId","in":"path","description":"Id of Split","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Splits","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Split field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Split","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Split fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Split","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Split field. For possible fields, refer to the schema section for Split","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Split belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Split"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/SplitDefaults/{SplitDefaultsId}"],"summary":"Deletes an existing Split belonging to Counterparty subject to caller is entitled to delete Splits","description":"Deletes a existing Split.\nSplit is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Splits","operationId":"deleteEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SplitDefaultsId","in":"path","description":"Id of Split","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Split belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/SplitDefaults/{SplitDefaultsId}"],"summary":"Updates an existing Split belonging to Counterparty subject to caller is entitled to edit Splits","description":"Updates a existing Split.\nSplit is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are Counterparty,Percentage.\n For possible entity Fields, refer to the schema section for Split in json format, subject to caller is entitled to edit Splits","operationId":"updateEntity","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SplitDefaultsId","in":"path","description":"Id of Split","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Split. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Split belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Split"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/binary/Counterparty/{Id}/Contacts/{ContactsId}/Signature":{"get":{"tags":["/binary/Counterparty/{Id}/Contacts/{ContactsId}/Signature"],"summary":"Returns latest version of the Signature of Contact, subject to caller's view entitlements","operationId":"downloadBinary","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  downloading of Signature of Contact. The response body would contain the downloaded Signature","headers":{"Location":{"description":"Location of the existing binary resource","style":"simple"}},"content":{"application/octet-stream":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Contact"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/binary/Counterparty/{Id}/Contacts/{ContactsId}/Signature"],"summary":"Deletes an existing Contact belonging to Contact subject to caller is entitled to delete Contacts","description":"Deletes a existing Contact.\nContact is a sub-entity of Contact. This action is subject to caller is entitled to delete Contacts","operationId":"removeBinary","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of Signature of Contact","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/binary/Counterparty/{Id}/Contacts/{ContactsId}/Signature"],"summary":"Updates an existing Contact belonging to Contact subject to caller is entitled to edit Contacts","description":"Updates a existing Contact.\nContact is a sub-entity of Contact The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Contact in json format, subject to caller is entitled to edit Contacts","operationId":"uploadBinary","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Contact. Any subentity field (if any) would be ignored.","content":{"*/*":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of Signature of Contact. The response body would contain the updated entity with the Signature containing the generated id of the updated file","headers":{"ETag":{"description":"ETag of the resource in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated resource","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Contact"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}}},"components":{"schemas":{"Counterparty.Address":{"properties":{"AddressLine1":{"type":"string","deprecated":false,"description":"Address line 1."},"AddressLine2":{"type":"string","deprecated":false,"description":"Address line 2."},"AddressLine3":{"type":"string","deprecated":false,"description":"Address line 3."},"AddressLine4":{"type":"string","deprecated":false,"description":"Address line 4."},"AddressLine5":{"type":"string","deprecated":false,"description":"Address line 5."},"AddressLine6":{"type":"string","deprecated":false,"description":"(Temp) Address line 6."},"AddressLine7":{"type":"string","deprecated":false,"description":"(Temp) Address line 7."},"AddressTypeId":{"type":"string","deprecated":false},"Area":{"type":"string","deprecated":false,"description":"Specifies the account owner's resident geographical region or area."},"Block":{"type":"string","deprecated":false,"description":"Area of land bounded by streets."},"BuildingName":{"type":"string","deprecated":false,"description":"Name of the building or house."},"BuildingNumber":{"type":"string","deprecated":false,"description":"Number that identifies the position of a building on a street."},"Country":{"type":"string","deprecated":false,"description":"Country of the address"},"CountrySubDivision":{"type":"string","deprecated":false,"description":"Codified representation of the jurisdiction as published in ISO 3166-2."},"CountyIdentification":{"type":"string","deprecated":false,"description":"Identifier of a county."},"Department":{"type":"string","deprecated":false,"description":"Identification of a division of a large organization or building."},"Description":{"type":"string","deprecated":false,"description":"Description of the address"},"DistrictName":{"type":"string","deprecated":false,"description":"Name of a district, i.e. a part of a town or region."},"Email":{"type":"string","deprecated":false,"description":"Email of the address"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Fax":{"type":"string","deprecated":false,"description":"Fax Number of the address"},"Floor":{"type":"string","deprecated":false,"description":"Floor or store within a building."},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Address. If not provided while creating Address the id is internally generated. This field cannot be edited."},"Lot":{"type":"string","deprecated":false,"description":"Identification of an allotment of land."},"Phone":{"type":"string","deprecated":false,"description":"Phone number of the address"},"PostCode":{"type":"string","deprecated":false,"description":"Post code of the address"},"PostOfficeBox":{"type":"string","deprecated":false,"description":"Numbered box in a post office, assigned to a person or organization, where letters are kept until called for."},"Province":{"type":"string","deprecated":false,"description":"A territory governed as an administrative or political unit of a country."},"RegionIdentification":{"type":"string","deprecated":false,"description":"Identification of an administrative division of a country, state, or territory."},"ShortAddressLine1":{"type":"string","deprecated":false,"description":"Short address line 1."},"ShortAddressLine2":{"type":"string","deprecated":false,"description":"Short address line 2."},"ShortAddressLine3":{"type":"string","deprecated":false,"description":"Short address line 3."},"ShortAddressLine4":{"type":"string","deprecated":false,"description":"Short address line 4."},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."},"State":{"type":"string","deprecated":false,"description":"State of the address"},"Street":{"type":"string","deprecated":false,"description":"Street of the address"},"SubDepartment":{"type":"string","deprecated":false,"description":"Identification of a sub-division of a large organization or building."},"Town":{"type":"string","deprecated":false,"description":"Town of the address"}},"required":["AddressTypeId"]},"Counterparty.DepositoryCode":{"properties":{"Code":{"type":"string","deprecated":false},"Format":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Depository code. If not provided while creating Depository code the id is internally generated. This field cannot be edited."}},"required":["Format","Code"]},"Counterparty.ClearingCode":{"properties":{"ClearingFormat":{"type":"string","deprecated":false},"ClearingSystem":{"type":"string","deprecated":false},"Code":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Clearing code. If not provided while creating Clearing code the id is internally generated. This field cannot be edited."},"Type":{"type":"string","deprecated":false}},"required":["ClearingFormat","Type","Code","ClearingSystem"]},"Counterparty.BICTypeRelation":{"properties":{"BIC":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the BIC Type Relation. If not provided while creating BIC Type Relation the id is internally generated. This field cannot be edited."},"Type":{"type":"string","deprecated":false}},"required":["Type","BIC"]},"Counterparty.BusinessUnitSubEntity":{"properties":{"BusinessUnit":{"type":"string","deprecated":false},"Currency":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Business Unit Relation. If not provided while creating Business Unit Relation the id is internally generated. This field cannot be edited."}},"required":["BusinessUnit"]},"Counterparty.Farm.Split":{"properties":{"Counterparty":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Split. If not provided while creating Split the id is internally generated. This field cannot be edited."},"Percentage":{"deprecated":false}},"required":["Counterparty","Percentage"]},"Counterparty.BankAccount":{"properties":{"ABANumber":{"type":"string","deprecated":false,"description":"ABA routing number for the account"},"AccountName":{"type":"string","deprecated":false,"description":"The account name for this account"},"AccountNumber":{"type":"string","deprecated":false},"Default":{"type":"boolean","deprecated":false,"description":"Default account for the counterparty"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Bank account. If not provided while creating Bank account the id is internally generated. This field cannot be edited."},"Name":{"type":"string","deprecated":false,"description":"Display name of the Bank account"},"Remarks":{"type":"string","deprecated":false,"description":"General remarks"},"SwiftCode":{"type":"string","deprecated":false},"ViaBank":{"type":"string","deprecated":false}},"required":["Name"]},"Counterparty.Contact":{"properties":{"ContactTypeId":{"type":"string","deprecated":false,"description":"Classification of the contact according to the configurable contact types"},"Description":{"type":"string","deprecated":false,"description":"Description of the contact"},"Email":{"type":"string","deprecated":false,"description":"Main email address of the contact"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Fax":{"type":"string","deprecated":false,"description":"Main fax number of the contact"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Contact. If not provided while creating Contact the id is internally generated. This field cannot be edited."},"Mobile":{"type":"string","deprecated":false,"description":"Mobile phone number of the contact."},"Name":{"type":"string","deprecated":false,"description":"Name of the contact"},"NamePrefix":{"type":"string","deprecated":false,"description":"Prefix to apply to the contact name."},"Other":{"type":"string","deprecated":false,"description":"Free use text fields for comments, remarks etc"},"Phone":{"type":"string","deprecated":false,"description":"Main phone number of the contact"},"Signature":{"type":"string","format":"binary","deprecated":false,"description":"The image of the signature of the person identified by this contact"},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."}},"required":["Name"]},"Counterparty":{"properties":{"AccountId":{"type":"string","deprecated":false,"description":"Reference ID of the account."},"AccountType":{"type":"integer","format":"int32","deprecated":false,"description":"Type of account.. Possible values: 0 - Unknown, 1 - Broker, 2 - Retail, 3 - Strip/Recon, 4 - Breakdown, 5 - Intradesk, 6 - In-House, 7 - Entity, 8 - ExecBroker, 9 - ClearingHouse","enum":[0,1,2,3,4,5,6,7,8,9]},"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the counterparty. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"Addresses":{"properties":{"AddressLine1":{"type":"string","deprecated":false,"description":"Address line 1."},"AddressLine2":{"type":"string","deprecated":false,"description":"Address line 2."},"AddressLine3":{"type":"string","deprecated":false,"description":"Address line 3."},"AddressLine4":{"type":"string","deprecated":false,"description":"Address line 4."},"AddressLine5":{"type":"string","deprecated":false,"description":"Address line 5."},"AddressLine6":{"type":"string","deprecated":false,"description":"(Temp) Address line 6."},"AddressLine7":{"type":"string","deprecated":false,"description":"(Temp) Address line 7."},"AddressTypeId":{"type":"string","deprecated":false},"Area":{"type":"string","deprecated":false,"description":"Specifies the account owner's resident geographical region or area."},"Block":{"type":"string","deprecated":false,"description":"Area of land bounded by streets."},"BuildingName":{"type":"string","deprecated":false,"description":"Name of the building or house."},"BuildingNumber":{"type":"string","deprecated":false,"description":"Number that identifies the position of a building on a street."},"Country":{"type":"string","deprecated":false,"description":"Country of the address"},"CountrySubDivision":{"type":"string","deprecated":false,"description":"Codified representation of the jurisdiction as published in ISO 3166-2."},"CountyIdentification":{"type":"string","deprecated":false,"description":"Identifier of a county."},"Department":{"type":"string","deprecated":false,"description":"Identification of a division of a large organization or building."},"Description":{"type":"string","deprecated":false,"description":"Description of the address"},"DistrictName":{"type":"string","deprecated":false,"description":"Name of a district, i.e. a part of a town or region."},"Email":{"type":"string","deprecated":false,"description":"Email of the address"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Fax":{"type":"string","deprecated":false,"description":"Fax Number of the address"},"Floor":{"type":"string","deprecated":false,"description":"Floor or store within a building."},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Address. If not provided while creating Address the id is internally generated. This field cannot be edited."},"Lot":{"type":"string","deprecated":false,"description":"Identification of an allotment of land."},"Phone":{"type":"string","deprecated":false,"description":"Phone number of the address"},"PostCode":{"type":"string","deprecated":false,"description":"Post code of the address"},"PostOfficeBox":{"type":"string","deprecated":false,"description":"Numbered box in a post office, assigned to a person or organization, where letters are kept until called for."},"Province":{"type":"string","deprecated":false,"description":"A territory governed as an administrative or political unit of a country."},"RegionIdentification":{"type":"string","deprecated":false,"description":"Identification of an administrative division of a country, state, or territory."},"ShortAddressLine1":{"type":"string","deprecated":false,"description":"Short address line 1."},"ShortAddressLine2":{"type":"string","deprecated":false,"description":"Short address line 2."},"ShortAddressLine3":{"type":"string","deprecated":false,"description":"Short address line 3."},"ShortAddressLine4":{"type":"string","deprecated":false,"description":"Short address line 4."},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."},"State":{"type":"string","deprecated":false,"description":"State of the address"},"Street":{"type":"string","deprecated":false,"description":"Street of the address"},"SubDepartment":{"type":"string","deprecated":false,"description":"Identification of a sub-division of a large organization or building."},"Town":{"type":"string","deprecated":false,"description":"Town of the address"}},"required":["AddressTypeId"]},"BICs":{"properties":{"BIC":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the BIC Type Relation. If not provided while creating BIC Type Relation the id is internally generated. This field cannot be edited."},"Type":{"type":"string","deprecated":false}},"required":["Type","BIC"]},"BankAccounts":{"properties":{"ABANumber":{"type":"string","deprecated":false,"description":"ABA routing number for the account"},"AccountName":{"type":"string","deprecated":false,"description":"The account name for this account"},"AccountNumber":{"type":"string","deprecated":false},"Default":{"type":"boolean","deprecated":false,"description":"Default account for the counterparty"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Bank account. If not provided while creating Bank account the id is internally generated. This field cannot be edited."},"Name":{"type":"string","deprecated":false,"description":"Display name of the Bank account"},"Remarks":{"type":"string","deprecated":false,"description":"General remarks"},"SwiftCode":{"type":"string","deprecated":false},"ViaBank":{"type":"string","deprecated":false}},"required":["Name"]},"BlockId":{"type":"string","deprecated":false,"description":"Associated block counterparty ID."},"BulkConfirmationExpected":{"type":"boolean","deprecated":false,"description":"When true, this counterparty expects to receive bulk confirmations."},"BusinessUnits":{"properties":{"BusinessUnit":{"type":"string","deprecated":false},"Currency":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Business Unit Relation. If not provided while creating Business Unit Relation the id is internally generated. This field cannot be edited."}},"required":["BusinessUnit"]},"CLSParticipantType":{"type":"integer","format":"int32","deprecated":false,"description":"Kind of member the counterparty engages in CLS session.. Possible values: 2 - Settlement, 4 - Third party","enum":[2,4]},"ClearingAgent":{"type":"boolean","deprecated":false,"description":"When true, this counterparty is also a clearing agent."},"ClearingCodes":{"properties":{"ClearingFormat":{"type":"string","deprecated":false},"ClearingSystem":{"type":"string","deprecated":false},"Code":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Clearing code. If not provided while creating Clearing code the id is internally generated. This field cannot be edited."},"Type":{"type":"string","deprecated":false}},"required":["ClearingFormat","Type","Code","ClearingSystem"]},"ClearingFCM":{"type":"boolean","deprecated":false,"description":"When true, this counterparty is also a clearing member firm of one or more exchanges."},"ClearingMatcher":{"type":"string","deprecated":false,"description":"The third party provider that performs matching for clearing eligible trades against the counterparty."},"ClearingMemberGroup":{"type":"string","deprecated":false,"description":"Clearing member group."},"Code":{"type":"string","deprecated":false,"description":"Code or abbreviation of the counterparty"},"CodeMappingJsonFmt":{"type":"string","deprecated":false,"description":"List of all available code type values. DEPRECATED: Use native CT_ fields instead."},"ConfirmationNeeded":{"type":"boolean","deprecated":false,"description":"When true, confirmations should be produced and a confirmation profile should be selected on trades with this counterparty."},"ConfirmationPlatform":{"type":"string","deprecated":false,"description":"Confirmation platform used by the counterparty"},"Contacts":{"properties":{"ContactTypeId":{"type":"string","deprecated":false,"description":"Classification of the contact according to the configurable contact types"},"Description":{"type":"string","deprecated":false,"description":"Description of the contact"},"Email":{"type":"string","deprecated":false,"description":"Main email address of the contact"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Fax":{"type":"string","deprecated":false,"description":"Main fax number of the contact"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Contact. If not provided while creating Contact the id is internally generated. This field cannot be edited."},"Mobile":{"type":"string","deprecated":false,"description":"Mobile phone number of the contact."},"Name":{"type":"string","deprecated":false,"description":"Name of the contact"},"NamePrefix":{"type":"string","deprecated":false,"description":"Prefix to apply to the contact name."},"Other":{"type":"string","deprecated":false,"description":"Free use text fields for comments, remarks etc"},"Phone":{"type":"string","deprecated":false,"description":"Main phone number of the contact"},"Signature":{"type":"string","format":"binary","deprecated":false,"description":"The image of the signature of the person identified by this contact"},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."}},"required":["Name"]},"CounterpartyConfirmationForCLSRequired":{"type":"boolean","deprecated":false,"description":"When true, this counterparty requires a confirmation for CLS trades."},"Country":{"type":"string","deprecated":false,"description":"Country of the counterparty"},"Custodian":{"type":"string","deprecated":false},"CustomerAccountCode":{"type":"string","deprecated":false,"description":"Customer Account Code"},"DateLastReviewed":{"format":"date","deprecated":false,"description":"Date the counterparty data has been reviewed the last time by an authorized user."},"DealerBIC":{"type":"string","deprecated":false,"description":"The Bank Identifier Code, as a 4-character unique identifier for each bank that executed and reported an OTC trade, as required by MiFID."},"DepositoryCodes":{"properties":{"Code":{"type":"string","deprecated":false},"Format":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Depository code. If not provided while creating Depository code the id is internally generated. This field cannot be edited."}},"required":["Format","Code"]},"DvPSettlement":{"type":"boolean","deprecated":false,"description":"When true, this counterparty settles using Delivery versus Payment."},"EconomicArea":{"type":"string","deprecated":false,"description":"Economic are for reporting purposes"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Use 'Subtype' instead."},"EntityType":{"type":"string","deprecated":true,"description":"Use 'Type' instead."},"Farms":{"properties":{"Description":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Farm. If not provided while creating Farm the id is internally generated. This field cannot be edited."},"Name":{"type":"string","deprecated":false},"SplitDefaults":{"properties":{"Counterparty":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Split. If not provided while creating Split the id is internally generated. This field cannot be edited."},"Percentage":{"deprecated":false}},"required":["Counterparty","Percentage"]}},"required":["Name"]},"Field50FormatOption":{"type":"integer","format":"int32","deprecated":false,"description":"Ordering customer format code.. Possible values: 0 - F, 1 - K","enum":[0,1]},"Field50Line1":{"type":"string","deprecated":false,"description":"Ordering customer line 1"},"Field50Line2":{"type":"string","deprecated":false,"description":"Ordering customer line 2"},"Field50Line3":{"type":"string","deprecated":false,"description":"Ordering customer line 3"},"Field50Line4":{"type":"string","deprecated":false,"description":"Ordering customer line 4"},"Field50Line5":{"type":"string","deprecated":false,"description":"Ordering customer line 5"},"FunctionalCurrency":{"type":"string","deprecated":false,"description":"Currency of the counterparty"},"FundManager":{"type":"boolean","deprecated":false,"description":"True when this counterparty is also a fund manager."},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Counterparty. If not provided while creating Counterparty the id is internally generated. This field cannot be edited."},"IndirectOnly":{"type":"boolean","deprecated":false,"description":"When true, a counterparty usually trades indirect but capable of trading direct."},"InvestmentManagers":{"properties":{"Default":{"type":"boolean","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"InvestmentManager":{"type":"string","deprecated":false}},"required":["InvestmentManager"]},"LegalEntity":{"type":"string","deprecated":false,"description":"Legal entity identifier of the bank managing the counterparty ('Us')"},"LegalEntityIdentifier":{"type":"string","deprecated":false,"description":"Global identifier of the legal entity (LEI)"},"MultimanagedAccount":{"type":"boolean","deprecated":false,"description":"True when this counterparty is managed by more than one fund manager."},"Name":{"type":"string","deprecated":false,"description":"Full name of the counterparty"},"NotDefaultConfirmProfile":{"type":"boolean","deprecated":false,"description":"When true, a confirmation profile should not be assigned for this counterparty unless it is configured directly on the counterparty."},"ParentCompany":{"type":"string","deprecated":false,"description":"Parent company of the counterparty"},"ParentKey":{"type":"string","deprecated":false,"description":"Parent key."},"PartOfGroups":{"type":"array","deprecated":false,"items":{"type":"string"}},"PrioritySettlement":{"type":"boolean","deprecated":false,"description":"When true, this counterparty's settlements should be processed with priority."},"Remarks":{"type":"string","deprecated":false,"description":"General remarks"},"RequiresInternalTradeMessage":{"type":"boolean","deprecated":false},"ReviewOneOffSSIAttach":{"type":"boolean","deprecated":false,"description":"When true, third party payment counterparty one-off SSIs must be reviewed."},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SSIParent":{"type":"string","deprecated":false},"SWIFTFields":{"properties":{"ConfirmationFieldType":{"type":"string","deprecated":false},"Field72Line1":{"type":"string","deprecated":false},"Field72Line2":{"type":"string","deprecated":false},"Field72Line3":{"type":"string","deprecated":false},"Field72Line4":{"type":"string","deprecated":false},"Field72Line5":{"type":"string","deprecated":false},"Field72Line6":{"type":"string","deprecated":false},"Field83FormatOption":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - A, 1 - J","enum":[0,1]},"Field83Line1":{"type":"string","deprecated":false},"Field83Line2":{"type":"string","deprecated":false},"Field83Line3":{"type":"string","deprecated":false},"Field83Line4":{"type":"string","deprecated":false},"Field83Line5":{"type":"string","deprecated":false},"Field87FormatOption":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - A, 1 - J","enum":[0,1]},"Field87Line1":{"type":"string","deprecated":false},"Field87Line2":{"type":"string","deprecated":false},"Field87Line3":{"type":"string","deprecated":false},"Field87Line4":{"type":"string","deprecated":false},"Field87Line5":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"}},"required":["ConfirmationFieldType"]},"SalesRepresentatives":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of sales representatives associated to this counterparty."}},"ShortName":{"type":"string","deprecated":false,"description":"Short name of the counterparty used for display when full name is too long"},"SkipSettle":{"type":"boolean","deprecated":false,"description":"When true, trades for this counterparty should not settle in the back office."},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."},"SplitComments":{"type":"string","deprecated":false},"SplitDefaults":{"properties":{"Counterparty":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Split. If not provided while creating Split the id is internally generated. This field cannot be edited."},"Percentage":{"deprecated":false}},"required":["Counterparty","Percentage"]},"StatusCMD":{"type":"string","deprecated":false,"description":"Status of the counterparty for commodities"},"StatusStr":{"type":"string","deprecated":false},"Subcustodian":{"type":"string","deprecated":false},"Subtype":{"type":"string","deprecated":false,"description":"Classification of the counterparty according to the configurable counterparty subtype"},"SuppressTBAAmendConfirmations":{"type":"boolean","deprecated":false,"description":"When true, this counterparty should not receive TBA confirmation amendments."},"TBAConfirmation":{"type":"boolean","deprecated":false,"description":"When true, this counterparty expects to receive TBA confirmations."},"TaxCode":{"type":"string","deprecated":false,"description":"Classification of the tax number according to the configurable tax types"},"TaxNumber":{"type":"string","deprecated":false},"ThirdPartyPayments":{"type":"boolean","deprecated":false,"description":"When true, counterparty one-off instructions can be extracted from the counterparty MT300 and saved on a trade automatically (provided SSI data is correct)."},"ThirdPartyProvider":{"type":"string","deprecated":false,"description":"When CLS participant type = Third Party, the identifier of the Third Party Provider. Either the Third party provider identifier or the Third party provider BIC will be populated."},"ThirdPartyProviderBIC":{"type":"string","deprecated":false,"description":"When CLS participant type = Third Party, the BIC of the Third Party Provider. Either the Third party provider identifier or the Third party provider BIC will be populated."},"TrustBank":{"type":"string","deprecated":false},"Type":{"type":"string","deprecated":false,"description":"Classification of the counterparty according to the configurable counterparty type"},"TypeCMD":{"type":"array","deprecated":false,"items":{"type":"string","description":"Type of the counterparty for commodities"}},"VendorAccountCode":{"type":"string","deprecated":false,"description":"Vendor Account Code"},"VerifySignature":{"type":"boolean","deprecated":false,"description":"When true, a captured image to manually compare against signed confirm is required."},"WithholdingTaxExemptionReason":{"type":"string","deprecated":false,"description":"Why this counterparty is exempt from withholding tax."},"WithholdingTaxLiable":{"type":"boolean","deprecated":false,"description":"When true, this counterparty is liable for withholding tax."},"__RESERVED_ALL_CPTYS_HrcParent":{"type":"string","deprecated":true,"description":"To be used by RefData only."}},"required":["ShortName","Name"]},"Counterparty.InvestmentManager":{"properties":{"Default":{"type":"boolean","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"InvestmentManager":{"type":"string","deprecated":false}},"required":["InvestmentManager"]},"Counterparty.Split":{"properties":{"Counterparty":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Split. If not provided while creating Split the id is internally generated. This field cannot be edited."},"Percentage":{"deprecated":false}},"required":["Counterparty","Percentage"]},"Counterparty.SWIFTFields":{"properties":{"ConfirmationFieldType":{"type":"string","deprecated":false},"Field72Line1":{"type":"string","deprecated":false},"Field72Line2":{"type":"string","deprecated":false},"Field72Line3":{"type":"string","deprecated":false},"Field72Line4":{"type":"string","deprecated":false},"Field72Line5":{"type":"string","deprecated":false},"Field72Line6":{"type":"string","deprecated":false},"Field83FormatOption":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - A, 1 - J","enum":[0,1]},"Field83Line1":{"type":"string","deprecated":false},"Field83Line2":{"type":"string","deprecated":false},"Field83Line3":{"type":"string","deprecated":false},"Field83Line4":{"type":"string","deprecated":false},"Field83Line5":{"type":"string","deprecated":false},"Field87FormatOption":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - A, 1 - J","enum":[0,1]},"Field87Line1":{"type":"string","deprecated":false},"Field87Line2":{"type":"string","deprecated":false},"Field87Line3":{"type":"string","deprecated":false},"Field87Line4":{"type":"string","deprecated":false},"Field87Line5":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"}},"required":["ConfirmationFieldType"]},"Counterparty.Farm":{"properties":{"Description":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Farm. If not provided while creating Farm the id is internally generated. This field cannot be edited."},"Name":{"type":"string","deprecated":false},"SplitDefaults":{"properties":{"Counterparty":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Split. If not provided while creating Split the id is internally generated. This field cannot be edited."},"Percentage":{"deprecated":false}},"required":["Counterparty","Percentage"]}},"required":["Name"]},"RestServiceError":{"properties":{"ErrorMessage":{"type":"string","description":"Error message"},"ErrCode":{"type":"integer","format":"int32","description":"Error code"}}},"Rest4EyesMessage":{"properties":{"Message":{"type":"string","description":"Message"}}}}}}