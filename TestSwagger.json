{"openapi":"3.0.1","info":{"title":"RDX Rest API","description":"List of endpoints and schemas to create, update, delete and search entities and their sub-entities supported by RDX server","version":"V31"},"servers":[{"url":"http://localhost:8080/ionweb/r/restapi/RDX_CPS/"}],"paths":{"/AcurisPrimeIndustry":{"get":{"tags":["/AcurisPrimeIndustry"],"summary":"Returns latest versions of all matching Acuris Prime industriesin json format. This action requires the caller entitled to view Acuris Prime industries","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Acuris Prime industry fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for AcurisPrimeIndustry","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Acuris Prime industry field. For possible fields, refer to the schema section for AcurisPrimeIndustry","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Acuris Prime industry field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for AcurisPrimeIndustry","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Acuris Prime industries","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Acuris Prime industries. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AcurisPrimeIndustry"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/AcurisPrimeIndustry"],"summary":"Creates a new Acuris Prime industry. This action requires the caller entitled to create Acuris Prime industries","description":"Creates a new  Acuris Prime industry.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are Code,Name.\n For possible entity Fields, refer to the schema section for AcurisPrimeIndustry. This action requires the caller entitled to create Acuris Prime industries","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Acuris Prime industry. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Acuris Prime industry. The response body would contain the created Acuris Prime industry","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AcurisPrimeIndustry"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/AcurisPrimeIndustry/{Id}":{"get":{"tags":["/AcurisPrimeIndustry/{Id}"],"summary":"Returns latest version of a specific Acuris Prime industryin json format. This action requires the caller entitled to view Acuris Prime industries","parameters":[{"name":"Id","in":"path","description":"Id of Acuris Prime industry","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Acuris Prime industry fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for AcurisPrimeIndustry","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Acuris Prime industry field. For possible fields, refer to the schema section for AcurisPrimeIndustry","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Acuris Prime industry field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for AcurisPrimeIndustry","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Acuris Prime industries","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Acuris Prime industry. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AcurisPrimeIndustry"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/AcurisPrimeIndustry/{Id}"],"summary":"Deletes an existing Acuris Prime industry subject to caller is entitled to delete Acuris Prime industries","description":"Deletes a existing Acuris Prime industry.\n. This action is subject to caller is entitled to delete Acuris Prime industries","parameters":[{"name":"Id","in":"path","description":"Id of Acuris Prime industry","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Acuris Prime industry","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/AcurisPrimeIndustry/{Id}"],"summary":"Updates an existing Acuris Prime industry subject to caller is entitled to edit Acuris Prime industries","description":"Updates a existing Acuris Prime industry.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are Code,Name.\n For possible entity Fields, refer to the schema section for AcurisPrimeIndustry in json format, subject to caller is entitled to edit Acuris Prime industries","parameters":[{"name":"Id","in":"path","description":"Id of Acuris Prime industry","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Acuris Prime industry. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Acuris Prime industry. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AcurisPrimeIndustry"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/AddressType":{"get":{"tags":["/AddressType"],"summary":"Returns latest versions of all matching Address typesin json format. This action requires the caller entitled to view Address types","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Address type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for AddressType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Address types","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Address type field. For possible fields, refer to the schema section for AddressType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Address type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for AddressType","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Address types. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AddressType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/AddressType"],"summary":"Creates a new Address type. This action requires the caller entitled to create Address types","description":"Creates a new  Address type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for AddressType. This action requires the caller entitled to create Address types","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Address type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Address type. The response body would contain the created Address type","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AddressType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/AddressType/{Id}":{"get":{"tags":["/AddressType/{Id}"],"summary":"Returns latest version of a specific Address typein json format. This action requires the caller entitled to view Address types","parameters":[{"name":"Id","in":"path","description":"Id of Address type","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Address type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for AddressType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Address types","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Address type field. For possible fields, refer to the schema section for AddressType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Address type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for AddressType","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Address type. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AddressType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/AddressType/{Id}"],"summary":"Deletes an existing Address type subject to caller is entitled to delete Address types","description":"Deletes a existing Address type.\n. This action is subject to caller is entitled to delete Address types","parameters":[{"name":"Id","in":"path","description":"Id of Address type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Address type","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/AddressType/{Id}"],"summary":"Updates an existing Address type subject to caller is entitled to edit Address types","description":"Updates a existing Address type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for AddressType in json format, subject to caller is entitled to edit Address types","parameters":[{"name":"Id","in":"path","description":"Id of Address type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Address type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Address type. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AddressType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/AnalysisCode":{"get":{"tags":["/AnalysisCode"],"summary":"Returns latest versions of all matching Analysis codesin json format. This action requires the caller entitled to view Analysis codes","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Analysis code field. For possible fields, refer to the schema section for AnalysisCode","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Analysis code field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for AnalysisCode","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Analysis code fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for AnalysisCode","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Analysis codes","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Analysis codes. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AnalysisCode"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/AnalysisCode"],"summary":"Creates a new Analysis code. This action requires the caller entitled to create Analysis codes","description":"Creates a new  Analysis code.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for AnalysisCode. This action requires the caller entitled to create Analysis codes","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Analysis code. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Analysis code. The response body would contain the created Analysis code","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AnalysisCode"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/AnalysisCode/{Id}":{"get":{"tags":["/AnalysisCode/{Id}"],"summary":"Returns latest version of a specific Analysis codein json format. This action requires the caller entitled to view Analysis codes","parameters":[{"name":"Id","in":"path","description":"Id of Analysis code","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Analysis code field. For possible fields, refer to the schema section for AnalysisCode","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Analysis code field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for AnalysisCode","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Analysis code fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for AnalysisCode","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Analysis codes","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Analysis code. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AnalysisCode"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/AnalysisCode/{Id}"],"summary":"Deletes an existing Analysis code subject to caller is entitled to delete Analysis codes","description":"Deletes a existing Analysis code.\n. This action is subject to caller is entitled to delete Analysis codes","parameters":[{"name":"Id","in":"path","description":"Id of Analysis code","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Analysis code","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/AnalysisCode/{Id}"],"summary":"Updates an existing Analysis code subject to caller is entitled to edit Analysis codes","description":"Updates a existing Analysis code.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for AnalysisCode in json format, subject to caller is entitled to edit Analysis codes","parameters":[{"name":"Id","in":"path","description":"Id of Analysis code","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Analysis code. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Analysis code. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AnalysisCode"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/AnalyticsLocation":{"get":{"tags":["/AnalyticsLocation"],"summary":"Returns latest versions of all matching Locationsin json format. This action requires the caller entitled to view Locations","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Locations","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Location field. For possible fields, refer to the schema section for AnalyticsLocation","schema":{},"examples":{"Sort by Type, descending order":{"description":"Sort by Type, descending order","value":"Type:DESC"},"Sort by Type, ascending order":{"description":"Sort by Type, ascending order","value":"Type:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Location fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for AnalyticsLocation","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Location field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for AnalyticsLocation","schema":{},"examples":{"Filter by Type, not in operator":{"description":"Filter by Type, not in operator","value":"Type,NOT_IN,A,B,C"},"Filter by Type, in operator":{"description":"Filter by Type, in operator","value":"Type,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Locations. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AnalyticsLocation"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/AnalyticsLocation"],"summary":"Creates a new Location. This action requires the caller entitled to create Locations","description":"Creates a new  Location.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are DealogicId,Type,Code,Name.\n For possible entity Fields, refer to the schema section for AnalyticsLocation. This action requires the caller entitled to create Locations","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Location. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Location. The response body would contain the created Location","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AnalyticsLocation"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/AnalyticsLocation/{Id}":{"get":{"tags":["/AnalyticsLocation/{Id}"],"summary":"Returns latest version of a specific Locationin json format. This action requires the caller entitled to view Locations","parameters":[{"name":"Id","in":"path","description":"Id of Location","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Locations","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Location field. For possible fields, refer to the schema section for AnalyticsLocation","schema":{},"examples":{"Sort by Type, descending order":{"description":"Sort by Type, descending order","value":"Type:DESC"},"Sort by Type, ascending order":{"description":"Sort by Type, ascending order","value":"Type:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Location fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for AnalyticsLocation","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Location field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for AnalyticsLocation","schema":{},"examples":{"Filter by Type, not in operator":{"description":"Filter by Type, not in operator","value":"Type,NOT_IN,A,B,C"},"Filter by Type, in operator":{"description":"Filter by Type, in operator","value":"Type,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Location. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AnalyticsLocation"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/AnalyticsLocation/{Id}"],"summary":"Deletes an existing Location subject to caller is entitled to delete Locations","description":"Deletes a existing Location.\n. This action is subject to caller is entitled to delete Locations","parameters":[{"name":"Id","in":"path","description":"Id of Location","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Location","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/AnalyticsLocation/{Id}"],"summary":"Updates an existing Location subject to caller is entitled to edit Locations","description":"Updates a existing Location.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are DealogicId,Type,Code,Name.\n For possible entity Fields, refer to the schema section for AnalyticsLocation in json format, subject to caller is entitled to edit Locations","parameters":[{"name":"Id","in":"path","description":"Id of Location","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Location. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Location. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AnalyticsLocation"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/AttachmentBase":{"get":{"tags":["/AttachmentBase"],"summary":"Returns latest versions of all matching Attachment basesin json format. This action requires the caller entitled to view Attachment bases","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Attachment base field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for AttachmentBase","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Attachment base fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for AttachmentBase","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Attachment base field. For possible fields, refer to the schema section for AttachmentBase","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Attachment bases","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Attachment bases. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AttachmentBase"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/AttachmentBase"],"summary":"Creates a new Attachment base. This action requires the caller entitled to create Attachment bases","description":"Creates a new  Attachment base.\n For possible entity Fields, refer to the schema section for AttachmentBase. This action requires the caller entitled to create Attachment bases","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Attachment base. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Attachment base. The response body would contain the created Attachment base","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AttachmentBase"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/AttachmentBase/{Id}":{"get":{"tags":["/AttachmentBase/{Id}"],"summary":"Returns latest version of a specific Attachment basein json format. This action requires the caller entitled to view Attachment bases","parameters":[{"name":"Id","in":"path","description":"Id of Attachment base","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Attachment base field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for AttachmentBase","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Attachment base fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for AttachmentBase","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Attachment base field. For possible fields, refer to the schema section for AttachmentBase","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Attachment bases","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Attachment base. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AttachmentBase"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/AttachmentBase/{Id}"],"summary":"Deletes an existing Attachment base subject to caller is entitled to delete Attachment bases","description":"Deletes a existing Attachment base.\n. This action is subject to caller is entitled to delete Attachment bases","parameters":[{"name":"Id","in":"path","description":"Id of Attachment base","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Attachment base","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/AttachmentBase/{Id}"],"summary":"Updates an existing Attachment base subject to caller is entitled to edit Attachment bases","description":"Updates a existing Attachment base.\n For possible entity Fields, refer to the schema section for AttachmentBase in json format, subject to caller is entitled to edit Attachment bases","parameters":[{"name":"Id","in":"path","description":"Id of Attachment base","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Attachment base. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Attachment base. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AttachmentBase"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/AttachmentBase/{Id}/Attachments":{"get":{"tags":["/AttachmentBase/{Id}/Attachments"],"summary":"Returns latest versions of all matching Attachments belonging to the parent Attachment basein json format. This action requires the caller entitled to view Attachments","parameters":[{"name":"Id","in":"path","description":"Id of Attachment base","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Attachment field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Attachment","schema":{},"examples":{"Filter by Type, not in operator":{"description":"Filter by Type, not in operator","value":"Type,NOT_IN,A,B,C"},"Filter by Type, in operator":{"description":"Filter by Type, in operator","value":"Type,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Attachment field. For possible fields, refer to the schema section for Attachment","schema":{},"examples":{"Sort by Type, descending order":{"description":"Sort by Type, descending order","value":"Type:DESC"},"Sort by Type, ascending order":{"description":"Sort by Type, ascending order","value":"Type:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Attachment fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Attachment","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Attachments","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Attachments belonging to the parent Attachment base. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AttachmentBase.Attachment"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/AttachmentBase/{Id}/Attachments"],"summary":"Creates a new Attachment belonging to Attachment base. This action requires the caller entitled to create Attachments","description":"Creates a new  Attachment.\nAttachment is a sub-entity of  Attachment base For possible entity Fields, refer to the schema section for Attachment. This action requires the caller entitled to create Attachments","parameters":[{"name":"Id","in":"path","description":"Id of Attachment base","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Attachment. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Attachment for the parent Attachment base. The response body would contain the created Attachment","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AttachmentBase.Attachment"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/AttachmentBase/{Id}/Attachments/{AttachmentsId}":{"get":{"tags":["/AttachmentBase/{Id}/Attachments/{AttachmentsId}"],"summary":"Returns latest version of a specific Attachment belonging to the parent Attachment basein json format. This action requires the caller entitled to view Attachments","parameters":[{"name":"AttachmentsId","in":"path","description":"Id of Attachment","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Attachment base","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Attachment field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Attachment","schema":{},"examples":{"Filter by Type, not in operator":{"description":"Filter by Type, not in operator","value":"Type,NOT_IN,A,B,C"},"Filter by Type, in operator":{"description":"Filter by Type, in operator","value":"Type,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Attachment field. For possible fields, refer to the schema section for Attachment","schema":{},"examples":{"Sort by Type, descending order":{"description":"Sort by Type, descending order","value":"Type:DESC"},"Sort by Type, ascending order":{"description":"Sort by Type, ascending order","value":"Type:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Attachment fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Attachment","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Attachments","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Attachment belonging to the parent Attachment base. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AttachmentBase.Attachment"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/AttachmentBase/{Id}/Attachments/{AttachmentsId}"],"summary":"Deletes an existing Attachment belonging to Attachment base subject to caller is entitled to delete Attachments","description":"Deletes a existing Attachment.\nAttachment is a sub-entity of Attachment base. This action is subject to caller is entitled to delete Attachments","parameters":[{"name":"AttachmentsId","in":"path","description":"Id of Attachment","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Attachment base","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Attachment belonging to the parent Attachment base","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/AttachmentBase/{Id}/Attachments/{AttachmentsId}"],"summary":"Updates an existing Attachment belonging to Attachment base subject to caller is entitled to edit Attachments","description":"Updates a existing Attachment.\nAttachment is a sub-entity of Attachment base For possible entity Fields, refer to the schema section for Attachment in json format, subject to caller is entitled to edit Attachments","parameters":[{"name":"AttachmentsId","in":"path","description":"Id of Attachment","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Attachment base","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Attachment. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Attachment belonging to the parent Attachment base. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AttachmentBase.Attachment"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/binary/AttachmentBase/{Id}/Attachments/{AttachmentsId}/Attachment":{"get":{"tags":["/binary/AttachmentBase/{Id}/Attachments/{AttachmentsId}/Attachment"],"summary":"Returns latest version of the Attachment of Attachment, subject to caller's view entitlements","parameters":[{"name":"AttachmentsId","in":"path","description":"Id of Attachment","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Attachment base","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  downloading of Attachment of Attachment. The response body would contain the downloaded Attachment","headers":{"Location":{"description":"Location of the existing binary resource","style":"simple"}},"content":{"application/octet-stream":{"schema":{"items":{"$ref":"#/components/schemas/AttachmentBase.Attachment"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/binary/AttachmentBase/{Id}/Attachments/{AttachmentsId}/Attachment"],"summary":"Deletes an existing Attachment belonging to Attachment subject to caller is entitled to delete Attachments","description":"Deletes a existing Attachment.\nAttachment is a sub-entity of Attachment. This action is subject to caller is entitled to delete Attachments","parameters":[{"name":"AttachmentsId","in":"path","description":"Id of Attachment","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Attachment base","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of Attachment of Attachment","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/binary/AttachmentBase/{Id}/Attachments/{AttachmentsId}/Attachment"],"summary":"Updates an existing Attachment belonging to Attachment subject to caller is entitled to edit Attachments","description":"Updates a existing Attachment.\nAttachment is a sub-entity of Attachment For possible entity Fields, refer to the schema section for Attachment in json format, subject to caller is entitled to edit Attachments","parameters":[{"name":"AttachmentsId","in":"path","description":"Id of Attachment","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Attachment base","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Attachment. Any subentity field (if any) would be ignored.","content":{"*/*":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of Attachment of Attachment. The response body would contain the updated entity with the Attachment containing the generated id of the updated file","headers":{"ETag":{"description":"ETag of the resource in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated resource","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/AttachmentBase.Attachment"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BIC":{"get":{"tags":["/BIC"],"summary":"Returns latest versions of all matching BICsin json format. This action requires the caller entitled to view BICs","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the BIC field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BIC","schema":{},"examples":{"Filter by ValueAddedServices, in operator":{"description":"Filter by ValueAddedServices, in operator","value":"ValueAddedServices,IN,A,B,C"},"Filter by ValueAddedServices, not in operator":{"description":"Filter by ValueAddedServices, not in operator","value":"ValueAddedServices,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of BIC fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BIC","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any BIC field. For possible fields, refer to the schema section for BIC","schema":{},"examples":{"Sort by ValueAddedServices, ascending order":{"description":"Sort by ValueAddedServices, ascending order","value":"ValueAddedServices:ASC"},"Sort by ValueAddedServices, descending order":{"description":"Sort by ValueAddedServices, descending order","value":"ValueAddedServices:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned BICs","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching BICs. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BIC"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/BIC"],"summary":"Creates a new BIC. This action requires the caller entitled to create BICs","description":"Creates a new  BIC.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is BicCode.\n For possible entity Fields, refer to the schema section for BIC. This action requires the caller entitled to create BICs","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the BIC. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of BIC. The response body would contain the created BIC","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BIC"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BIC/{Id}":{"get":{"tags":["/BIC/{Id}"],"summary":"Returns latest version of a specific BICin json format. This action requires the caller entitled to view BICs","parameters":[{"name":"Id","in":"path","description":"Id of BIC","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the BIC field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BIC","schema":{},"examples":{"Filter by ValueAddedServices, in operator":{"description":"Filter by ValueAddedServices, in operator","value":"ValueAddedServices,IN,A,B,C"},"Filter by ValueAddedServices, not in operator":{"description":"Filter by ValueAddedServices, not in operator","value":"ValueAddedServices,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of BIC fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BIC","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any BIC field. For possible fields, refer to the schema section for BIC","schema":{},"examples":{"Sort by ValueAddedServices, ascending order":{"description":"Sort by ValueAddedServices, ascending order","value":"ValueAddedServices:ASC"},"Sort by ValueAddedServices, descending order":{"description":"Sort by ValueAddedServices, descending order","value":"ValueAddedServices:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned BICs","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific BIC. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BIC"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/BIC/{Id}"],"summary":"Deletes an existing BIC subject to caller is entitled to delete BICs","description":"Deletes a existing BIC.\n. This action is subject to caller is entitled to delete BICs","parameters":[{"name":"Id","in":"path","description":"Id of BIC","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific BIC","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/BIC/{Id}"],"summary":"Updates an existing BIC subject to caller is entitled to edit BICs","description":"Updates a existing BIC.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is BicCode.\n For possible entity Fields, refer to the schema section for BIC in json format, subject to caller is entitled to edit BICs","parameters":[{"name":"Id","in":"path","description":"Id of BIC","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified BIC. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific BIC. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BIC"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BICType":{"get":{"tags":["/BICType"],"summary":"Returns latest versions of all matching BIC typesin json format. This action requires the caller entitled to view BIC types","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the BIC type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BICType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of BIC type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BICType","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned BIC types","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any BIC type field. For possible fields, refer to the schema section for BICType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching BIC types. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BICType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/BICType"],"summary":"Creates a new BIC type. This action requires the caller entitled to create BIC types","description":"Creates a new  BIC type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for BICType. This action requires the caller entitled to create BIC types","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the BIC type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of BIC type. The response body would contain the created BIC type","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BICType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BICType/{Id}":{"get":{"tags":["/BICType/{Id}"],"summary":"Returns latest version of a specific BIC typein json format. This action requires the caller entitled to view BIC types","parameters":[{"name":"Id","in":"path","description":"Id of BIC type","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the BIC type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BICType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of BIC type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BICType","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned BIC types","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any BIC type field. For possible fields, refer to the schema section for BICType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific BIC type. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BICType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/BICType/{Id}"],"summary":"Deletes an existing BIC type subject to caller is entitled to delete BIC types","description":"Deletes a existing BIC type.\n. This action is subject to caller is entitled to delete BIC types","parameters":[{"name":"Id","in":"path","description":"Id of BIC type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific BIC type","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/BICType/{Id}"],"summary":"Updates an existing BIC type subject to caller is entitled to edit BIC types","description":"Updates a existing BIC type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for BICType in json format, subject to caller is entitled to edit BIC types","parameters":[{"name":"Id","in":"path","description":"Id of BIC type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified BIC type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific BIC type. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BICType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Bond":{"get":{"tags":["/Bond"],"summary":"Returns latest versions of all matching Bondsin json format. This action requires the caller entitled to view Bonds","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Bonds","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Bond field. For possible fields, refer to the schema section for Bond","schema":{},"examples":{"Sort by Ticker, ascending order":{"description":"Sort by Ticker, ascending order","value":"Ticker:ASC"},"Sort by Ticker, descending order":{"description":"Sort by Ticker, descending order","value":"Ticker:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Bond field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Bond","schema":{},"examples":{"Filter by Ticker, not in operator":{"description":"Filter by Ticker, not in operator","value":"Ticker,NOT_IN,A,B,C"},"Filter by Ticker, in operator":{"description":"Filter by Ticker, in operator","value":"Ticker,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Bond fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Bond","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Bonds. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Bond"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Bond"],"summary":"Creates a new Bond. This action requires the caller entitled to create Bonds","description":"Creates a new  Bond.\n For possible entity Fields, refer to the schema section for Bond. This action requires the caller entitled to create Bonds","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Bond. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Bond. The response body would contain the created Bond","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Bond"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Bond/{Id}":{"get":{"tags":["/Bond/{Id}"],"summary":"Returns latest version of a specific Bondin json format. This action requires the caller entitled to view Bonds","parameters":[{"name":"Id","in":"path","description":"Id of Bond","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Bonds","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Bond field. For possible fields, refer to the schema section for Bond","schema":{},"examples":{"Sort by Ticker, ascending order":{"description":"Sort by Ticker, ascending order","value":"Ticker:ASC"},"Sort by Ticker, descending order":{"description":"Sort by Ticker, descending order","value":"Ticker:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Bond field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Bond","schema":{},"examples":{"Filter by Ticker, not in operator":{"description":"Filter by Ticker, not in operator","value":"Ticker,NOT_IN,A,B,C"},"Filter by Ticker, in operator":{"description":"Filter by Ticker, in operator","value":"Ticker,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Bond fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Bond","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Bond. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Bond"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Bond/{Id}"],"summary":"Deletes an existing Bond subject to caller is entitled to delete Bonds","description":"Deletes a existing Bond.\n. This action is subject to caller is entitled to delete Bonds","parameters":[{"name":"Id","in":"path","description":"Id of Bond","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Bond","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Bond/{Id}"],"summary":"Updates an existing Bond subject to caller is entitled to edit Bonds","description":"Updates a existing Bond.\n For possible entity Fields, refer to the schema section for Bond in json format, subject to caller is entitled to edit Bonds","parameters":[{"name":"Id","in":"path","description":"Id of Bond","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Bond. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Bond. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Bond"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BondGroup":{"get":{"tags":["/BondGroup"],"summary":"Returns latest versions of all matching Bond groupsin json format. This action requires the caller entitled to view Bond groups","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Bond groups","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Bond group fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BondGroup","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Bond group field. For possible fields, refer to the schema section for BondGroup","schema":{},"examples":{"Sort by Rule, descending order":{"description":"Sort by Rule, descending order","value":"Rule:DESC"},"Sort by Rule, ascending order":{"description":"Sort by Rule, ascending order","value":"Rule:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Bond group field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BondGroup","schema":{},"examples":{"Filter by Rule, in operator":{"description":"Filter by Rule, in operator","value":"Rule,IN,A,B,C"},"Filter by Rule, not in operator":{"description":"Filter by Rule, not in operator","value":"Rule,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Bond groups. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BondGroup"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/BondGroup"],"summary":"Creates a new Bond group. This action requires the caller entitled to create Bond groups","description":"Creates a new  Bond group.\nFields required for creation is Id.\n For possible entity Fields, refer to the schema section for BondGroup. This action requires the caller entitled to create Bond groups","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Bond group. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Bond group. The response body would contain the created Bond group","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BondGroup"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BondGroup/{Id}":{"get":{"tags":["/BondGroup/{Id}"],"summary":"Returns latest version of a specific Bond groupin json format. This action requires the caller entitled to view Bond groups","parameters":[{"name":"Id","in":"path","description":"Id of Bond group","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Bond groups","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Bond group fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BondGroup","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Bond group field. For possible fields, refer to the schema section for BondGroup","schema":{},"examples":{"Sort by Rule, descending order":{"description":"Sort by Rule, descending order","value":"Rule:DESC"},"Sort by Rule, ascending order":{"description":"Sort by Rule, ascending order","value":"Rule:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Bond group field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BondGroup","schema":{},"examples":{"Filter by Rule, in operator":{"description":"Filter by Rule, in operator","value":"Rule,IN,A,B,C"},"Filter by Rule, not in operator":{"description":"Filter by Rule, not in operator","value":"Rule,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Bond group. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BondGroup"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/BondGroup/{Id}"],"summary":"Deletes an existing Bond group subject to caller is entitled to delete Bond groups","description":"Deletes a existing Bond group.\n. This action is subject to caller is entitled to delete Bond groups","parameters":[{"name":"Id","in":"path","description":"Id of Bond group","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Bond group","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/BondGroup/{Id}"],"summary":"Updates an existing Bond group subject to caller is entitled to edit Bond groups","description":"Updates a existing Bond group.\nFields required to be passed while editing is Id.\n For possible entity Fields, refer to the schema section for BondGroup in json format, subject to caller is entitled to edit Bond groups","parameters":[{"name":"Id","in":"path","description":"Id of Bond group","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Bond group. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Bond group. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BondGroup"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Book":{"get":{"tags":["/Book"],"summary":"Returns latest versions of all matching Booksin json format. This action requires the caller entitled to view Books","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Book field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Book","schema":{},"examples":{"Filter by TraderLastName, not in operator":{"description":"Filter by TraderLastName, not in operator","value":"TraderLastName,NOT_IN,A,B,C"},"Filter by TraderLastName, in operator":{"description":"Filter by TraderLastName, in operator","value":"TraderLastName,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Book fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Book","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Book field. For possible fields, refer to the schema section for Book","schema":{},"examples":{"Sort by TraderLastName, ascending order":{"description":"Sort by TraderLastName, ascending order","value":"TraderLastName:ASC"},"Sort by TraderLastName, descending order":{"description":"Sort by TraderLastName, descending order","value":"TraderLastName:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Books","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Books. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Book"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Book"],"summary":"Creates a new Book. This action requires the caller entitled to create Books","description":"Creates a new  Book.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for Book. This action requires the caller entitled to create Books","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Book. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Book. The response body would contain the created Book","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Book"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Book/{Id}":{"get":{"tags":["/Book/{Id}"],"summary":"Returns latest version of a specific Bookin json format. This action requires the caller entitled to view Books","parameters":[{"name":"Id","in":"path","description":"Id of Book","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Book field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Book","schema":{},"examples":{"Filter by TraderLastName, not in operator":{"description":"Filter by TraderLastName, not in operator","value":"TraderLastName,NOT_IN,A,B,C"},"Filter by TraderLastName, in operator":{"description":"Filter by TraderLastName, in operator","value":"TraderLastName,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Book fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Book","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Book field. For possible fields, refer to the schema section for Book","schema":{},"examples":{"Sort by TraderLastName, ascending order":{"description":"Sort by TraderLastName, ascending order","value":"TraderLastName:ASC"},"Sort by TraderLastName, descending order":{"description":"Sort by TraderLastName, descending order","value":"TraderLastName:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Books","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Book. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Book"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Book/{Id}"],"summary":"Deletes an existing Book subject to caller is entitled to delete Books","description":"Deletes a existing Book.\n. This action is subject to caller is entitled to delete Books","parameters":[{"name":"Id","in":"path","description":"Id of Book","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Book","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Book/{Id}"],"summary":"Updates an existing Book subject to caller is entitled to edit Books","description":"Updates a existing Book.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Book in json format, subject to caller is entitled to edit Books","parameters":[{"name":"Id","in":"path","description":"Id of Book","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Book. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Book. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Book"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Book/{Id}/Contacts":{"get":{"tags":["/Book/{Id}/Contacts"],"summary":"Returns latest versions of all matching Contacts belonging to the parent Bookin json format. This action requires the caller entitled to view Contacts","parameters":[{"name":"Id","in":"path","description":"Id of Book","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Contact fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Contact","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Contact field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Contact","schema":{},"examples":{"Filter by Phone, in operator":{"description":"Filter by Phone, in operator","value":"Phone,IN,A,B,C"},"Filter by Phone, not in operator":{"description":"Filter by Phone, not in operator","value":"Phone,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Contacts","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Contact field. For possible fields, refer to the schema section for Contact","schema":{},"examples":{"Sort by Phone, descending order":{"description":"Sort by Phone, descending order","value":"Phone:DESC"},"Sort by Phone, ascending order":{"description":"Sort by Phone, ascending order","value":"Phone:ASC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Contacts belonging to the parent Book. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Book.Contact"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Book/{Id}/Contacts"],"summary":"Creates a new Contact belonging to Book. This action requires the caller entitled to create Contacts","description":"Creates a new  Contact.\nContact is a sub-entity of  Book The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for Contact. This action requires the caller entitled to create Contacts","parameters":[{"name":"Id","in":"path","description":"Id of Book","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Contact. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Contact for the parent Book. The response body would contain the created Contact","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Book.Contact"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Book/{Id}/Contacts/{ContactsId}":{"get":{"tags":["/Book/{Id}/Contacts/{ContactsId}"],"summary":"Returns latest version of a specific Contact belonging to the parent Bookin json format. This action requires the caller entitled to view Contacts","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Book","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Contact fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Contact","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Contact field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Contact","schema":{},"examples":{"Filter by Phone, in operator":{"description":"Filter by Phone, in operator","value":"Phone,IN,A,B,C"},"Filter by Phone, not in operator":{"description":"Filter by Phone, not in operator","value":"Phone,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Contacts","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Contact field. For possible fields, refer to the schema section for Contact","schema":{},"examples":{"Sort by Phone, descending order":{"description":"Sort by Phone, descending order","value":"Phone:DESC"},"Sort by Phone, ascending order":{"description":"Sort by Phone, ascending order","value":"Phone:ASC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Contact belonging to the parent Book. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Book.Contact"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Book/{Id}/Contacts/{ContactsId}"],"summary":"Deletes an existing Contact belonging to Book subject to caller is entitled to delete Contacts","description":"Deletes a existing Contact.\nContact is a sub-entity of Book. This action is subject to caller is entitled to delete Contacts","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Book","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Contact belonging to the parent Book","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Book/{Id}/Contacts/{ContactsId}"],"summary":"Updates an existing Contact belonging to Book subject to caller is entitled to edit Contacts","description":"Updates a existing Contact.\nContact is a sub-entity of Book The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Contact in json format, subject to caller is entitled to edit Contacts","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Book","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Contact. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Contact belonging to the parent Book. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Book.Contact"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/binary/Book/{Id}/Contacts/{ContactsId}/Signature":{"get":{"tags":["/binary/Book/{Id}/Contacts/{ContactsId}/Signature"],"summary":"Returns latest version of the Signature of Contact, subject to caller's view entitlements","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Book","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  downloading of Signature of Contact. The response body would contain the downloaded Signature","headers":{"Location":{"description":"Location of the existing binary resource","style":"simple"}},"content":{"application/octet-stream":{"schema":{"items":{"$ref":"#/components/schemas/Book.Contact"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/binary/Book/{Id}/Contacts/{ContactsId}/Signature"],"summary":"Deletes an existing Contact belonging to Contact subject to caller is entitled to delete Contacts","description":"Deletes a existing Contact.\nContact is a sub-entity of Contact. This action is subject to caller is entitled to delete Contacts","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Book","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of Signature of Contact","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/binary/Book/{Id}/Contacts/{ContactsId}/Signature"],"summary":"Updates an existing Contact belonging to Contact subject to caller is entitled to edit Contacts","description":"Updates a existing Contact.\nContact is a sub-entity of Contact The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Contact in json format, subject to caller is entitled to edit Contacts","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Book","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Contact. Any subentity field (if any) would be ignored.","content":{"*/*":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of Signature of Contact. The response body would contain the updated entity with the Signature containing the generated id of the updated file","headers":{"ETag":{"description":"ETag of the resource in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated resource","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Book.Contact"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BookGroup":{"get":{"tags":["/BookGroup"],"summary":"Returns latest versions of all matching Book groupsin json format. This action requires the caller entitled to view Book groups","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Book groups","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Book group fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BookGroup","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Book group field. For possible fields, refer to the schema section for BookGroup","schema":{},"examples":{"Sort by Rule, descending order":{"description":"Sort by Rule, descending order","value":"Rule:DESC"},"Sort by Rule, ascending order":{"description":"Sort by Rule, ascending order","value":"Rule:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Book group field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BookGroup","schema":{},"examples":{"Filter by Rule, in operator":{"description":"Filter by Rule, in operator","value":"Rule,IN,A,B,C"},"Filter by Rule, not in operator":{"description":"Filter by Rule, not in operator","value":"Rule,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Book groups. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookGroup"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/BookGroup"],"summary":"Creates a new Book group. This action requires the caller entitled to create Book groups","description":"Creates a new  Book group.\nFields required for creation is Id.\n For possible entity Fields, refer to the schema section for BookGroup. This action requires the caller entitled to create Book groups","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Book group. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Book group. The response body would contain the created Book group","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookGroup"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BookGroup/{Id}":{"get":{"tags":["/BookGroup/{Id}"],"summary":"Returns latest version of a specific Book groupin json format. This action requires the caller entitled to view Book groups","parameters":[{"name":"Id","in":"path","description":"Id of Book group","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Book groups","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Book group fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BookGroup","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Book group field. For possible fields, refer to the schema section for BookGroup","schema":{},"examples":{"Sort by Rule, descending order":{"description":"Sort by Rule, descending order","value":"Rule:DESC"},"Sort by Rule, ascending order":{"description":"Sort by Rule, ascending order","value":"Rule:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Book group field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BookGroup","schema":{},"examples":{"Filter by Rule, in operator":{"description":"Filter by Rule, in operator","value":"Rule,IN,A,B,C"},"Filter by Rule, not in operator":{"description":"Filter by Rule, not in operator","value":"Rule,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Book group. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookGroup"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/BookGroup/{Id}"],"summary":"Deletes an existing Book group subject to caller is entitled to delete Book groups","description":"Deletes a existing Book group.\n. This action is subject to caller is entitled to delete Book groups","parameters":[{"name":"Id","in":"path","description":"Id of Book group","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Book group","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/BookGroup/{Id}"],"summary":"Updates an existing Book group subject to caller is entitled to edit Book groups","description":"Updates a existing Book group.\nFields required to be passed while editing is Id.\n For possible entity Fields, refer to the schema section for BookGroup in json format, subject to caller is entitled to edit Book groups","parameters":[{"name":"Id","in":"path","description":"Id of Book group","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Book group. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Book group. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookGroup"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BookHierarchy":{"get":{"tags":["/BookHierarchy"],"summary":"Returns latest versions of all matching Book hierarchiesin json format. This action requires the caller entitled to view Book hierarchies","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Book hierarchy field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BookHierarchy","schema":{},"examples":{"Filter by EntityClassStr, in operator":{"description":"Filter by EntityClassStr, in operator","value":"EntityClassStr,IN,A,B,C"},"Filter by EntityClassStr, not in operator":{"description":"Filter by EntityClassStr, not in operator","value":"EntityClassStr,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Book hierarchies","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Book hierarchy field. For possible fields, refer to the schema section for BookHierarchy","schema":{},"examples":{"Sort by EntityClassStr, ascending order":{"description":"Sort by EntityClassStr, ascending order","value":"EntityClassStr:ASC"},"Sort by EntityClassStr, descending order":{"description":"Sort by EntityClassStr, descending order","value":"EntityClassStr:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Book hierarchy fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BookHierarchy","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Book hierarchies. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/BookHierarchy"],"summary":"Creates a new Book hierarchy. This action requires the caller entitled to create Book hierarchies","description":"Creates a new  Book hierarchy.\nFields required for creation is Id.\n For possible entity Fields, refer to the schema section for BookHierarchy. This action requires the caller entitled to create Book hierarchies","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Book hierarchy. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Book hierarchy. The response body would contain the created Book hierarchy","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BookHierarchy/{Id}":{"get":{"tags":["/BookHierarchy/{Id}"],"summary":"Returns latest version of a specific Book hierarchyin json format. This action requires the caller entitled to view Book hierarchies","parameters":[{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Book hierarchy field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BookHierarchy","schema":{},"examples":{"Filter by EntityClassStr, in operator":{"description":"Filter by EntityClassStr, in operator","value":"EntityClassStr,IN,A,B,C"},"Filter by EntityClassStr, not in operator":{"description":"Filter by EntityClassStr, not in operator","value":"EntityClassStr,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Book hierarchies","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Book hierarchy field. For possible fields, refer to the schema section for BookHierarchy","schema":{},"examples":{"Sort by EntityClassStr, ascending order":{"description":"Sort by EntityClassStr, ascending order","value":"EntityClassStr:ASC"},"Sort by EntityClassStr, descending order":{"description":"Sort by EntityClassStr, descending order","value":"EntityClassStr:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Book hierarchy fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BookHierarchy","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Book hierarchy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/BookHierarchy/{Id}"],"summary":"Deletes an existing Book hierarchy subject to caller is entitled to delete Book hierarchies","description":"Deletes a existing Book hierarchy.\n. This action is subject to caller is entitled to delete Book hierarchies","parameters":[{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Book hierarchy","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/BookHierarchy/{Id}"],"summary":"Updates an existing Book hierarchy subject to caller is entitled to edit Book hierarchies","description":"Updates a existing Book hierarchy.\nFields required to be passed while editing is Id.\n For possible entity Fields, refer to the schema section for BookHierarchy in json format, subject to caller is entitled to edit Book hierarchies","parameters":[{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Book hierarchy. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Book hierarchy. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BookHierarchy/{Id}/LevelDefault":{"get":{"tags":["/BookHierarchy/{Id}/LevelDefault"],"summary":"Returns latest versions of all matching Level defaults belonging to the parent Book hierarchyin json format. This action requires the caller entitled to view Level defaults","parameters":[{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Level defaults","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Level default field. For possible fields, refer to the schema section for LevelDefault","schema":{},"examples":{"Sort by FieldName, descending order":{"description":"Sort by FieldName, descending order","value":"FieldName:DESC"},"Sort by FieldName, ascending order":{"description":"Sort by FieldName, ascending order","value":"FieldName:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Level default field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LevelDefault","schema":{},"examples":{"Filter by FieldName, in operator":{"description":"Filter by FieldName, in operator","value":"FieldName,IN,A,B,C"},"Filter by FieldName, not in operator":{"description":"Filter by FieldName, not in operator","value":"FieldName,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Level default fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LevelDefault","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Level defaults belonging to the parent Book hierarchy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy.LevelDefault"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/BookHierarchy/{Id}/LevelDefault"],"summary":"Creates a new Level default belonging to Book hierarchy. This action requires the caller entitled to create Level defaults","description":"Creates a new  Level default.\nLevel default is a sub-entity of  Book hierarchy The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is FieldName.\n For possible entity Fields, refer to the schema section for LevelDefault. This action requires the caller entitled to create Level defaults","parameters":[{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Level default. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Level default for the parent Book hierarchy. The response body would contain the created Level default","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy.LevelDefault"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BookHierarchy/{Id}/LevelDefault/{LevelDefaultId}":{"get":{"tags":["/BookHierarchy/{Id}/LevelDefault/{LevelDefaultId}"],"summary":"Returns latest version of a specific Level default belonging to the parent Book hierarchyin json format. This action requires the caller entitled to view Level defaults","parameters":[{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Level defaults","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Level default field. For possible fields, refer to the schema section for LevelDefault","schema":{},"examples":{"Sort by FieldName, descending order":{"description":"Sort by FieldName, descending order","value":"FieldName:DESC"},"Sort by FieldName, ascending order":{"description":"Sort by FieldName, ascending order","value":"FieldName:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Level default field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LevelDefault","schema":{},"examples":{"Filter by FieldName, in operator":{"description":"Filter by FieldName, in operator","value":"FieldName,IN,A,B,C"},"Filter by FieldName, not in operator":{"description":"Filter by FieldName, not in operator","value":"FieldName,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Level default fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LevelDefault","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Level default belonging to the parent Book hierarchy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy.LevelDefault"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/BookHierarchy/{Id}/LevelDefault/{LevelDefaultId}"],"summary":"Deletes an existing Level default belonging to Book hierarchy subject to caller is entitled to delete Level defaults","description":"Deletes a existing Level default.\nLevel default is a sub-entity of Book hierarchy. This action is subject to caller is entitled to delete Level defaults","parameters":[{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Level default belonging to the parent Book hierarchy","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/BookHierarchy/{Id}/LevelDefault/{LevelDefaultId}"],"summary":"Updates an existing Level default belonging to Book hierarchy subject to caller is entitled to edit Level defaults","description":"Updates a existing Level default.\nLevel default is a sub-entity of Book hierarchy The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is FieldName.\n For possible entity Fields, refer to the schema section for LevelDefault in json format, subject to caller is entitled to edit Level defaults","parameters":[{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Level default. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Level default belonging to the parent Book hierarchy. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy.LevelDefault"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BookHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue":{"get":{"tags":["/BookHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue"],"summary":"Returns latest versions of all matching Level default values belonging to the parent Level defaultin json format. This action requires the caller entitled to view Level default values","parameters":[{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Level default value field. For possible fields, refer to the schema section for LevelDefaultValue","schema":{},"examples":{"Sort by DefaultValue, ascending order":{"description":"Sort by DefaultValue, ascending order","value":"DefaultValue:ASC"},"Sort by DefaultValue, descending order":{"description":"Sort by DefaultValue, descending order","value":"DefaultValue:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Level default value fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LevelDefaultValue","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Level default value field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LevelDefaultValue","schema":{},"examples":{"Filter by DefaultValue, not in operator":{"description":"Filter by DefaultValue, not in operator","value":"DefaultValue,NOT_IN,A,B,C"},"Filter by DefaultValue, in operator":{"description":"Filter by DefaultValue, in operator","value":"DefaultValue,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Level default values","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Level default values belonging to the parent Level default. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy.LevelDefault.LevelDefaultValue"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/BookHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue"],"summary":"Creates a new Level default value belonging to Level default. This action requires the caller entitled to create Level default values","description":"Creates a new  Level default value.\nLevel default value is a sub-entity of  Level default The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Level.\n For possible entity Fields, refer to the schema section for LevelDefaultValue. This action requires the caller entitled to create Level default values","parameters":[{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Level default value. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Level default value for the parent Level default. The response body would contain the created Level default value","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy.LevelDefault.LevelDefaultValue"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BookHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue/{DefaultValueId}":{"get":{"tags":["/BookHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue/{DefaultValueId}"],"summary":"Returns latest version of a specific Level default value belonging to the parent Level defaultin json format. This action requires the caller entitled to view Level default values","parameters":[{"name":"DefaultValueId","in":"path","description":"Id of Level default value","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Level default value field. For possible fields, refer to the schema section for LevelDefaultValue","schema":{},"examples":{"Sort by DefaultValue, ascending order":{"description":"Sort by DefaultValue, ascending order","value":"DefaultValue:ASC"},"Sort by DefaultValue, descending order":{"description":"Sort by DefaultValue, descending order","value":"DefaultValue:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Level default value fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LevelDefaultValue","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Level default value field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LevelDefaultValue","schema":{},"examples":{"Filter by DefaultValue, not in operator":{"description":"Filter by DefaultValue, not in operator","value":"DefaultValue,NOT_IN,A,B,C"},"Filter by DefaultValue, in operator":{"description":"Filter by DefaultValue, in operator","value":"DefaultValue,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Level default values","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Level default value belonging to the parent Level default. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy.LevelDefault.LevelDefaultValue"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/BookHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue/{DefaultValueId}"],"summary":"Deletes an existing Level default value belonging to Level default subject to caller is entitled to delete Level default values","description":"Deletes a existing Level default value.\nLevel default value is a sub-entity of Level default. This action is subject to caller is entitled to delete Level default values","parameters":[{"name":"DefaultValueId","in":"path","description":"Id of Level default value","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Level default value belonging to the parent Level default","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/BookHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue/{DefaultValueId}"],"summary":"Updates an existing Level default value belonging to Level default subject to caller is entitled to edit Level default values","description":"Updates a existing Level default value.\nLevel default value is a sub-entity of Level default The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Level.\n For possible entity Fields, refer to the schema section for LevelDefaultValue in json format, subject to caller is entitled to edit Level default values","parameters":[{"name":"DefaultValueId","in":"path","description":"Id of Level default value","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Level default value. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Level default value belonging to the parent Level default. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy.LevelDefault.LevelDefaultValue"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BookHierarchy/{Id}/Levels":{"get":{"tags":["/BookHierarchy/{Id}/Levels"],"summary":"Returns latest versions of all matching Book levels belonging to the parent Book hierarchyin json format. This action requires the caller entitled to view Book levels","parameters":[{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Book level field. For possible fields, refer to the schema section for BookLevel","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Book level fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BookLevel","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Book levels","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Book level field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BookLevel","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Book levels belonging to the parent Book hierarchy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy.BookLevel"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/BookHierarchy/{Id}/Levels"],"summary":"Creates a new Book level belonging to Book hierarchy. This action requires the caller entitled to create Book levels","description":"Creates a new  Book level.\nBook level is a sub-entity of  Book hierarchy The Id property is optional, if not provided it will auto generate an Id.\n For possible entity Fields, refer to the schema section for BookLevel. This action requires the caller entitled to create Book levels","parameters":[{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Book level. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Book level for the parent Book hierarchy. The response body would contain the created Book level","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy.BookLevel"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BookHierarchy/{Id}/Levels/{LevelsId}":{"get":{"tags":["/BookHierarchy/{Id}/Levels/{LevelsId}"],"summary":"Returns latest version of a specific Book level belonging to the parent Book hierarchyin json format. This action requires the caller entitled to view Book levels","parameters":[{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"LevelsId","in":"path","description":"Id of Book level","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Book level field. For possible fields, refer to the schema section for BookLevel","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Book level fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BookLevel","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Book levels","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Book level field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BookLevel","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Book level belonging to the parent Book hierarchy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy.BookLevel"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/BookHierarchy/{Id}/Levels/{LevelsId}"],"summary":"Deletes an existing Book level belonging to Book hierarchy subject to caller is entitled to delete Book levels","description":"Deletes a existing Book level.\nBook level is a sub-entity of Book hierarchy. This action is subject to caller is entitled to delete Book levels","parameters":[{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"LevelsId","in":"path","description":"Id of Book level","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Book level belonging to the parent Book hierarchy","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/BookHierarchy/{Id}/Levels/{LevelsId}"],"summary":"Updates an existing Book level belonging to Book hierarchy subject to caller is entitled to edit Book levels","description":"Updates a existing Book level.\nBook level is a sub-entity of Book hierarchy The Id property is optional, if not provided it will auto generate an Id.\n For possible entity Fields, refer to the schema section for BookLevel in json format, subject to caller is entitled to edit Book levels","parameters":[{"name":"Id","in":"path","description":"Id of Book hierarchy","required":true,"schema":{}},{"name":"LevelsId","in":"path","description":"Id of Book level","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Book level. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Book level belonging to the parent Book hierarchy. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookHierarchy.BookLevel"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BookSubtype":{"get":{"tags":["/BookSubtype"],"summary":"Returns latest versions of all matching Book subtypesin json format. This action requires the caller entitled to view Book subtypes","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Book subtype field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BookSubtype","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Book subtype field. For possible fields, refer to the schema section for BookSubtype","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Book subtypes","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Book subtype fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BookSubtype","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Book subtypes. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookSubtype"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/BookSubtype"],"summary":"Creates a new Book subtype. This action requires the caller entitled to create Book subtypes","description":"Creates a new  Book subtype.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for BookSubtype. This action requires the caller entitled to create Book subtypes","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Book subtype. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Book subtype. The response body would contain the created Book subtype","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookSubtype"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BookSubtype/{Id}":{"get":{"tags":["/BookSubtype/{Id}"],"summary":"Returns latest version of a specific Book subtypein json format. This action requires the caller entitled to view Book subtypes","parameters":[{"name":"Id","in":"path","description":"Id of Book subtype","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Book subtype field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BookSubtype","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Book subtype field. For possible fields, refer to the schema section for BookSubtype","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Book subtypes","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Book subtype fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BookSubtype","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Book subtype. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookSubtype"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/BookSubtype/{Id}"],"summary":"Deletes an existing Book subtype subject to caller is entitled to delete Book subtypes","description":"Deletes a existing Book subtype.\n. This action is subject to caller is entitled to delete Book subtypes","parameters":[{"name":"Id","in":"path","description":"Id of Book subtype","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Book subtype","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/BookSubtype/{Id}"],"summary":"Updates an existing Book subtype subject to caller is entitled to edit Book subtypes","description":"Updates a existing Book subtype.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for BookSubtype in json format, subject to caller is entitled to edit Book subtypes","parameters":[{"name":"Id","in":"path","description":"Id of Book subtype","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Book subtype. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Book subtype. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookSubtype"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BookType":{"get":{"tags":["/BookType"],"summary":"Returns latest versions of all matching Book typesin json format. This action requires the caller entitled to view Book types","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Book types","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Book type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BookType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Book type field. For possible fields, refer to the schema section for BookType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Book type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BookType","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Book types. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/BookType"],"summary":"Creates a new Book type. This action requires the caller entitled to create Book types","description":"Creates a new  Book type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for BookType. This action requires the caller entitled to create Book types","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Book type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Book type. The response body would contain the created Book type","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BookType/{Id}":{"get":{"tags":["/BookType/{Id}"],"summary":"Returns latest version of a specific Book typein json format. This action requires the caller entitled to view Book types","parameters":[{"name":"Id","in":"path","description":"Id of Book type","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Book types","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Book type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BookType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Book type field. For possible fields, refer to the schema section for BookType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Book type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BookType","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Book type. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/BookType/{Id}"],"summary":"Deletes an existing Book type subject to caller is entitled to delete Book types","description":"Deletes a existing Book type.\n. This action is subject to caller is entitled to delete Book types","parameters":[{"name":"Id","in":"path","description":"Id of Book type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Book type","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/BookType/{Id}"],"summary":"Updates an existing Book type subject to caller is entitled to edit Book types","description":"Updates a existing Book type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for BookType in json format, subject to caller is entitled to edit Book types","parameters":[{"name":"Id","in":"path","description":"Id of Book type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Book type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Book type. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BookType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BunkerGrade":{"get":{"tags":["/BunkerGrade"],"summary":"Returns latest versions of all matching Bunker gradesin json format. This action requires the caller entitled to view Bunker grades","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Bunker grade field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BunkerGrade","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Bunker grades","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Bunker grade fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BunkerGrade","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Bunker grade field. For possible fields, refer to the schema section for BunkerGrade","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Bunker grades. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BunkerGrade"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/BunkerGrade"],"summary":"Creates a new Bunker grade. This action requires the caller entitled to create Bunker grades","description":"Creates a new  Bunker grade.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for BunkerGrade. This action requires the caller entitled to create Bunker grades","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Bunker grade. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Bunker grade. The response body would contain the created Bunker grade","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BunkerGrade"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BunkerGrade/{Id}":{"get":{"tags":["/BunkerGrade/{Id}"],"summary":"Returns latest version of a specific Bunker gradein json format. This action requires the caller entitled to view Bunker grades","parameters":[{"name":"Id","in":"path","description":"Id of Bunker grade","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Bunker grade field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BunkerGrade","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Bunker grades","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Bunker grade fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BunkerGrade","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Bunker grade field. For possible fields, refer to the schema section for BunkerGrade","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Bunker grade. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BunkerGrade"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/BunkerGrade/{Id}"],"summary":"Deletes an existing Bunker grade subject to caller is entitled to delete Bunker grades","description":"Deletes a existing Bunker grade.\n. This action is subject to caller is entitled to delete Bunker grades","parameters":[{"name":"Id","in":"path","description":"Id of Bunker grade","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Bunker grade","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/BunkerGrade/{Id}"],"summary":"Updates an existing Bunker grade subject to caller is entitled to edit Bunker grades","description":"Updates a existing Bunker grade.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for BunkerGrade in json format, subject to caller is entitled to edit Bunker grades","parameters":[{"name":"Id","in":"path","description":"Id of Bunker grade","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Bunker grade. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Bunker grade. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BunkerGrade"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BunkerSpecification":{"get":{"tags":["/BunkerSpecification"],"summary":"Returns latest versions of all matching Bunker specificationsin json format. This action requires the caller entitled to view Bunker specifications","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Bunker specifications","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Bunker specification field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BunkerSpecification","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Bunker specification fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BunkerSpecification","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Bunker specification field. For possible fields, refer to the schema section for BunkerSpecification","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Bunker specifications. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BunkerSpecification"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/BunkerSpecification"],"summary":"Creates a new Bunker specification. This action requires the caller entitled to create Bunker specifications","description":"Creates a new  Bunker specification.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for BunkerSpecification. This action requires the caller entitled to create Bunker specifications","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Bunker specification. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Bunker specification. The response body would contain the created Bunker specification","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BunkerSpecification"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BunkerSpecification/{Id}":{"get":{"tags":["/BunkerSpecification/{Id}"],"summary":"Returns latest version of a specific Bunker specificationin json format. This action requires the caller entitled to view Bunker specifications","parameters":[{"name":"Id","in":"path","description":"Id of Bunker specification","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Bunker specifications","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Bunker specification field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BunkerSpecification","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Bunker specification fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BunkerSpecification","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Bunker specification field. For possible fields, refer to the schema section for BunkerSpecification","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Bunker specification. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BunkerSpecification"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/BunkerSpecification/{Id}"],"summary":"Deletes an existing Bunker specification subject to caller is entitled to delete Bunker specifications","description":"Deletes a existing Bunker specification.\n. This action is subject to caller is entitled to delete Bunker specifications","parameters":[{"name":"Id","in":"path","description":"Id of Bunker specification","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Bunker specification","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/BunkerSpecification/{Id}"],"summary":"Updates an existing Bunker specification subject to caller is entitled to edit Bunker specifications","description":"Updates a existing Bunker specification.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for BunkerSpecification in json format, subject to caller is entitled to edit Bunker specifications","parameters":[{"name":"Id","in":"path","description":"Id of Bunker specification","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Bunker specification. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Bunker specification. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BunkerSpecification"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BusinessDate":{"get":{"tags":["/BusinessDate"],"summary":"Returns latest versions of all matching Business datesin json format. This action requires the caller entitled to view Business dates","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Business dates","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Business date field. For possible fields, refer to the schema section for BusinessDate","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Business date fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BusinessDate","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Business date field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BusinessDate","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Business dates. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BusinessDate"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/BusinessDate"],"summary":"Creates a new Business date. This action requires the caller entitled to create Business dates","description":"Creates a new  Business date.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for BusinessDate. This action requires the caller entitled to create Business dates","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Business date. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Business date. The response body would contain the created Business date","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BusinessDate"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BusinessDate/{Id}":{"get":{"tags":["/BusinessDate/{Id}"],"summary":"Returns latest version of a specific Business datein json format. This action requires the caller entitled to view Business dates","parameters":[{"name":"Id","in":"path","description":"Id of Business date","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Business dates","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Business date field. For possible fields, refer to the schema section for BusinessDate","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Business date fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BusinessDate","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Business date field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BusinessDate","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Business date. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BusinessDate"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/BusinessDate/{Id}"],"summary":"Deletes an existing Business date subject to caller is entitled to delete Business dates","description":"Deletes a existing Business date.\n. This action is subject to caller is entitled to delete Business dates","parameters":[{"name":"Id","in":"path","description":"Id of Business date","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Business date","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/BusinessDate/{Id}"],"summary":"Updates an existing Business date subject to caller is entitled to edit Business dates","description":"Updates a existing Business date.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for BusinessDate in json format, subject to caller is entitled to edit Business dates","parameters":[{"name":"Id","in":"path","description":"Id of Business date","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Business date. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Business date. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BusinessDate"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BusinessUnit":{"get":{"tags":["/BusinessUnit"],"summary":"Returns latest versions of all matching Business unitsin json format. This action requires the caller entitled to view Business units","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Business unit field. For possible fields, refer to the schema section for BusinessUnit","schema":{},"examples":{"Sort by RCFieldName, descending order":{"description":"Sort by RCFieldName, descending order","value":"RCFieldName:DESC"},"Sort by RCFieldName, ascending order":{"description":"Sort by RCFieldName, ascending order","value":"RCFieldName:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Business unit field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BusinessUnit","schema":{},"examples":{"Filter by RCFieldName, in operator":{"description":"Filter by RCFieldName, in operator","value":"RCFieldName,IN,A,B,C"},"Filter by RCFieldName, not in operator":{"description":"Filter by RCFieldName, not in operator","value":"RCFieldName,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Business units","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Business unit fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BusinessUnit","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Business units. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BusinessUnit"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/BusinessUnit"],"summary":"Creates a new Business unit. This action requires the caller entitled to create Business units","description":"Creates a new  Business unit.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for BusinessUnit. This action requires the caller entitled to create Business units","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Business unit. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Business unit. The response body would contain the created Business unit","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BusinessUnit"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/BusinessUnit/{Id}":{"get":{"tags":["/BusinessUnit/{Id}"],"summary":"Returns latest version of a specific Business unitin json format. This action requires the caller entitled to view Business units","parameters":[{"name":"Id","in":"path","description":"Id of Business unit","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Business unit field. For possible fields, refer to the schema section for BusinessUnit","schema":{},"examples":{"Sort by RCFieldName, descending order":{"description":"Sort by RCFieldName, descending order","value":"RCFieldName:DESC"},"Sort by RCFieldName, ascending order":{"description":"Sort by RCFieldName, ascending order","value":"RCFieldName:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Business unit field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BusinessUnit","schema":{},"examples":{"Filter by RCFieldName, in operator":{"description":"Filter by RCFieldName, in operator","value":"RCFieldName,IN,A,B,C"},"Filter by RCFieldName, not in operator":{"description":"Filter by RCFieldName, not in operator","value":"RCFieldName,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Business units","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Business unit fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BusinessUnit","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Business unit. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BusinessUnit"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/BusinessUnit/{Id}"],"summary":"Deletes an existing Business unit subject to caller is entitled to delete Business units","description":"Deletes a existing Business unit.\n. This action is subject to caller is entitled to delete Business units","parameters":[{"name":"Id","in":"path","description":"Id of Business unit","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Business unit","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/BusinessUnit/{Id}"],"summary":"Updates an existing Business unit subject to caller is entitled to edit Business units","description":"Updates a existing Business unit.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for BusinessUnit in json format, subject to caller is entitled to edit Business units","parameters":[{"name":"Id","in":"path","description":"Id of Business unit","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Business unit. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Business unit. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/BusinessUnit"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Calendar":{"get":{"tags":["/Calendar"],"summary":"Returns latest versions of all matching Calendarsin json format. This action requires the caller entitled to view Calendars","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Calendar field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Calendar","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Calendars","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Calendar field. For possible fields, refer to the schema section for Calendar","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Calendar fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Calendar","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Calendars. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Calendar"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Calendar"],"summary":"Creates a new Calendar. This action requires the caller entitled to create Calendars","description":"Creates a new  Calendar.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for Calendar. This action requires the caller entitled to create Calendars","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Calendar. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Calendar. The response body would contain the created Calendar","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Calendar"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Calendar/{Id}":{"get":{"tags":["/Calendar/{Id}"],"summary":"Returns latest version of a specific Calendarin json format. This action requires the caller entitled to view Calendars","parameters":[{"name":"Id","in":"path","description":"Id of Calendar","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Calendar field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Calendar","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Calendars","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Calendar field. For possible fields, refer to the schema section for Calendar","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Calendar fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Calendar","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Calendar. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Calendar"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Calendar/{Id}"],"summary":"Deletes an existing Calendar subject to caller is entitled to delete Calendars","description":"Deletes a existing Calendar.\n. This action is subject to caller is entitled to delete Calendars","parameters":[{"name":"Id","in":"path","description":"Id of Calendar","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Calendar","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Calendar/{Id}"],"summary":"Updates an existing Calendar subject to caller is entitled to edit Calendars","description":"Updates a existing Calendar.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Calendar in json format, subject to caller is entitled to edit Calendars","parameters":[{"name":"Id","in":"path","description":"Id of Calendar","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Calendar. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Calendar. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Calendar"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Calendar/{Id}/Holidays":{"get":{"tags":["/Calendar/{Id}/Holidays"],"summary":"Returns latest versions of all matching Holidays belonging to the parent Calendarin json format. This action requires the caller entitled to view Holidays","parameters":[{"name":"Id","in":"path","description":"Id of Calendar","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Holiday fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Holiday","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Holidays","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Holiday field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Holiday","schema":{},"examples":{"Filter by Description, in operator":{"description":"Filter by Description, in operator","value":"Description,IN,A,B,C"},"Filter by Description, not in operator":{"description":"Filter by Description, not in operator","value":"Description,NOT_IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Holiday field. For possible fields, refer to the schema section for Holiday","schema":{},"examples":{"Sort by Description, ascending order":{"description":"Sort by Description, ascending order","value":"Description:ASC"},"Sort by Description, descending order":{"description":"Sort by Description, descending order","value":"Description:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Holidays belonging to the parent Calendar. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Calendar.Holiday"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Calendar/{Id}/Holidays"],"summary":"Creates a new Holiday belonging to Calendar. This action requires the caller entitled to create Holidays","description":"Creates a new  Holiday.\nHoliday is a sub-entity of  CalendarFields required for creation is EventDate.\n For possible entity Fields, refer to the schema section for Holiday. This action requires the caller entitled to create Holidays","parameters":[{"name":"Id","in":"path","description":"Id of Calendar","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Holiday. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Holiday for the parent Calendar. The response body would contain the created Holiday","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Calendar.Holiday"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Calendar/{Id}/Holidays/{HolidaysId}":{"get":{"tags":["/Calendar/{Id}/Holidays/{HolidaysId}"],"summary":"Returns latest version of a specific Holiday belonging to the parent Calendarin json format. This action requires the caller entitled to view Holidays","parameters":[{"name":"HolidaysId","in":"path","description":"Id of Holiday","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Calendar","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Holiday fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Holiday","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Holidays","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Holiday field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Holiday","schema":{},"examples":{"Filter by Description, in operator":{"description":"Filter by Description, in operator","value":"Description,IN,A,B,C"},"Filter by Description, not in operator":{"description":"Filter by Description, not in operator","value":"Description,NOT_IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Holiday field. For possible fields, refer to the schema section for Holiday","schema":{},"examples":{"Sort by Description, ascending order":{"description":"Sort by Description, ascending order","value":"Description:ASC"},"Sort by Description, descending order":{"description":"Sort by Description, descending order","value":"Description:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Holiday belonging to the parent Calendar. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Calendar.Holiday"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Calendar/{Id}/Holidays/{HolidaysId}"],"summary":"Deletes an existing Holiday belonging to Calendar subject to caller is entitled to delete Holidays","description":"Deletes a existing Holiday.\nHoliday is a sub-entity of Calendar. This action is subject to caller is entitled to delete Holidays","parameters":[{"name":"HolidaysId","in":"path","description":"Id of Holiday","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Calendar","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Holiday belonging to the parent Calendar","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Calendar/{Id}/Holidays/{HolidaysId}"],"summary":"Updates an existing Holiday belonging to Calendar subject to caller is entitled to edit Holidays","description":"Updates a existing Holiday.\nHoliday is a sub-entity of CalendarFields required to be passed while editing is EventDate.\n For possible entity Fields, refer to the schema section for Holiday in json format, subject to caller is entitled to edit Holidays","parameters":[{"name":"HolidaysId","in":"path","description":"Id of Holiday","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Calendar","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Holiday. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Holiday belonging to the parent Calendar. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Calendar.Holiday"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ClearingCodeType":{"get":{"tags":["/ClearingCodeType"],"summary":"Returns latest versions of all matching Clearing code typesin json format. This action requires the caller entitled to view Clearing code types","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Clearing code type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ClearingCodeType","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Clearing code types","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Clearing code type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ClearingCodeType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Clearing code type field. For possible fields, refer to the schema section for ClearingCodeType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Clearing code types. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingCodeType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/ClearingCodeType"],"summary":"Creates a new Clearing code type. This action requires the caller entitled to create Clearing code types","description":"Creates a new  Clearing code type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for ClearingCodeType. This action requires the caller entitled to create Clearing code types","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Clearing code type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Clearing code type. The response body would contain the created Clearing code type","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingCodeType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ClearingCodeType/{Id}":{"get":{"tags":["/ClearingCodeType/{Id}"],"summary":"Returns latest version of a specific Clearing code typein json format. This action requires the caller entitled to view Clearing code types","parameters":[{"name":"Id","in":"path","description":"Id of Clearing code type","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Clearing code type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ClearingCodeType","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Clearing code types","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Clearing code type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ClearingCodeType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Clearing code type field. For possible fields, refer to the schema section for ClearingCodeType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Clearing code type. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingCodeType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/ClearingCodeType/{Id}"],"summary":"Deletes an existing Clearing code type subject to caller is entitled to delete Clearing code types","description":"Deletes a existing Clearing code type.\n. This action is subject to caller is entitled to delete Clearing code types","parameters":[{"name":"Id","in":"path","description":"Id of Clearing code type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Clearing code type","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/ClearingCodeType/{Id}"],"summary":"Updates an existing Clearing code type subject to caller is entitled to edit Clearing code types","description":"Updates a existing Clearing code type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for ClearingCodeType in json format, subject to caller is entitled to edit Clearing code types","parameters":[{"name":"Id","in":"path","description":"Id of Clearing code type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Clearing code type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Clearing code type. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingCodeType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ClearingFormat":{"get":{"tags":["/ClearingFormat"],"summary":"Returns latest versions of all matching Clearing formatsin json format. This action requires the caller entitled to view Clearing formats","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Clearing format field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ClearingFormat","schema":{},"examples":{"Filter by Structure, not in operator":{"description":"Filter by Structure, not in operator","value":"Structure,NOT_IN,A,B,C"},"Filter by Structure, in operator":{"description":"Filter by Structure, in operator","value":"Structure,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Clearing formats","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Clearing format fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ClearingFormat","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Clearing format field. For possible fields, refer to the schema section for ClearingFormat","schema":{},"examples":{"Sort by Structure, ascending order":{"description":"Sort by Structure, ascending order","value":"Structure:ASC"},"Sort by Structure, descending order":{"description":"Sort by Structure, descending order","value":"Structure:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Clearing formats. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingFormat"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/ClearingFormat"],"summary":"Creates a new Clearing format. This action requires the caller entitled to create Clearing formats","description":"Creates a new  Clearing format.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for ClearingFormat. This action requires the caller entitled to create Clearing formats","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Clearing format. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Clearing format. The response body would contain the created Clearing format","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingFormat"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ClearingFormat/{Id}":{"get":{"tags":["/ClearingFormat/{Id}"],"summary":"Returns latest version of a specific Clearing formatin json format. This action requires the caller entitled to view Clearing formats","parameters":[{"name":"Id","in":"path","description":"Id of Clearing format","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Clearing format field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ClearingFormat","schema":{},"examples":{"Filter by Structure, not in operator":{"description":"Filter by Structure, not in operator","value":"Structure,NOT_IN,A,B,C"},"Filter by Structure, in operator":{"description":"Filter by Structure, in operator","value":"Structure,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Clearing formats","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Clearing format fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ClearingFormat","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Clearing format field. For possible fields, refer to the schema section for ClearingFormat","schema":{},"examples":{"Sort by Structure, ascending order":{"description":"Sort by Structure, ascending order","value":"Structure:ASC"},"Sort by Structure, descending order":{"description":"Sort by Structure, descending order","value":"Structure:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Clearing format. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingFormat"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/ClearingFormat/{Id}"],"summary":"Deletes an existing Clearing format subject to caller is entitled to delete Clearing formats","description":"Deletes a existing Clearing format.\n. This action is subject to caller is entitled to delete Clearing formats","parameters":[{"name":"Id","in":"path","description":"Id of Clearing format","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Clearing format","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/ClearingFormat/{Id}"],"summary":"Updates an existing Clearing format subject to caller is entitled to edit Clearing formats","description":"Updates a existing Clearing format.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for ClearingFormat in json format, subject to caller is entitled to edit Clearing formats","parameters":[{"name":"Id","in":"path","description":"Id of Clearing format","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Clearing format. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Clearing format. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingFormat"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ClearingSystem":{"get":{"tags":["/ClearingSystem"],"summary":"Returns latest versions of all matching Clearing systemsin json format. This action requires the caller entitled to view Clearing systems","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Clearing systems","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Clearing system fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ClearingSystem","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Clearing system field. For possible fields, refer to the schema section for ClearingSystem","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Clearing system field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ClearingSystem","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Clearing systems. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingSystem"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/ClearingSystem"],"summary":"Creates a new Clearing system. This action requires the caller entitled to create Clearing systems","description":"Creates a new  Clearing system.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for ClearingSystem. This action requires the caller entitled to create Clearing systems","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Clearing system. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Clearing system. The response body would contain the created Clearing system","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingSystem"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ClearingSystem/{Id}":{"get":{"tags":["/ClearingSystem/{Id}"],"summary":"Returns latest version of a specific Clearing systemin json format. This action requires the caller entitled to view Clearing systems","parameters":[{"name":"Id","in":"path","description":"Id of Clearing system","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Clearing systems","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Clearing system fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ClearingSystem","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Clearing system field. For possible fields, refer to the schema section for ClearingSystem","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Clearing system field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ClearingSystem","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Clearing system. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingSystem"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/ClearingSystem/{Id}"],"summary":"Deletes an existing Clearing system subject to caller is entitled to delete Clearing systems","description":"Deletes a existing Clearing system.\n. This action is subject to caller is entitled to delete Clearing systems","parameters":[{"name":"Id","in":"path","description":"Id of Clearing system","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Clearing system","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/ClearingSystem/{Id}"],"summary":"Updates an existing Clearing system subject to caller is entitled to edit Clearing systems","description":"Updates a existing Clearing system.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for ClearingSystem in json format, subject to caller is entitled to edit Clearing systems","parameters":[{"name":"Id","in":"path","description":"Id of Clearing system","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Clearing system. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Clearing system. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingSystem"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ClearingSystem/{Id}/Countries":{"get":{"tags":["/ClearingSystem/{Id}/Countries"],"summary":"Returns latest versions of all matching Country relations belonging to the parent Clearing systemin json format. This action requires the caller entitled to view Country relations","parameters":[{"name":"Id","in":"path","description":"Id of Clearing system","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Country relation fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ClearingSystemCountryRelation","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Country relations","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Country relation field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ClearingSystemCountryRelation","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Country relation field. For possible fields, refer to the schema section for ClearingSystemCountryRelation","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Country relations belonging to the parent Clearing system. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingSystem.ClearingSystemCountryRelation"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/ClearingSystem/{Id}/Countries"],"summary":"Creates a new Country relation belonging to Clearing system. This action requires the caller entitled to create Country relations","description":"Creates a new  Country relation.\nCountry relation is a sub-entity of  Clearing system The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are Country,ClearingSystemType.\n For possible entity Fields, refer to the schema section for ClearingSystemCountryRelation. This action requires the caller entitled to create Country relations","parameters":[{"name":"Id","in":"path","description":"Id of Clearing system","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Country relation. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Country relation for the parent Clearing system. The response body would contain the created Country relation","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingSystem.ClearingSystemCountryRelation"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ClearingSystem/{Id}/Countries/{CountriesId}":{"get":{"tags":["/ClearingSystem/{Id}/Countries/{CountriesId}"],"summary":"Returns latest version of a specific Country relation belonging to the parent Clearing systemin json format. This action requires the caller entitled to view Country relations","parameters":[{"name":"CountriesId","in":"path","description":"Id of Country relation","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Clearing system","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Country relation fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ClearingSystemCountryRelation","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Country relations","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Country relation field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ClearingSystemCountryRelation","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Country relation field. For possible fields, refer to the schema section for ClearingSystemCountryRelation","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Country relation belonging to the parent Clearing system. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingSystem.ClearingSystemCountryRelation"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/ClearingSystem/{Id}/Countries/{CountriesId}"],"summary":"Deletes an existing Country relation belonging to Clearing system subject to caller is entitled to delete Country relations","description":"Deletes a existing Country relation.\nCountry relation is a sub-entity of Clearing system. This action is subject to caller is entitled to delete Country relations","parameters":[{"name":"CountriesId","in":"path","description":"Id of Country relation","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Clearing system","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Country relation belonging to the parent Clearing system","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/ClearingSystem/{Id}/Countries/{CountriesId}"],"summary":"Updates an existing Country relation belonging to Clearing system subject to caller is entitled to edit Country relations","description":"Updates a existing Country relation.\nCountry relation is a sub-entity of Clearing system The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are Country,ClearingSystemType.\n For possible entity Fields, refer to the schema section for ClearingSystemCountryRelation in json format, subject to caller is entitled to edit Country relations","parameters":[{"name":"CountriesId","in":"path","description":"Id of Country relation","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Clearing system","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Country relation. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Country relation belonging to the parent Clearing system. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingSystem.ClearingSystemCountryRelation"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ClearingSystemType":{"get":{"tags":["/ClearingSystemType"],"summary":"Returns latest versions of all matching Clearing system typesin json format. This action requires the caller entitled to view Clearing system types","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Clearing system type field. For possible fields, refer to the schema section for ClearingSystemType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Clearing system type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ClearingSystemType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Clearing system types","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Clearing system type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ClearingSystemType","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Clearing system types. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingSystemType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/ClearingSystemType"],"summary":"Creates a new Clearing system type. This action requires the caller entitled to create Clearing system types","description":"Creates a new  Clearing system type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for ClearingSystemType. This action requires the caller entitled to create Clearing system types","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Clearing system type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Clearing system type. The response body would contain the created Clearing system type","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingSystemType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ClearingSystemType/{Id}":{"get":{"tags":["/ClearingSystemType/{Id}"],"summary":"Returns latest version of a specific Clearing system typein json format. This action requires the caller entitled to view Clearing system types","parameters":[{"name":"Id","in":"path","description":"Id of Clearing system type","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Clearing system type field. For possible fields, refer to the schema section for ClearingSystemType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Clearing system type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ClearingSystemType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Clearing system types","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Clearing system type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ClearingSystemType","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Clearing system type. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingSystemType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/ClearingSystemType/{Id}"],"summary":"Deletes an existing Clearing system type subject to caller is entitled to delete Clearing system types","description":"Deletes a existing Clearing system type.\n. This action is subject to caller is entitled to delete Clearing system types","parameters":[{"name":"Id","in":"path","description":"Id of Clearing system type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Clearing system type","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/ClearingSystemType/{Id}"],"summary":"Updates an existing Clearing system type subject to caller is entitled to edit Clearing system types","description":"Updates a existing Clearing system type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for ClearingSystemType in json format, subject to caller is entitled to edit Clearing system types","parameters":[{"name":"Id","in":"path","description":"Id of Clearing system type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Clearing system type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Clearing system type. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ClearingSystemType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CodeTypeField":{"get":{"tags":["/CodeTypeField"],"summary":"Returns latest versions of all matching Code typesin json format. This action requires the caller entitled to view Code types","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Code types","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Code type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CodeTypeField","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Code type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CodeTypeField","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Code type field. For possible fields, refer to the schema section for CodeTypeField","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Code types. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CodeTypeField"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CodeTypeField"],"summary":"Creates a new Code type. This action requires the caller entitled to create Code types","description":"Creates a new  Code type.\nFields required for creation are EntityTypes,Identifier.\n For possible entity Fields, refer to the schema section for CodeTypeField. This action requires the caller entitled to create Code types","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Code type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Code type. The response body would contain the created Code type","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CodeTypeField"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CodeTypeField/{Id}":{"get":{"tags":["/CodeTypeField/{Id}"],"summary":"Returns latest version of a specific Code typein json format. This action requires the caller entitled to view Code types","parameters":[{"name":"Id","in":"path","description":"Id of Code type","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Code types","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Code type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CodeTypeField","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Code type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CodeTypeField","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Code type field. For possible fields, refer to the schema section for CodeTypeField","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Code type. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CodeTypeField"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CodeTypeField/{Id}"],"summary":"Deletes an existing Code type subject to caller is entitled to delete Code types","description":"Deletes a existing Code type.\n. This action is subject to caller is entitled to delete Code types","parameters":[{"name":"Id","in":"path","description":"Id of Code type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Code type","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CodeTypeField/{Id}"],"summary":"Updates an existing Code type subject to caller is entitled to edit Code types","description":"Updates a existing Code type.\nFields required to be passed while editing are EntityTypes,Identifier.\n For possible entity Fields, refer to the schema section for CodeTypeField in json format, subject to caller is entitled to edit Code types","parameters":[{"name":"Id","in":"path","description":"Id of Code type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Code type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Code type. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CodeTypeField"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Commodity":{"get":{"tags":["/Commodity"],"summary":"Returns latest versions of all matching Commoditiesin json format. This action requires the caller entitled to view Commodities","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Commodity field. For possible fields, refer to the schema section for Commodity","schema":{},"examples":{"Sort by UNNumber, ascending order":{"description":"Sort by UNNumber, ascending order","value":"UNNumber:ASC"},"Sort by UNNumber, descending order":{"description":"Sort by UNNumber, descending order","value":"UNNumber:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Commodity fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Commodity","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Commodities","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Commodity field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Commodity","schema":{},"examples":{"Filter by UNNumber, in operator":{"description":"Filter by UNNumber, in operator","value":"UNNumber,IN,A,B,C"},"Filter by UNNumber, not in operator":{"description":"Filter by UNNumber, not in operator","value":"UNNumber,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Commodities. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Commodity"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Commodity"],"summary":"Creates a new Commodity. This action requires the caller entitled to create Commodities","description":"Creates a new  Commodity.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for Commodity. This action requires the caller entitled to create Commodities","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Commodity. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Commodity. The response body would contain the created Commodity","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Commodity"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Commodity/{Id}":{"get":{"tags":["/Commodity/{Id}"],"summary":"Returns latest version of a specific Commodityin json format. This action requires the caller entitled to view Commodities","parameters":[{"name":"Id","in":"path","description":"Id of Commodity","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Commodity field. For possible fields, refer to the schema section for Commodity","schema":{},"examples":{"Sort by UNNumber, ascending order":{"description":"Sort by UNNumber, ascending order","value":"UNNumber:ASC"},"Sort by UNNumber, descending order":{"description":"Sort by UNNumber, descending order","value":"UNNumber:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Commodity fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Commodity","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Commodities","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Commodity field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Commodity","schema":{},"examples":{"Filter by UNNumber, in operator":{"description":"Filter by UNNumber, in operator","value":"UNNumber,IN,A,B,C"},"Filter by UNNumber, not in operator":{"description":"Filter by UNNumber, not in operator","value":"UNNumber,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Commodity. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Commodity"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Commodity/{Id}"],"summary":"Deletes an existing Commodity subject to caller is entitled to delete Commodities","description":"Deletes a existing Commodity.\n. This action is subject to caller is entitled to delete Commodities","parameters":[{"name":"Id","in":"path","description":"Id of Commodity","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Commodity","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Commodity/{Id}"],"summary":"Updates an existing Commodity subject to caller is entitled to edit Commodities","description":"Updates a existing Commodity.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Commodity in json format, subject to caller is entitled to edit Commodities","parameters":[{"name":"Id","in":"path","description":"Id of Commodity","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Commodity. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Commodity. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Commodity"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Commodity/{Id}/Conversion":{"get":{"tags":["/Commodity/{Id}/Conversion"],"summary":"Returns latest versions of all matching UOM conversions belonging to the parent Commodityin json format. This action requires the caller entitled to view UOM conversions","parameters":[{"name":"Id","in":"path","description":"Id of Commodity","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the UOM conversion field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for UOMConversion","schema":{},"examples":{"Filter by DisplayName, not in operator":{"description":"Filter by DisplayName, not in operator","value":"DisplayName,NOT_IN,A,B,C"},"Filter by DisplayName, in operator":{"description":"Filter by DisplayName, in operator","value":"DisplayName,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any UOM conversion field. For possible fields, refer to the schema section for UOMConversion","schema":{},"examples":{"Sort by DisplayName, ascending order":{"description":"Sort by DisplayName, ascending order","value":"DisplayName:ASC"},"Sort by DisplayName, descending order":{"description":"Sort by DisplayName, descending order","value":"DisplayName:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned UOM conversions","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of UOM conversion fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for UOMConversion","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching UOM conversions belonging to the parent Commodity. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Commodity.UOMConversion"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Commodity/{Id}/Conversion"],"summary":"Creates a new UOM conversion belonging to Commodity. This action requires the caller entitled to create UOM conversions","description":"Creates a new  UOM conversion.\nUOM conversion is a sub-entity of  Commodity The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are UOMFrom,UOMTo,Conversion.\n For possible entity Fields, refer to the schema section for UOMConversion. This action requires the caller entitled to create UOM conversions","parameters":[{"name":"Id","in":"path","description":"Id of Commodity","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the UOM conversion. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of UOM conversion for the parent Commodity. The response body would contain the created UOM conversion","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Commodity.UOMConversion"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Commodity/{Id}/Conversion/{ConversionId}":{"get":{"tags":["/Commodity/{Id}/Conversion/{ConversionId}"],"summary":"Returns latest version of a specific UOM conversion belonging to the parent Commodityin json format. This action requires the caller entitled to view UOM conversions","parameters":[{"name":"ConversionId","in":"path","description":"Id of UOM conversion","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Commodity","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the UOM conversion field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for UOMConversion","schema":{},"examples":{"Filter by DisplayName, not in operator":{"description":"Filter by DisplayName, not in operator","value":"DisplayName,NOT_IN,A,B,C"},"Filter by DisplayName, in operator":{"description":"Filter by DisplayName, in operator","value":"DisplayName,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any UOM conversion field. For possible fields, refer to the schema section for UOMConversion","schema":{},"examples":{"Sort by DisplayName, ascending order":{"description":"Sort by DisplayName, ascending order","value":"DisplayName:ASC"},"Sort by DisplayName, descending order":{"description":"Sort by DisplayName, descending order","value":"DisplayName:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned UOM conversions","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of UOM conversion fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for UOMConversion","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific UOM conversion belonging to the parent Commodity. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Commodity.UOMConversion"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Commodity/{Id}/Conversion/{ConversionId}"],"summary":"Deletes an existing UOM conversion belonging to Commodity subject to caller is entitled to delete UOM conversions","description":"Deletes a existing UOM conversion.\nUOM conversion is a sub-entity of Commodity. This action is subject to caller is entitled to delete UOM conversions","parameters":[{"name":"ConversionId","in":"path","description":"Id of UOM conversion","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Commodity","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific UOM conversion belonging to the parent Commodity","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Commodity/{Id}/Conversion/{ConversionId}"],"summary":"Updates an existing UOM conversion belonging to Commodity subject to caller is entitled to edit UOM conversions","description":"Updates a existing UOM conversion.\nUOM conversion is a sub-entity of Commodity The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are UOMFrom,UOMTo,Conversion.\n For possible entity Fields, refer to the schema section for UOMConversion in json format, subject to caller is entitled to edit UOM conversions","parameters":[{"name":"ConversionId","in":"path","description":"Id of UOM conversion","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Commodity","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified UOM conversion. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific UOM conversion belonging to the parent Commodity. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Commodity.UOMConversion"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CommodityGroup":{"get":{"tags":["/CommodityGroup"],"summary":"Returns latest versions of all matching Commodity groupsin json format. This action requires the caller entitled to view Commodity groups","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Commodity group fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CommodityGroup","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Commodity group field. For possible fields, refer to the schema section for CommodityGroup","schema":{},"examples":{"Sort by Rule, descending order":{"description":"Sort by Rule, descending order","value":"Rule:DESC"},"Sort by Rule, ascending order":{"description":"Sort by Rule, ascending order","value":"Rule:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Commodity groups","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Commodity group field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CommodityGroup","schema":{},"examples":{"Filter by Rule, in operator":{"description":"Filter by Rule, in operator","value":"Rule,IN,A,B,C"},"Filter by Rule, not in operator":{"description":"Filter by Rule, not in operator","value":"Rule,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Commodity groups. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityGroup"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CommodityGroup"],"summary":"Creates a new Commodity group. This action requires the caller entitled to create Commodity groups","description":"Creates a new  Commodity group.\nFields required for creation is Id.\n For possible entity Fields, refer to the schema section for CommodityGroup. This action requires the caller entitled to create Commodity groups","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Commodity group. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Commodity group. The response body would contain the created Commodity group","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityGroup"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CommodityGroup/{Id}":{"get":{"tags":["/CommodityGroup/{Id}"],"summary":"Returns latest version of a specific Commodity groupin json format. This action requires the caller entitled to view Commodity groups","parameters":[{"name":"Id","in":"path","description":"Id of Commodity group","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Commodity group fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CommodityGroup","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Commodity group field. For possible fields, refer to the schema section for CommodityGroup","schema":{},"examples":{"Sort by Rule, descending order":{"description":"Sort by Rule, descending order","value":"Rule:DESC"},"Sort by Rule, ascending order":{"description":"Sort by Rule, ascending order","value":"Rule:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Commodity groups","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Commodity group field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CommodityGroup","schema":{},"examples":{"Filter by Rule, in operator":{"description":"Filter by Rule, in operator","value":"Rule,IN,A,B,C"},"Filter by Rule, not in operator":{"description":"Filter by Rule, not in operator","value":"Rule,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Commodity group. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityGroup"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CommodityGroup/{Id}"],"summary":"Deletes an existing Commodity group subject to caller is entitled to delete Commodity groups","description":"Deletes a existing Commodity group.\n. This action is subject to caller is entitled to delete Commodity groups","parameters":[{"name":"Id","in":"path","description":"Id of Commodity group","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Commodity group","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CommodityGroup/{Id}"],"summary":"Updates an existing Commodity group subject to caller is entitled to edit Commodity groups","description":"Updates a existing Commodity group.\nFields required to be passed while editing is Id.\n For possible entity Fields, refer to the schema section for CommodityGroup in json format, subject to caller is entitled to edit Commodity groups","parameters":[{"name":"Id","in":"path","description":"Id of Commodity group","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Commodity group. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Commodity group. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityGroup"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CommodityStrategy":{"get":{"tags":["/CommodityStrategy"],"summary":"Returns latest versions of all matching Strategiesin json format. This action requires the caller entitled to view Strategies","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Strategies","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Strategy field. For possible fields, refer to the schema section for CommodityStrategy","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Strategy fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CommodityStrategy","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Strategy field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CommodityStrategy","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Strategies. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategy"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CommodityStrategy"],"summary":"Creates a new Strategy. This action requires the caller entitled to create Strategies","description":"Creates a new  Strategy.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for CommodityStrategy. This action requires the caller entitled to create Strategies","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Strategy. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Strategy. The response body would contain the created Strategy","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategy"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CommodityStrategy/{Id}":{"get":{"tags":["/CommodityStrategy/{Id}"],"summary":"Returns latest version of a specific Strategyin json format. This action requires the caller entitled to view Strategies","parameters":[{"name":"Id","in":"path","description":"Id of Strategy","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Strategies","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Strategy field. For possible fields, refer to the schema section for CommodityStrategy","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Strategy fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CommodityStrategy","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Strategy field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CommodityStrategy","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Strategy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategy"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CommodityStrategy/{Id}"],"summary":"Deletes an existing Strategy subject to caller is entitled to delete Strategies","description":"Deletes a existing Strategy.\n. This action is subject to caller is entitled to delete Strategies","parameters":[{"name":"Id","in":"path","description":"Id of Strategy","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Strategy","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CommodityStrategy/{Id}"],"summary":"Updates an existing Strategy subject to caller is entitled to edit Strategies","description":"Updates a existing Strategy.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for CommodityStrategy in json format, subject to caller is entitled to edit Strategies","parameters":[{"name":"Id","in":"path","description":"Id of Strategy","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Strategy. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Strategy. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategy"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CommodityStrategyHierarchy":{"get":{"tags":["/CommodityStrategyHierarchy"],"summary":"Returns latest versions of all matching Strategy hierarchiesin json format. This action requires the caller entitled to view Strategy hierarchies","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Strategy hierarchies","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Strategy hierarchy fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CommodityStrategyHierarchy","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Strategy hierarchy field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CommodityStrategyHierarchy","schema":{},"examples":{"Filter by EntityClassStr, in operator":{"description":"Filter by EntityClassStr, in operator","value":"EntityClassStr,IN,A,B,C"},"Filter by EntityClassStr, not in operator":{"description":"Filter by EntityClassStr, not in operator","value":"EntityClassStr,NOT_IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Strategy hierarchy field. For possible fields, refer to the schema section for CommodityStrategyHierarchy","schema":{},"examples":{"Sort by EntityClassStr, ascending order":{"description":"Sort by EntityClassStr, ascending order","value":"EntityClassStr:ASC"},"Sort by EntityClassStr, descending order":{"description":"Sort by EntityClassStr, descending order","value":"EntityClassStr:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Strategy hierarchies. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CommodityStrategyHierarchy"],"summary":"Creates a new Strategy hierarchy. This action requires the caller entitled to create Strategy hierarchies","description":"Creates a new  Strategy hierarchy.\nFields required for creation is Id.\n For possible entity Fields, refer to the schema section for CommodityStrategyHierarchy. This action requires the caller entitled to create Strategy hierarchies","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Strategy hierarchy. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Strategy hierarchy. The response body would contain the created Strategy hierarchy","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CommodityStrategyHierarchy/{Id}":{"get":{"tags":["/CommodityStrategyHierarchy/{Id}"],"summary":"Returns latest version of a specific Strategy hierarchyin json format. This action requires the caller entitled to view Strategy hierarchies","parameters":[{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Strategy hierarchies","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Strategy hierarchy fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CommodityStrategyHierarchy","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Strategy hierarchy field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CommodityStrategyHierarchy","schema":{},"examples":{"Filter by EntityClassStr, in operator":{"description":"Filter by EntityClassStr, in operator","value":"EntityClassStr,IN,A,B,C"},"Filter by EntityClassStr, not in operator":{"description":"Filter by EntityClassStr, not in operator","value":"EntityClassStr,NOT_IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Strategy hierarchy field. For possible fields, refer to the schema section for CommodityStrategyHierarchy","schema":{},"examples":{"Sort by EntityClassStr, ascending order":{"description":"Sort by EntityClassStr, ascending order","value":"EntityClassStr:ASC"},"Sort by EntityClassStr, descending order":{"description":"Sort by EntityClassStr, descending order","value":"EntityClassStr:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Strategy hierarchy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CommodityStrategyHierarchy/{Id}"],"summary":"Deletes an existing Strategy hierarchy subject to caller is entitled to delete Strategy hierarchies","description":"Deletes a existing Strategy hierarchy.\n. This action is subject to caller is entitled to delete Strategy hierarchies","parameters":[{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Strategy hierarchy","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CommodityStrategyHierarchy/{Id}"],"summary":"Updates an existing Strategy hierarchy subject to caller is entitled to edit Strategy hierarchies","description":"Updates a existing Strategy hierarchy.\nFields required to be passed while editing is Id.\n For possible entity Fields, refer to the schema section for CommodityStrategyHierarchy in json format, subject to caller is entitled to edit Strategy hierarchies","parameters":[{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Strategy hierarchy. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Strategy hierarchy. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CommodityStrategyHierarchy/{Id}/LevelDefault":{"get":{"tags":["/CommodityStrategyHierarchy/{Id}/LevelDefault"],"summary":"Returns latest versions of all matching Level defaults belonging to the parent Strategy hierarchyin json format. This action requires the caller entitled to view Level defaults","parameters":[{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Level defaults","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Level default field. For possible fields, refer to the schema section for LevelDefault","schema":{},"examples":{"Sort by FieldName, descending order":{"description":"Sort by FieldName, descending order","value":"FieldName:DESC"},"Sort by FieldName, ascending order":{"description":"Sort by FieldName, ascending order","value":"FieldName:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Level default field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LevelDefault","schema":{},"examples":{"Filter by FieldName, in operator":{"description":"Filter by FieldName, in operator","value":"FieldName,IN,A,B,C"},"Filter by FieldName, not in operator":{"description":"Filter by FieldName, not in operator","value":"FieldName,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Level default fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LevelDefault","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Level defaults belonging to the parent Strategy hierarchy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy.LevelDefault"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CommodityStrategyHierarchy/{Id}/LevelDefault"],"summary":"Creates a new Level default belonging to Strategy hierarchy. This action requires the caller entitled to create Level defaults","description":"Creates a new  Level default.\nLevel default is a sub-entity of  Strategy hierarchy The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is FieldName.\n For possible entity Fields, refer to the schema section for LevelDefault. This action requires the caller entitled to create Level defaults","parameters":[{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Level default. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Level default for the parent Strategy hierarchy. The response body would contain the created Level default","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy.LevelDefault"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CommodityStrategyHierarchy/{Id}/LevelDefault/{LevelDefaultId}":{"get":{"tags":["/CommodityStrategyHierarchy/{Id}/LevelDefault/{LevelDefaultId}"],"summary":"Returns latest version of a specific Level default belonging to the parent Strategy hierarchyin json format. This action requires the caller entitled to view Level defaults","parameters":[{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Level defaults","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Level default field. For possible fields, refer to the schema section for LevelDefault","schema":{},"examples":{"Sort by FieldName, descending order":{"description":"Sort by FieldName, descending order","value":"FieldName:DESC"},"Sort by FieldName, ascending order":{"description":"Sort by FieldName, ascending order","value":"FieldName:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Level default field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LevelDefault","schema":{},"examples":{"Filter by FieldName, in operator":{"description":"Filter by FieldName, in operator","value":"FieldName,IN,A,B,C"},"Filter by FieldName, not in operator":{"description":"Filter by FieldName, not in operator","value":"FieldName,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Level default fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LevelDefault","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Level default belonging to the parent Strategy hierarchy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy.LevelDefault"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CommodityStrategyHierarchy/{Id}/LevelDefault/{LevelDefaultId}"],"summary":"Deletes an existing Level default belonging to Strategy hierarchy subject to caller is entitled to delete Level defaults","description":"Deletes a existing Level default.\nLevel default is a sub-entity of Strategy hierarchy. This action is subject to caller is entitled to delete Level defaults","parameters":[{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Level default belonging to the parent Strategy hierarchy","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CommodityStrategyHierarchy/{Id}/LevelDefault/{LevelDefaultId}"],"summary":"Updates an existing Level default belonging to Strategy hierarchy subject to caller is entitled to edit Level defaults","description":"Updates a existing Level default.\nLevel default is a sub-entity of Strategy hierarchy The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is FieldName.\n For possible entity Fields, refer to the schema section for LevelDefault in json format, subject to caller is entitled to edit Level defaults","parameters":[{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Level default. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Level default belonging to the parent Strategy hierarchy. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy.LevelDefault"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CommodityStrategyHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue":{"get":{"tags":["/CommodityStrategyHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue"],"summary":"Returns latest versions of all matching Level default values belonging to the parent Level defaultin json format. This action requires the caller entitled to view Level default values","parameters":[{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Level default value field. For possible fields, refer to the schema section for LevelDefaultValue","schema":{},"examples":{"Sort by DefaultValue, ascending order":{"description":"Sort by DefaultValue, ascending order","value":"DefaultValue:ASC"},"Sort by DefaultValue, descending order":{"description":"Sort by DefaultValue, descending order","value":"DefaultValue:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Level default value fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LevelDefaultValue","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Level default value field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LevelDefaultValue","schema":{},"examples":{"Filter by DefaultValue, not in operator":{"description":"Filter by DefaultValue, not in operator","value":"DefaultValue,NOT_IN,A,B,C"},"Filter by DefaultValue, in operator":{"description":"Filter by DefaultValue, in operator","value":"DefaultValue,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Level default values","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Level default values belonging to the parent Level default. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy.LevelDefault.LevelDefaultValue"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CommodityStrategyHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue"],"summary":"Creates a new Level default value belonging to Level default. This action requires the caller entitled to create Level default values","description":"Creates a new  Level default value.\nLevel default value is a sub-entity of  Level default The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Level.\n For possible entity Fields, refer to the schema section for LevelDefaultValue. This action requires the caller entitled to create Level default values","parameters":[{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Level default value. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Level default value for the parent Level default. The response body would contain the created Level default value","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy.LevelDefault.LevelDefaultValue"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CommodityStrategyHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue/{DefaultValueId}":{"get":{"tags":["/CommodityStrategyHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue/{DefaultValueId}"],"summary":"Returns latest version of a specific Level default value belonging to the parent Level defaultin json format. This action requires the caller entitled to view Level default values","parameters":[{"name":"DefaultValueId","in":"path","description":"Id of Level default value","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Level default value field. For possible fields, refer to the schema section for LevelDefaultValue","schema":{},"examples":{"Sort by DefaultValue, ascending order":{"description":"Sort by DefaultValue, ascending order","value":"DefaultValue:ASC"},"Sort by DefaultValue, descending order":{"description":"Sort by DefaultValue, descending order","value":"DefaultValue:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Level default value fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LevelDefaultValue","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Level default value field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LevelDefaultValue","schema":{},"examples":{"Filter by DefaultValue, not in operator":{"description":"Filter by DefaultValue, not in operator","value":"DefaultValue,NOT_IN,A,B,C"},"Filter by DefaultValue, in operator":{"description":"Filter by DefaultValue, in operator","value":"DefaultValue,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Level default values","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Level default value belonging to the parent Level default. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy.LevelDefault.LevelDefaultValue"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CommodityStrategyHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue/{DefaultValueId}"],"summary":"Deletes an existing Level default value belonging to Level default subject to caller is entitled to delete Level default values","description":"Deletes a existing Level default value.\nLevel default value is a sub-entity of Level default. This action is subject to caller is entitled to delete Level default values","parameters":[{"name":"DefaultValueId","in":"path","description":"Id of Level default value","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Level default value belonging to the parent Level default","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CommodityStrategyHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue/{DefaultValueId}"],"summary":"Updates an existing Level default value belonging to Level default subject to caller is entitled to edit Level default values","description":"Updates a existing Level default value.\nLevel default value is a sub-entity of Level default The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Level.\n For possible entity Fields, refer to the schema section for LevelDefaultValue in json format, subject to caller is entitled to edit Level default values","parameters":[{"name":"DefaultValueId","in":"path","description":"Id of Level default value","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Level default value. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Level default value belonging to the parent Level default. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy.LevelDefault.LevelDefaultValue"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CommodityStrategyHierarchy/{Id}/Levels":{"get":{"tags":["/CommodityStrategyHierarchy/{Id}/Levels"],"summary":"Returns latest versions of all matching Levels belonging to the parent Strategy hierarchyin json format. This action requires the caller entitled to view Levels","parameters":[{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Level field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Level","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Level fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Level","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Levels","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Level field. For possible fields, refer to the schema section for Level","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Levels belonging to the parent Strategy hierarchy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy.Level"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CommodityStrategyHierarchy/{Id}/Levels"],"summary":"Creates a new Level belonging to Strategy hierarchy. This action requires the caller entitled to create Levels","description":"Creates a new  Level.\nLevel is a sub-entity of  Strategy hierarchy The Id property is optional, if not provided it will auto generate an Id.\n For possible entity Fields, refer to the schema section for Level. This action requires the caller entitled to create Levels","parameters":[{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Level. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Level for the parent Strategy hierarchy. The response body would contain the created Level","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy.Level"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CommodityStrategyHierarchy/{Id}/Levels/{LevelsId}":{"get":{"tags":["/CommodityStrategyHierarchy/{Id}/Levels/{LevelsId}"],"summary":"Returns latest version of a specific Level belonging to the parent Strategy hierarchyin json format. This action requires the caller entitled to view Levels","parameters":[{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"LevelsId","in":"path","description":"Id of Level","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Level field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Level","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Level fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Level","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Levels","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Level field. For possible fields, refer to the schema section for Level","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Level belonging to the parent Strategy hierarchy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy.Level"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CommodityStrategyHierarchy/{Id}/Levels/{LevelsId}"],"summary":"Deletes an existing Level belonging to Strategy hierarchy subject to caller is entitled to delete Levels","description":"Deletes a existing Level.\nLevel is a sub-entity of Strategy hierarchy. This action is subject to caller is entitled to delete Levels","parameters":[{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"LevelsId","in":"path","description":"Id of Level","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Level belonging to the parent Strategy hierarchy","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CommodityStrategyHierarchy/{Id}/Levels/{LevelsId}"],"summary":"Updates an existing Level belonging to Strategy hierarchy subject to caller is entitled to edit Levels","description":"Updates a existing Level.\nLevel is a sub-entity of Strategy hierarchy The Id property is optional, if not provided it will auto generate an Id.\n For possible entity Fields, refer to the schema section for Level in json format, subject to caller is entitled to edit Levels","parameters":[{"name":"Id","in":"path","description":"Id of Strategy hierarchy","required":true,"schema":{}},{"name":"LevelsId","in":"path","description":"Id of Level","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Level. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Level belonging to the parent Strategy hierarchy. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyHierarchy.Level"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CommodityStrategyType":{"get":{"tags":["/CommodityStrategyType"],"summary":"Returns latest versions of all matching Strategy typesin json format. This action requires the caller entitled to view Strategy types","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Strategy types","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Strategy type field. For possible fields, refer to the schema section for CommodityStrategyType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Strategy type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CommodityStrategyType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Strategy type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CommodityStrategyType","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Strategy types. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CommodityStrategyType"],"summary":"Creates a new Strategy type. This action requires the caller entitled to create Strategy types","description":"Creates a new  Strategy type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for CommodityStrategyType. This action requires the caller entitled to create Strategy types","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Strategy type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Strategy type. The response body would contain the created Strategy type","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CommodityStrategyType/{Id}":{"get":{"tags":["/CommodityStrategyType/{Id}"],"summary":"Returns latest version of a specific Strategy typein json format. This action requires the caller entitled to view Strategy types","parameters":[{"name":"Id","in":"path","description":"Id of Strategy type","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Strategy types","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Strategy type field. For possible fields, refer to the schema section for CommodityStrategyType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Strategy type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CommodityStrategyType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Strategy type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CommodityStrategyType","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Strategy type. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CommodityStrategyType/{Id}"],"summary":"Deletes an existing Strategy type subject to caller is entitled to delete Strategy types","description":"Deletes a existing Strategy type.\n. This action is subject to caller is entitled to delete Strategy types","parameters":[{"name":"Id","in":"path","description":"Id of Strategy type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Strategy type","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CommodityStrategyType/{Id}"],"summary":"Updates an existing Strategy type subject to caller is entitled to edit Strategy types","description":"Updates a existing Strategy type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for CommodityStrategyType in json format, subject to caller is entitled to edit Strategy types","parameters":[{"name":"Id","in":"path","description":"Id of Strategy type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Strategy type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Strategy type. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CommodityStrategyType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ConfirmationFieldType":{"get":{"tags":["/ConfirmationFieldType"],"summary":"Returns latest versions of all matching Confirmation field typesin json format. This action requires the caller entitled to view Confirmation field types","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Confirmation field type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ConfirmationFieldType","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Confirmation field type field. For possible fields, refer to the schema section for ConfirmationFieldType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Confirmation field type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ConfirmationFieldType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Confirmation field types","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Confirmation field types. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ConfirmationFieldType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/ConfirmationFieldType"],"summary":"Creates a new Confirmation field type. This action requires the caller entitled to create Confirmation field types","description":"Creates a new  Confirmation field type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for ConfirmationFieldType. This action requires the caller entitled to create Confirmation field types","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Confirmation field type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Confirmation field type. The response body would contain the created Confirmation field type","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ConfirmationFieldType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ConfirmationFieldType/{Id}":{"get":{"tags":["/ConfirmationFieldType/{Id}"],"summary":"Returns latest version of a specific Confirmation field typein json format. This action requires the caller entitled to view Confirmation field types","parameters":[{"name":"Id","in":"path","description":"Id of Confirmation field type","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Confirmation field type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ConfirmationFieldType","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Confirmation field type field. For possible fields, refer to the schema section for ConfirmationFieldType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Confirmation field type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ConfirmationFieldType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Confirmation field types","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Confirmation field type. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ConfirmationFieldType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/ConfirmationFieldType/{Id}"],"summary":"Deletes an existing Confirmation field type subject to caller is entitled to delete Confirmation field types","description":"Deletes a existing Confirmation field type.\n. This action is subject to caller is entitled to delete Confirmation field types","parameters":[{"name":"Id","in":"path","description":"Id of Confirmation field type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Confirmation field type","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/ConfirmationFieldType/{Id}"],"summary":"Updates an existing Confirmation field type subject to caller is entitled to edit Confirmation field types","description":"Updates a existing Confirmation field type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for ConfirmationFieldType in json format, subject to caller is entitled to edit Confirmation field types","parameters":[{"name":"Id","in":"path","description":"Id of Confirmation field type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Confirmation field type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Confirmation field type. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ConfirmationFieldType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ConfirmationPlatform":{"get":{"tags":["/ConfirmationPlatform"],"summary":"Returns latest versions of all matching Confirmation platformsin json format. This action requires the caller entitled to view Confirmation platforms","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Confirmation platform fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ConfirmationPlatform","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Confirmation platform field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ConfirmationPlatform","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Confirmation platforms","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Confirmation platform field. For possible fields, refer to the schema section for ConfirmationPlatform","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Confirmation platforms. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ConfirmationPlatform"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/ConfirmationPlatform"],"summary":"Creates a new Confirmation platform. This action requires the caller entitled to create Confirmation platforms","description":"Creates a new  Confirmation platform.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for ConfirmationPlatform. This action requires the caller entitled to create Confirmation platforms","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Confirmation platform. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Confirmation platform. The response body would contain the created Confirmation platform","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ConfirmationPlatform"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ConfirmationPlatform/{Id}":{"get":{"tags":["/ConfirmationPlatform/{Id}"],"summary":"Returns latest version of a specific Confirmation platformin json format. This action requires the caller entitled to view Confirmation platforms","parameters":[{"name":"Id","in":"path","description":"Id of Confirmation platform","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Confirmation platform fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ConfirmationPlatform","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Confirmation platform field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ConfirmationPlatform","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Confirmation platforms","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Confirmation platform field. For possible fields, refer to the schema section for ConfirmationPlatform","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Confirmation platform. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ConfirmationPlatform"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/ConfirmationPlatform/{Id}"],"summary":"Deletes an existing Confirmation platform subject to caller is entitled to delete Confirmation platforms","description":"Deletes a existing Confirmation platform.\n. This action is subject to caller is entitled to delete Confirmation platforms","parameters":[{"name":"Id","in":"path","description":"Id of Confirmation platform","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Confirmation platform","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/ConfirmationPlatform/{Id}"],"summary":"Updates an existing Confirmation platform subject to caller is entitled to edit Confirmation platforms","description":"Updates a existing Confirmation platform.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for ConfirmationPlatform in json format, subject to caller is entitled to edit Confirmation platforms","parameters":[{"name":"Id","in":"path","description":"Id of Confirmation platform","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Confirmation platform. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Confirmation platform. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ConfirmationPlatform"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ContactType":{"get":{"tags":["/ContactType"],"summary":"Returns latest versions of all matching Contact typesin json format. This action requires the caller entitled to view Contact types","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Contact type field. For possible fields, refer to the schema section for ContactType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Contact types","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Contact type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ContactType","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Contact type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ContactType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Contact types. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ContactType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/ContactType"],"summary":"Creates a new Contact type. This action requires the caller entitled to create Contact types","description":"Creates a new  Contact type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for ContactType. This action requires the caller entitled to create Contact types","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Contact type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Contact type. The response body would contain the created Contact type","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ContactType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ContactType/{Id}":{"get":{"tags":["/ContactType/{Id}"],"summary":"Returns latest version of a specific Contact typein json format. This action requires the caller entitled to view Contact types","parameters":[{"name":"Id","in":"path","description":"Id of Contact type","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Contact type field. For possible fields, refer to the schema section for ContactType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Contact types","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Contact type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ContactType","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Contact type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ContactType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Contact type. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ContactType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/ContactType/{Id}"],"summary":"Deletes an existing Contact type subject to caller is entitled to delete Contact types","description":"Deletes a existing Contact type.\n. This action is subject to caller is entitled to delete Contact types","parameters":[{"name":"Id","in":"path","description":"Id of Contact type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Contact type","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/ContactType/{Id}"],"summary":"Updates an existing Contact type subject to caller is entitled to edit Contact types","description":"Updates a existing Contact type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for ContactType in json format, subject to caller is entitled to edit Contact types","parameters":[{"name":"Id","in":"path","description":"Id of Contact type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Contact type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Contact type. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ContactType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ContractGroup":{"get":{"tags":["/ContractGroup"],"summary":"Returns latest versions of all matching Contract groupsin json format. This action requires the caller entitled to view Contract groups","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Contract group field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ContractGroup","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Contract group field. For possible fields, refer to the schema section for ContractGroup","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Contract groups","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Contract group fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ContractGroup","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Contract groups. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ContractGroup"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/ContractGroup"],"summary":"Creates a new Contract group. This action requires the caller entitled to create Contract groups","description":"Creates a new  Contract group.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for ContractGroup. This action requires the caller entitled to create Contract groups","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Contract group. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Contract group. The response body would contain the created Contract group","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ContractGroup"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ContractGroup/{Id}":{"get":{"tags":["/ContractGroup/{Id}"],"summary":"Returns latest version of a specific Contract groupin json format. This action requires the caller entitled to view Contract groups","parameters":[{"name":"Id","in":"path","description":"Id of Contract group","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Contract group field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ContractGroup","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Contract group field. For possible fields, refer to the schema section for ContractGroup","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Contract groups","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Contract group fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ContractGroup","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Contract group. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ContractGroup"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/ContractGroup/{Id}"],"summary":"Deletes an existing Contract group subject to caller is entitled to delete Contract groups","description":"Deletes a existing Contract group.\n. This action is subject to caller is entitled to delete Contract groups","parameters":[{"name":"Id","in":"path","description":"Id of Contract group","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Contract group","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/ContractGroup/{Id}"],"summary":"Updates an existing Contract group subject to caller is entitled to edit Contract groups","description":"Updates a existing Contract group.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for ContractGroup in json format, subject to caller is entitled to edit Contract groups","parameters":[{"name":"Id","in":"path","description":"Id of Contract group","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Contract group. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Contract group. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ContractGroup"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ContractStatus":{"get":{"tags":["/ContractStatus"],"summary":"Returns latest versions of all matching Contract statusesin json format. This action requires the caller entitled to view Contract statuses","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Contract status field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ContractStatus","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Contract status fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ContractStatus","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Contract status field. For possible fields, refer to the schema section for ContractStatus","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Contract statuses","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Contract statuses. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ContractStatus"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/ContractStatus"],"summary":"Creates a new Contract status. This action requires the caller entitled to create Contract statuses","description":"Creates a new  Contract status.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for ContractStatus. This action requires the caller entitled to create Contract statuses","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Contract status. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Contract status. The response body would contain the created Contract status","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ContractStatus"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ContractStatus/{Id}":{"get":{"tags":["/ContractStatus/{Id}"],"summary":"Returns latest version of a specific Contract statusin json format. This action requires the caller entitled to view Contract statuses","parameters":[{"name":"Id","in":"path","description":"Id of Contract status","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Contract status field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ContractStatus","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Contract status fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ContractStatus","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Contract status field. For possible fields, refer to the schema section for ContractStatus","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Contract statuses","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Contract status. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ContractStatus"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/ContractStatus/{Id}"],"summary":"Deletes an existing Contract status subject to caller is entitled to delete Contract statuses","description":"Deletes a existing Contract status.\n. This action is subject to caller is entitled to delete Contract statuses","parameters":[{"name":"Id","in":"path","description":"Id of Contract status","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Contract status","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/ContractStatus/{Id}"],"summary":"Updates an existing Contract status subject to caller is entitled to edit Contract statuses","description":"Updates a existing Contract status.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for ContractStatus in json format, subject to caller is entitled to edit Contract statuses","parameters":[{"name":"Id","in":"path","description":"Id of Contract status","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Contract status. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Contract status. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ContractStatus"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty":{"get":{"tags":["/Counterparty"],"summary":"Returns latest versions of all matching Counterpartiesin json format. This action requires the caller entitled to view Counterparties","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Counterparty field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Counterparty","schema":{},"examples":{"Filter by WithholdingTaxExemptionReason, in operator":{"description":"Filter by WithholdingTaxExemptionReason, in operator","value":"WithholdingTaxExemptionReason,IN,A,B,C"},"Filter by WithholdingTaxExemptionReason, not in operator":{"description":"Filter by WithholdingTaxExemptionReason, not in operator","value":"WithholdingTaxExemptionReason,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Counterparty fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Counterparty","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Counterparty field. For possible fields, refer to the schema section for Counterparty","schema":{},"examples":{"Sort by WithholdingTaxExemptionReason, descending order":{"description":"Sort by WithholdingTaxExemptionReason, descending order","value":"WithholdingTaxExemptionReason:DESC"},"Sort by WithholdingTaxExemptionReason, ascending order":{"description":"Sort by WithholdingTaxExemptionReason, ascending order","value":"WithholdingTaxExemptionReason:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Counterparties","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Counterparties. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty"],"summary":"Creates a new Counterparty. This action requires the caller entitled to create Counterparties","description":"Creates a new  Counterparty.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are ShortName,Name.\n For possible entity Fields, refer to the schema section for Counterparty. This action requires the caller entitled to create Counterparties","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Counterparty. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Counterparty. The response body would contain the created Counterparty","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}":{"get":{"tags":["/Counterparty/{Id}"],"summary":"Returns latest version of a specific Counterpartyin json format. This action requires the caller entitled to view Counterparties","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Counterparty field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Counterparty","schema":{},"examples":{"Filter by WithholdingTaxExemptionReason, in operator":{"description":"Filter by WithholdingTaxExemptionReason, in operator","value":"WithholdingTaxExemptionReason,IN,A,B,C"},"Filter by WithholdingTaxExemptionReason, not in operator":{"description":"Filter by WithholdingTaxExemptionReason, not in operator","value":"WithholdingTaxExemptionReason,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Counterparty fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Counterparty","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Counterparty field. For possible fields, refer to the schema section for Counterparty","schema":{},"examples":{"Sort by WithholdingTaxExemptionReason, descending order":{"description":"Sort by WithholdingTaxExemptionReason, descending order","value":"WithholdingTaxExemptionReason:DESC"},"Sort by WithholdingTaxExemptionReason, ascending order":{"description":"Sort by WithholdingTaxExemptionReason, ascending order","value":"WithholdingTaxExemptionReason:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Counterparties","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}"],"summary":"Deletes an existing Counterparty subject to caller is entitled to delete Counterparties","description":"Deletes a existing Counterparty.\n. This action is subject to caller is entitled to delete Counterparties","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}"],"summary":"Updates an existing Counterparty subject to caller is entitled to edit Counterparties","description":"Updates a existing Counterparty.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are ShortName,Name.\n For possible entity Fields, refer to the schema section for Counterparty in json format, subject to caller is entitled to edit Counterparties","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Counterparty. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Addresses":{"get":{"tags":["/Counterparty/{Id}/Addresses"],"summary":"Returns latest versions of all matching Addresses belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Addresses","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Address fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Address","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Address field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Address","schema":{},"examples":{"Filter by Town, not in operator":{"description":"Filter by Town, not in operator","value":"Town,NOT_IN,A,B,C"},"Filter by Town, in operator":{"description":"Filter by Town, in operator","value":"Town,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Address field. For possible fields, refer to the schema section for Address","schema":{},"examples":{"Sort by Town, descending order":{"description":"Sort by Town, descending order","value":"Town:DESC"},"Sort by Town, ascending order":{"description":"Sort by Town, ascending order","value":"Town:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Addresses","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Addresses belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Address"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/Addresses"],"summary":"Creates a new Address belonging to Counterparty. This action requires the caller entitled to create Addresses","description":"Creates a new  Address.\nAddress is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is AddressTypeId.\n For possible entity Fields, refer to the schema section for Address. This action requires the caller entitled to create Addresses","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Address. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Address for the parent Counterparty. The response body would contain the created Address","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Address"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Addresses/{AddressesId}":{"get":{"tags":["/Counterparty/{Id}/Addresses/{AddressesId}"],"summary":"Returns latest version of a specific Address belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Addresses","parameters":[{"name":"AddressesId","in":"path","description":"Id of Address","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Address fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Address","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Address field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Address","schema":{},"examples":{"Filter by Town, not in operator":{"description":"Filter by Town, not in operator","value":"Town,NOT_IN,A,B,C"},"Filter by Town, in operator":{"description":"Filter by Town, in operator","value":"Town,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Address field. For possible fields, refer to the schema section for Address","schema":{},"examples":{"Sort by Town, descending order":{"description":"Sort by Town, descending order","value":"Town:DESC"},"Sort by Town, ascending order":{"description":"Sort by Town, ascending order","value":"Town:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Addresses","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Address belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Address"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/Addresses/{AddressesId}"],"summary":"Deletes an existing Address belonging to Counterparty subject to caller is entitled to delete Addresses","description":"Deletes a existing Address.\nAddress is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Addresses","parameters":[{"name":"AddressesId","in":"path","description":"Id of Address","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Address belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/Addresses/{AddressesId}"],"summary":"Updates an existing Address belonging to Counterparty subject to caller is entitled to edit Addresses","description":"Updates a existing Address.\nAddress is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is AddressTypeId.\n For possible entity Fields, refer to the schema section for Address in json format, subject to caller is entitled to edit Addresses","parameters":[{"name":"AddressesId","in":"path","description":"Id of Address","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Address. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Address belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Address"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/BICs":{"get":{"tags":["/Counterparty/{Id}/BICs"],"summary":"Returns latest versions of all matching BIC Type Relations belonging to the parent Counterpartyin json format. This action requires the caller entitled to view BIC Type Relations","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned BIC Type Relations","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the BIC Type Relation field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BICTypeRelation","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any BIC Type Relation field. For possible fields, refer to the schema section for BICTypeRelation","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of BIC Type Relation fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BICTypeRelation","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching BIC Type Relations belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BICTypeRelation"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/BICs"],"summary":"Creates a new BIC Type Relation belonging to Counterparty. This action requires the caller entitled to create BIC Type Relations","description":"Creates a new  BIC Type Relation.\nBIC Type Relation is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are Type,BIC.\n For possible entity Fields, refer to the schema section for BICTypeRelation. This action requires the caller entitled to create BIC Type Relations","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the BIC Type Relation. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of BIC Type Relation for the parent Counterparty. The response body would contain the created BIC Type Relation","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BICTypeRelation"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/BICs/{BiCsId}":{"get":{"tags":["/Counterparty/{Id}/BICs/{BiCsId}"],"summary":"Returns latest version of a specific BIC Type Relation belonging to the parent Counterpartyin json format. This action requires the caller entitled to view BIC Type Relations","parameters":[{"name":"BiCsId","in":"path","description":"Id of BIC Type Relation","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned BIC Type Relations","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the BIC Type Relation field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BICTypeRelation","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any BIC Type Relation field. For possible fields, refer to the schema section for BICTypeRelation","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of BIC Type Relation fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BICTypeRelation","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific BIC Type Relation belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BICTypeRelation"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/BICs/{BiCsId}"],"summary":"Deletes an existing BIC Type Relation belonging to Counterparty subject to caller is entitled to delete BIC Type Relations","description":"Deletes a existing BIC Type Relation.\nBIC Type Relation is a sub-entity of Counterparty. This action is subject to caller is entitled to delete BIC Type Relations","parameters":[{"name":"BiCsId","in":"path","description":"Id of BIC Type Relation","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific BIC Type Relation belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/BICs/{BiCsId}"],"summary":"Updates an existing BIC Type Relation belonging to Counterparty subject to caller is entitled to edit BIC Type Relations","description":"Updates a existing BIC Type Relation.\nBIC Type Relation is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are Type,BIC.\n For possible entity Fields, refer to the schema section for BICTypeRelation in json format, subject to caller is entitled to edit BIC Type Relations","parameters":[{"name":"BiCsId","in":"path","description":"Id of BIC Type Relation","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified BIC Type Relation. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific BIC Type Relation belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BICTypeRelation"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/BankAccounts":{"get":{"tags":["/Counterparty/{Id}/BankAccounts"],"summary":"Returns latest versions of all matching Bank accounts belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Bank accounts","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Bank account fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BankAccount","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Bank account field. For possible fields, refer to the schema section for BankAccount","schema":{},"examples":{"Sort by SwiftCode, ascending order":{"description":"Sort by SwiftCode, ascending order","value":"SwiftCode:ASC"},"Sort by SwiftCode, descending order":{"description":"Sort by SwiftCode, descending order","value":"SwiftCode:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Bank account field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BankAccount","schema":{},"examples":{"Filter by SwiftCode, in operator":{"description":"Filter by SwiftCode, in operator","value":"SwiftCode,IN,A,B,C"},"Filter by SwiftCode, not in operator":{"description":"Filter by SwiftCode, not in operator","value":"SwiftCode,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Bank accounts","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Bank accounts belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BankAccount"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/BankAccounts"],"summary":"Creates a new Bank account belonging to Counterparty. This action requires the caller entitled to create Bank accounts","description":"Creates a new  Bank account.\nBank account is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for BankAccount. This action requires the caller entitled to create Bank accounts","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Bank account. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Bank account for the parent Counterparty. The response body would contain the created Bank account","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BankAccount"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/BankAccounts/{BankAccountsId}":{"get":{"tags":["/Counterparty/{Id}/BankAccounts/{BankAccountsId}"],"summary":"Returns latest version of a specific Bank account belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Bank accounts","parameters":[{"name":"BankAccountsId","in":"path","description":"Id of Bank account","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Bank account fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BankAccount","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Bank account field. For possible fields, refer to the schema section for BankAccount","schema":{},"examples":{"Sort by SwiftCode, ascending order":{"description":"Sort by SwiftCode, ascending order","value":"SwiftCode:ASC"},"Sort by SwiftCode, descending order":{"description":"Sort by SwiftCode, descending order","value":"SwiftCode:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Bank account field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BankAccount","schema":{},"examples":{"Filter by SwiftCode, in operator":{"description":"Filter by SwiftCode, in operator","value":"SwiftCode,IN,A,B,C"},"Filter by SwiftCode, not in operator":{"description":"Filter by SwiftCode, not in operator","value":"SwiftCode,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Bank accounts","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Bank account belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BankAccount"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/BankAccounts/{BankAccountsId}"],"summary":"Deletes an existing Bank account belonging to Counterparty subject to caller is entitled to delete Bank accounts","description":"Deletes a existing Bank account.\nBank account is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Bank accounts","parameters":[{"name":"BankAccountsId","in":"path","description":"Id of Bank account","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Bank account belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/BankAccounts/{BankAccountsId}"],"summary":"Updates an existing Bank account belonging to Counterparty subject to caller is entitled to edit Bank accounts","description":"Updates a existing Bank account.\nBank account is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for BankAccount in json format, subject to caller is entitled to edit Bank accounts","parameters":[{"name":"BankAccountsId","in":"path","description":"Id of Bank account","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Bank account. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Bank account belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BankAccount"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/BusinessUnits":{"get":{"tags":["/Counterparty/{Id}/BusinessUnits"],"summary":"Returns latest versions of all matching Business Unit Relations belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Business Unit Relations","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Business Unit Relation field. For possible fields, refer to the schema section for BusinessUnitSubEntity","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Business Unit Relation field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BusinessUnitSubEntity","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Business Unit Relation fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BusinessUnitSubEntity","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Business Unit Relations","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Business Unit Relations belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BusinessUnitSubEntity"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/BusinessUnits"],"summary":"Creates a new Business Unit Relation belonging to Counterparty. This action requires the caller entitled to create Business Unit Relations","description":"Creates a new  Business Unit Relation.\nBusiness Unit Relation is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is BusinessUnit.\n For possible entity Fields, refer to the schema section for BusinessUnitSubEntity. This action requires the caller entitled to create Business Unit Relations","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Business Unit Relation. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Business Unit Relation for the parent Counterparty. The response body would contain the created Business Unit Relation","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BusinessUnitSubEntity"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/BusinessUnits/{BusinessUnitsId}":{"get":{"tags":["/Counterparty/{Id}/BusinessUnits/{BusinessUnitsId}"],"summary":"Returns latest version of a specific Business Unit Relation belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Business Unit Relations","parameters":[{"name":"BusinessUnitsId","in":"path","description":"Id of Business Unit Relation","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Business Unit Relation field. For possible fields, refer to the schema section for BusinessUnitSubEntity","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Business Unit Relation field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BusinessUnitSubEntity","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Business Unit Relation fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BusinessUnitSubEntity","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Business Unit Relations","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Business Unit Relation belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BusinessUnitSubEntity"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/BusinessUnits/{BusinessUnitsId}"],"summary":"Deletes an existing Business Unit Relation belonging to Counterparty subject to caller is entitled to delete Business Unit Relations","description":"Deletes a existing Business Unit Relation.\nBusiness Unit Relation is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Business Unit Relations","parameters":[{"name":"BusinessUnitsId","in":"path","description":"Id of Business Unit Relation","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Business Unit Relation belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/BusinessUnits/{BusinessUnitsId}"],"summary":"Updates an existing Business Unit Relation belonging to Counterparty subject to caller is entitled to edit Business Unit Relations","description":"Updates a existing Business Unit Relation.\nBusiness Unit Relation is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is BusinessUnit.\n For possible entity Fields, refer to the schema section for BusinessUnitSubEntity in json format, subject to caller is entitled to edit Business Unit Relations","parameters":[{"name":"BusinessUnitsId","in":"path","description":"Id of Business Unit Relation","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Business Unit Relation. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Business Unit Relation belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.BusinessUnitSubEntity"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/ClearingCodes":{"get":{"tags":["/Counterparty/{Id}/ClearingCodes"],"summary":"Returns latest versions of all matching Clearing codes belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Clearing codes","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Clearing codes","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Clearing code field. For possible fields, refer to the schema section for ClearingCode","schema":{},"examples":{"Sort by Code, descending order":{"description":"Sort by Code, descending order","value":"Code:DESC"},"Sort by Code, ascending order":{"description":"Sort by Code, ascending order","value":"Code:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Clearing code fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ClearingCode","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Clearing code field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ClearingCode","schema":{},"examples":{"Filter by Code, not in operator":{"description":"Filter by Code, not in operator","value":"Code,NOT_IN,A,B,C"},"Filter by Code, in operator":{"description":"Filter by Code, in operator","value":"Code,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Clearing codes belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.ClearingCode"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/ClearingCodes"],"summary":"Creates a new Clearing code belonging to Counterparty. This action requires the caller entitled to create Clearing codes","description":"Creates a new  Clearing code.\nClearing code is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are ClearingFormat,Type,Code,ClearingSystem.\n For possible entity Fields, refer to the schema section for ClearingCode. This action requires the caller entitled to create Clearing codes","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Clearing code. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Clearing code for the parent Counterparty. The response body would contain the created Clearing code","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.ClearingCode"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/ClearingCodes/{ClearingCodesId}":{"get":{"tags":["/Counterparty/{Id}/ClearingCodes/{ClearingCodesId}"],"summary":"Returns latest version of a specific Clearing code belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Clearing codes","parameters":[{"name":"ClearingCodesId","in":"path","description":"Id of Clearing code","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Clearing codes","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Clearing code field. For possible fields, refer to the schema section for ClearingCode","schema":{},"examples":{"Sort by Code, descending order":{"description":"Sort by Code, descending order","value":"Code:DESC"},"Sort by Code, ascending order":{"description":"Sort by Code, ascending order","value":"Code:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Clearing code fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ClearingCode","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Clearing code field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ClearingCode","schema":{},"examples":{"Filter by Code, not in operator":{"description":"Filter by Code, not in operator","value":"Code,NOT_IN,A,B,C"},"Filter by Code, in operator":{"description":"Filter by Code, in operator","value":"Code,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Clearing code belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.ClearingCode"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/ClearingCodes/{ClearingCodesId}"],"summary":"Deletes an existing Clearing code belonging to Counterparty subject to caller is entitled to delete Clearing codes","description":"Deletes a existing Clearing code.\nClearing code is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Clearing codes","parameters":[{"name":"ClearingCodesId","in":"path","description":"Id of Clearing code","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Clearing code belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/ClearingCodes/{ClearingCodesId}"],"summary":"Updates an existing Clearing code belonging to Counterparty subject to caller is entitled to edit Clearing codes","description":"Updates a existing Clearing code.\nClearing code is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are ClearingFormat,Type,Code,ClearingSystem.\n For possible entity Fields, refer to the schema section for ClearingCode in json format, subject to caller is entitled to edit Clearing codes","parameters":[{"name":"ClearingCodesId","in":"path","description":"Id of Clearing code","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Clearing code. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Clearing code belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.ClearingCode"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Contacts":{"get":{"tags":["/Counterparty/{Id}/Contacts"],"summary":"Returns latest versions of all matching Contacts belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Contacts","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Contact fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Contact","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Contact field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Contact","schema":{},"examples":{"Filter by Phone, in operator":{"description":"Filter by Phone, in operator","value":"Phone,IN,A,B,C"},"Filter by Phone, not in operator":{"description":"Filter by Phone, not in operator","value":"Phone,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Contacts","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Contact field. For possible fields, refer to the schema section for Contact","schema":{},"examples":{"Sort by Phone, descending order":{"description":"Sort by Phone, descending order","value":"Phone:DESC"},"Sort by Phone, ascending order":{"description":"Sort by Phone, ascending order","value":"Phone:ASC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Contacts belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Contact"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/Contacts"],"summary":"Creates a new Contact belonging to Counterparty. This action requires the caller entitled to create Contacts","description":"Creates a new  Contact.\nContact is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for Contact. This action requires the caller entitled to create Contacts","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Contact. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Contact for the parent Counterparty. The response body would contain the created Contact","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Contact"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Contacts/{ContactsId}":{"get":{"tags":["/Counterparty/{Id}/Contacts/{ContactsId}"],"summary":"Returns latest version of a specific Contact belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Contacts","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Contact fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Contact","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Contact field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Contact","schema":{},"examples":{"Filter by Phone, in operator":{"description":"Filter by Phone, in operator","value":"Phone,IN,A,B,C"},"Filter by Phone, not in operator":{"description":"Filter by Phone, not in operator","value":"Phone,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Contacts","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Contact field. For possible fields, refer to the schema section for Contact","schema":{},"examples":{"Sort by Phone, descending order":{"description":"Sort by Phone, descending order","value":"Phone:DESC"},"Sort by Phone, ascending order":{"description":"Sort by Phone, ascending order","value":"Phone:ASC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Contact belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Contact"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/Contacts/{ContactsId}"],"summary":"Deletes an existing Contact belonging to Counterparty subject to caller is entitled to delete Contacts","description":"Deletes a existing Contact.\nContact is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Contacts","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Contact belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/Contacts/{ContactsId}"],"summary":"Updates an existing Contact belonging to Counterparty subject to caller is entitled to edit Contacts","description":"Updates a existing Contact.\nContact is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Contact in json format, subject to caller is entitled to edit Contacts","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Contact. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Contact belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Contact"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/DepositoryCodes":{"get":{"tags":["/Counterparty/{Id}/DepositoryCodes"],"summary":"Returns latest versions of all matching Depository codes belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Depository codes","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Depository codes","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Depository code field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for DepositoryCode","schema":{},"examples":{"Filter by Code, not in operator":{"description":"Filter by Code, not in operator","value":"Code,NOT_IN,A,B,C"},"Filter by Code, in operator":{"description":"Filter by Code, in operator","value":"Code,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Depository code fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for DepositoryCode","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Depository code field. For possible fields, refer to the schema section for DepositoryCode","schema":{},"examples":{"Sort by Code, descending order":{"description":"Sort by Code, descending order","value":"Code:DESC"},"Sort by Code, ascending order":{"description":"Sort by Code, ascending order","value":"Code:ASC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Depository codes belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.DepositoryCode"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/DepositoryCodes"],"summary":"Creates a new Depository code belonging to Counterparty. This action requires the caller entitled to create Depository codes","description":"Creates a new  Depository code.\nDepository code is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are Format,Code.\n For possible entity Fields, refer to the schema section for DepositoryCode. This action requires the caller entitled to create Depository codes","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Depository code. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Depository code for the parent Counterparty. The response body would contain the created Depository code","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.DepositoryCode"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/DepositoryCodes/{DepositoryCodesId}":{"get":{"tags":["/Counterparty/{Id}/DepositoryCodes/{DepositoryCodesId}"],"summary":"Returns latest version of a specific Depository code belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Depository codes","parameters":[{"name":"DepositoryCodesId","in":"path","description":"Id of Depository code","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Depository codes","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Depository code field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for DepositoryCode","schema":{},"examples":{"Filter by Code, not in operator":{"description":"Filter by Code, not in operator","value":"Code,NOT_IN,A,B,C"},"Filter by Code, in operator":{"description":"Filter by Code, in operator","value":"Code,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Depository code fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for DepositoryCode","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Depository code field. For possible fields, refer to the schema section for DepositoryCode","schema":{},"examples":{"Sort by Code, descending order":{"description":"Sort by Code, descending order","value":"Code:DESC"},"Sort by Code, ascending order":{"description":"Sort by Code, ascending order","value":"Code:ASC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Depository code belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.DepositoryCode"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/DepositoryCodes/{DepositoryCodesId}"],"summary":"Deletes an existing Depository code belonging to Counterparty subject to caller is entitled to delete Depository codes","description":"Deletes a existing Depository code.\nDepository code is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Depository codes","parameters":[{"name":"DepositoryCodesId","in":"path","description":"Id of Depository code","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Depository code belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/DepositoryCodes/{DepositoryCodesId}"],"summary":"Updates an existing Depository code belonging to Counterparty subject to caller is entitled to edit Depository codes","description":"Updates a existing Depository code.\nDepository code is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are Format,Code.\n For possible entity Fields, refer to the schema section for DepositoryCode in json format, subject to caller is entitled to edit Depository codes","parameters":[{"name":"DepositoryCodesId","in":"path","description":"Id of Depository code","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Depository code. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Depository code belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.DepositoryCode"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Farms":{"get":{"tags":["/Counterparty/{Id}/Farms"],"summary":"Returns latest versions of all matching Farms belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Farms","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Farm field. For possible fields, refer to the schema section for Farm","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Farm field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Farm","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Farm fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Farm","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Farms","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Farms belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/Farms"],"summary":"Creates a new Farm belonging to Counterparty. This action requires the caller entitled to create Farms","description":"Creates a new  Farm.\nFarm is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for Farm. This action requires the caller entitled to create Farms","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Farm. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Farm for the parent Counterparty. The response body would contain the created Farm","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Farms/{FarmsId}":{"get":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}"],"summary":"Returns latest version of a specific Farm belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Farms","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Farm field. For possible fields, refer to the schema section for Farm","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Farm field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Farm","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Farm fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Farm","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Farms","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Farm belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}"],"summary":"Deletes an existing Farm belonging to Counterparty subject to caller is entitled to delete Farms","description":"Deletes a existing Farm.\nFarm is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Farms","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Farm belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}"],"summary":"Updates an existing Farm belonging to Counterparty subject to caller is entitled to edit Farms","description":"Updates a existing Farm.\nFarm is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Farm in json format, subject to caller is entitled to edit Farms","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Farm. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Farm belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Farms/{FarmsId}/SplitDefaults":{"get":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}/SplitDefaults"],"summary":"Returns latest versions of all matching Splits belonging to the parent Farmin json format. This action requires the caller entitled to view Splits","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Splits","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Split field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Split","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Split fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Split","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Split field. For possible fields, refer to the schema section for Split","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Splits belonging to the parent Farm. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm.Split"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}/SplitDefaults"],"summary":"Creates a new Split belonging to Farm. This action requires the caller entitled to create Splits","description":"Creates a new  Split.\nSplit is a sub-entity of  Farm The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are Counterparty,Percentage.\n For possible entity Fields, refer to the schema section for Split. This action requires the caller entitled to create Splits","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Split. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Split for the parent Farm. The response body would contain the created Split","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm.Split"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/Farms/{FarmsId}/SplitDefaults/{SplitDefaultsId}":{"get":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}/SplitDefaults/{SplitDefaultsId}"],"summary":"Returns latest version of a specific Split belonging to the parent Farmin json format. This action requires the caller entitled to view Splits","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SplitDefaultsId","in":"path","description":"Id of Split","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Splits","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Split field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Split","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Split fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Split","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Split field. For possible fields, refer to the schema section for Split","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Split belonging to the parent Farm. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm.Split"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}/SplitDefaults/{SplitDefaultsId}"],"summary":"Deletes an existing Split belonging to Farm subject to caller is entitled to delete Splits","description":"Deletes a existing Split.\nSplit is a sub-entity of Farm. This action is subject to caller is entitled to delete Splits","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SplitDefaultsId","in":"path","description":"Id of Split","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Split belonging to the parent Farm","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/Farms/{FarmsId}/SplitDefaults/{SplitDefaultsId}"],"summary":"Updates an existing Split belonging to Farm subject to caller is entitled to edit Splits","description":"Updates a existing Split.\nSplit is a sub-entity of Farm The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are Counterparty,Percentage.\n For possible entity Fields, refer to the schema section for Split in json format, subject to caller is entitled to edit Splits","parameters":[{"name":"FarmsId","in":"path","description":"Id of Farm","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SplitDefaultsId","in":"path","description":"Id of Split","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Split. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Split belonging to the parent Farm. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Farm.Split"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/InvestmentManagers":{"get":{"tags":["/Counterparty/{Id}/InvestmentManagers"],"summary":"Returns latest versions of all matching Investment managers belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Investment managers","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Investment manager field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for InvestmentManager","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Investment manager field. For possible fields, refer to the schema section for InvestmentManager","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Investment manager fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for InvestmentManager","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Investment managers","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Investment managers belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.InvestmentManager"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/InvestmentManagers"],"summary":"Creates a new Investment manager belonging to Counterparty. This action requires the caller entitled to create Investment managers","description":"Creates a new  Investment manager.\nInvestment manager is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is InvestmentManager.\n For possible entity Fields, refer to the schema section for InvestmentManager. This action requires the caller entitled to create Investment managers","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Investment manager. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Investment manager for the parent Counterparty. The response body would contain the created Investment manager","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.InvestmentManager"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/InvestmentManagers/{InvestmentManagersId}":{"get":{"tags":["/Counterparty/{Id}/InvestmentManagers/{InvestmentManagersId}"],"summary":"Returns latest version of a specific Investment manager belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Investment managers","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"InvestmentManagersId","in":"path","description":"Id of Investment manager","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Investment manager field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for InvestmentManager","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Investment manager field. For possible fields, refer to the schema section for InvestmentManager","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Investment manager fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for InvestmentManager","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Investment managers","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Investment manager belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.InvestmentManager"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/InvestmentManagers/{InvestmentManagersId}"],"summary":"Deletes an existing Investment manager belonging to Counterparty subject to caller is entitled to delete Investment managers","description":"Deletes a existing Investment manager.\nInvestment manager is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Investment managers","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"InvestmentManagersId","in":"path","description":"Id of Investment manager","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Investment manager belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/InvestmentManagers/{InvestmentManagersId}"],"summary":"Updates an existing Investment manager belonging to Counterparty subject to caller is entitled to edit Investment managers","description":"Updates a existing Investment manager.\nInvestment manager is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is InvestmentManager.\n For possible entity Fields, refer to the schema section for InvestmentManager in json format, subject to caller is entitled to edit Investment managers","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"InvestmentManagersId","in":"path","description":"Id of Investment manager","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Investment manager. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Investment manager belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.InvestmentManager"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/SWIFTFields":{"get":{"tags":["/Counterparty/{Id}/SWIFTFields"],"summary":"Returns latest versions of all matching SWIFT fieldses belonging to the parent Counterpartyin json format. This action requires the caller entitled to view SWIFT fieldses","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the SWIFT fields field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for SWIFTFields","schema":{},"examples":{"Filter by Field87Line5, not in operator":{"description":"Filter by Field87Line5, not in operator","value":"Field87Line5,NOT_IN,A,B,C"},"Filter by Field87Line5, in operator":{"description":"Filter by Field87Line5, in operator","value":"Field87Line5,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of SWIFT fields fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for SWIFTFields","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned SWIFT fieldses","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any SWIFT fields field. For possible fields, refer to the schema section for SWIFTFields","schema":{},"examples":{"Sort by Field87Line5, ascending order":{"description":"Sort by Field87Line5, ascending order","value":"Field87Line5:ASC"},"Sort by Field87Line5, descending order":{"description":"Sort by Field87Line5, descending order","value":"Field87Line5:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching SWIFT fieldses belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.SWIFTFields"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/SWIFTFields"],"summary":"Creates a new SWIFT fields belonging to Counterparty. This action requires the caller entitled to create SWIFT fieldses","description":"Creates a new  SWIFT fields.\nSWIFT fields is a sub-entity of  CounterpartyFields required for creation is ConfirmationFieldType.\n For possible entity Fields, refer to the schema section for SWIFTFields. This action requires the caller entitled to create SWIFT fieldses","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the SWIFT fields. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of SWIFT fields for the parent Counterparty. The response body would contain the created SWIFT fields","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.SWIFTFields"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/SWIFTFields/{SwIFTFieldsId}":{"get":{"tags":["/Counterparty/{Id}/SWIFTFields/{SwIFTFieldsId}"],"summary":"Returns latest version of a specific SWIFT fields belonging to the parent Counterpartyin json format. This action requires the caller entitled to view SWIFT fieldses","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SwIFTFieldsId","in":"path","description":"Id of SWIFT fields","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the SWIFT fields field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for SWIFTFields","schema":{},"examples":{"Filter by Field87Line5, not in operator":{"description":"Filter by Field87Line5, not in operator","value":"Field87Line5,NOT_IN,A,B,C"},"Filter by Field87Line5, in operator":{"description":"Filter by Field87Line5, in operator","value":"Field87Line5,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of SWIFT fields fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for SWIFTFields","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned SWIFT fieldses","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any SWIFT fields field. For possible fields, refer to the schema section for SWIFTFields","schema":{},"examples":{"Sort by Field87Line5, ascending order":{"description":"Sort by Field87Line5, ascending order","value":"Field87Line5:ASC"},"Sort by Field87Line5, descending order":{"description":"Sort by Field87Line5, descending order","value":"Field87Line5:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific SWIFT fields belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.SWIFTFields"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/SWIFTFields/{SwIFTFieldsId}"],"summary":"Deletes an existing SWIFT fields belonging to Counterparty subject to caller is entitled to delete SWIFT fieldses","description":"Deletes a existing SWIFT fields.\nSWIFT fields is a sub-entity of Counterparty. This action is subject to caller is entitled to delete SWIFT fieldses","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SwIFTFieldsId","in":"path","description":"Id of SWIFT fields","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific SWIFT fields belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/SWIFTFields/{SwIFTFieldsId}"],"summary":"Updates an existing SWIFT fields belonging to Counterparty subject to caller is entitled to edit SWIFT fieldses","description":"Updates a existing SWIFT fields.\nSWIFT fields is a sub-entity of CounterpartyFields required to be passed while editing is ConfirmationFieldType.\n For possible entity Fields, refer to the schema section for SWIFTFields in json format, subject to caller is entitled to edit SWIFT fieldses","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SwIFTFieldsId","in":"path","description":"Id of SWIFT fields","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified SWIFT fields. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific SWIFT fields belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.SWIFTFields"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/SplitDefaults":{"get":{"tags":["/Counterparty/{Id}/SplitDefaults"],"summary":"Returns latest versions of all matching Splits belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Splits","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Splits","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Split field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Split","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Split fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Split","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Split field. For possible fields, refer to the schema section for Split","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Splits belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Split"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Counterparty/{Id}/SplitDefaults"],"summary":"Creates a new Split belonging to Counterparty. This action requires the caller entitled to create Splits","description":"Creates a new  Split.\nSplit is a sub-entity of  Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are Counterparty,Percentage.\n For possible entity Fields, refer to the schema section for Split. This action requires the caller entitled to create Splits","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Split. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Split for the parent Counterparty. The response body would contain the created Split","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Split"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Counterparty/{Id}/SplitDefaults/{SplitDefaultsId}":{"get":{"tags":["/Counterparty/{Id}/SplitDefaults/{SplitDefaultsId}"],"summary":"Returns latest version of a specific Split belonging to the parent Counterpartyin json format. This action requires the caller entitled to view Splits","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SplitDefaultsId","in":"path","description":"Id of Split","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Splits","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Split field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Split","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Split fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Split","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Split field. For possible fields, refer to the schema section for Split","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Split belonging to the parent Counterparty. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Split"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Counterparty/{Id}/SplitDefaults/{SplitDefaultsId}"],"summary":"Deletes an existing Split belonging to Counterparty subject to caller is entitled to delete Splits","description":"Deletes a existing Split.\nSplit is a sub-entity of Counterparty. This action is subject to caller is entitled to delete Splits","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SplitDefaultsId","in":"path","description":"Id of Split","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Split belonging to the parent Counterparty","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Counterparty/{Id}/SplitDefaults/{SplitDefaultsId}"],"summary":"Updates an existing Split belonging to Counterparty subject to caller is entitled to edit Splits","description":"Updates a existing Split.\nSplit is a sub-entity of Counterparty The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are Counterparty,Percentage.\n For possible entity Fields, refer to the schema section for Split in json format, subject to caller is entitled to edit Splits","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"SplitDefaultsId","in":"path","description":"Id of Split","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Split. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Split belonging to the parent Counterparty. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Split"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/binary/Counterparty/{Id}/Contacts/{ContactsId}/Signature":{"get":{"tags":["/binary/Counterparty/{Id}/Contacts/{ContactsId}/Signature"],"summary":"Returns latest version of the Signature of Contact, subject to caller's view entitlements","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  downloading of Signature of Contact. The response body would contain the downloaded Signature","headers":{"Location":{"description":"Location of the existing binary resource","style":"simple"}},"content":{"application/octet-stream":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Contact"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/binary/Counterparty/{Id}/Contacts/{ContactsId}/Signature"],"summary":"Deletes an existing Contact belonging to Contact subject to caller is entitled to delete Contacts","description":"Deletes a existing Contact.\nContact is a sub-entity of Contact. This action is subject to caller is entitled to delete Contacts","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of Signature of Contact","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/binary/Counterparty/{Id}/Contacts/{ContactsId}/Signature"],"summary":"Updates an existing Contact belonging to Contact subject to caller is entitled to edit Contacts","description":"Updates a existing Contact.\nContact is a sub-entity of Contact The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Contact in json format, subject to caller is entitled to edit Contacts","parameters":[{"name":"ContactsId","in":"path","description":"Id of Contact","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Contact. Any subentity field (if any) would be ignored.","content":{"*/*":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of Signature of Contact. The response body would contain the updated entity with the Signature containing the generated id of the updated file","headers":{"ETag":{"description":"ETag of the resource in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated resource","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Counterparty.Contact"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyGroup":{"get":{"tags":["/CounterpartyGroup"],"summary":"Returns latest versions of all matching Counterparty groupsin json format. This action requires the caller entitled to view Counterparty groups","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Counterparty group field. For possible fields, refer to the schema section for CounterpartyGroup","schema":{},"examples":{"Sort by Rule, descending order":{"description":"Sort by Rule, descending order","value":"Rule:DESC"},"Sort by Rule, ascending order":{"description":"Sort by Rule, ascending order","value":"Rule:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Counterparty group field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CounterpartyGroup","schema":{},"examples":{"Filter by Rule, in operator":{"description":"Filter by Rule, in operator","value":"Rule,IN,A,B,C"},"Filter by Rule, not in operator":{"description":"Filter by Rule, not in operator","value":"Rule,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Counterparty group fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CounterpartyGroup","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Counterparty groups","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Counterparty groups. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyGroup"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CounterpartyGroup"],"summary":"Creates a new Counterparty group. This action requires the caller entitled to create Counterparty groups","description":"Creates a new  Counterparty group.\nFields required for creation is Id.\n For possible entity Fields, refer to the schema section for CounterpartyGroup. This action requires the caller entitled to create Counterparty groups","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Counterparty group. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Counterparty group. The response body would contain the created Counterparty group","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyGroup"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyGroup/{Id}":{"get":{"tags":["/CounterpartyGroup/{Id}"],"summary":"Returns latest version of a specific Counterparty groupin json format. This action requires the caller entitled to view Counterparty groups","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty group","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Counterparty group field. For possible fields, refer to the schema section for CounterpartyGroup","schema":{},"examples":{"Sort by Rule, descending order":{"description":"Sort by Rule, descending order","value":"Rule:DESC"},"Sort by Rule, ascending order":{"description":"Sort by Rule, ascending order","value":"Rule:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Counterparty group field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CounterpartyGroup","schema":{},"examples":{"Filter by Rule, in operator":{"description":"Filter by Rule, in operator","value":"Rule,IN,A,B,C"},"Filter by Rule, not in operator":{"description":"Filter by Rule, not in operator","value":"Rule,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Counterparty group fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CounterpartyGroup","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Counterparty groups","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Counterparty group. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyGroup"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CounterpartyGroup/{Id}"],"summary":"Deletes an existing Counterparty group subject to caller is entitled to delete Counterparty groups","description":"Deletes a existing Counterparty group.\n. This action is subject to caller is entitled to delete Counterparty groups","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty group","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Counterparty group","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CounterpartyGroup/{Id}"],"summary":"Updates an existing Counterparty group subject to caller is entitled to edit Counterparty groups","description":"Updates a existing Counterparty group.\nFields required to be passed while editing is Id.\n For possible entity Fields, refer to the schema section for CounterpartyGroup in json format, subject to caller is entitled to edit Counterparty groups","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty group","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Counterparty group. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Counterparty group. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyGroup"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyHierarchy":{"get":{"tags":["/CounterpartyHierarchy"],"summary":"Returns latest versions of all matching Counterparty hierarchiesin json format. This action requires the caller entitled to view Counterparty hierarchies","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Counterparty hierarchy fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CounterpartyHierarchy","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Counterparty hierarchy field. For possible fields, refer to the schema section for CounterpartyHierarchy","schema":{},"examples":{"Sort by EntityClassStr, ascending order":{"description":"Sort by EntityClassStr, ascending order","value":"EntityClassStr:ASC"},"Sort by EntityClassStr, descending order":{"description":"Sort by EntityClassStr, descending order","value":"EntityClassStr:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Counterparty hierarchy field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CounterpartyHierarchy","schema":{},"examples":{"Filter by EntityClassStr, in operator":{"description":"Filter by EntityClassStr, in operator","value":"EntityClassStr,IN,A,B,C"},"Filter by EntityClassStr, not in operator":{"description":"Filter by EntityClassStr, not in operator","value":"EntityClassStr,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Counterparty hierarchies","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Counterparty hierarchies. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CounterpartyHierarchy"],"summary":"Creates a new Counterparty hierarchy. This action requires the caller entitled to create Counterparty hierarchies","description":"Creates a new  Counterparty hierarchy.\nFields required for creation is Id.\n For possible entity Fields, refer to the schema section for CounterpartyHierarchy. This action requires the caller entitled to create Counterparty hierarchies","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Counterparty hierarchy. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Counterparty hierarchy. The response body would contain the created Counterparty hierarchy","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyHierarchy/{Id}":{"get":{"tags":["/CounterpartyHierarchy/{Id}"],"summary":"Returns latest version of a specific Counterparty hierarchyin json format. This action requires the caller entitled to view Counterparty hierarchies","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Counterparty hierarchy fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CounterpartyHierarchy","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Counterparty hierarchy field. For possible fields, refer to the schema section for CounterpartyHierarchy","schema":{},"examples":{"Sort by EntityClassStr, ascending order":{"description":"Sort by EntityClassStr, ascending order","value":"EntityClassStr:ASC"},"Sort by EntityClassStr, descending order":{"description":"Sort by EntityClassStr, descending order","value":"EntityClassStr:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Counterparty hierarchy field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CounterpartyHierarchy","schema":{},"examples":{"Filter by EntityClassStr, in operator":{"description":"Filter by EntityClassStr, in operator","value":"EntityClassStr,IN,A,B,C"},"Filter by EntityClassStr, not in operator":{"description":"Filter by EntityClassStr, not in operator","value":"EntityClassStr,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Counterparty hierarchies","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Counterparty hierarchy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CounterpartyHierarchy/{Id}"],"summary":"Deletes an existing Counterparty hierarchy subject to caller is entitled to delete Counterparty hierarchies","description":"Deletes a existing Counterparty hierarchy.\n. This action is subject to caller is entitled to delete Counterparty hierarchies","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Counterparty hierarchy","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CounterpartyHierarchy/{Id}"],"summary":"Updates an existing Counterparty hierarchy subject to caller is entitled to edit Counterparty hierarchies","description":"Updates a existing Counterparty hierarchy.\nFields required to be passed while editing is Id.\n For possible entity Fields, refer to the schema section for CounterpartyHierarchy in json format, subject to caller is entitled to edit Counterparty hierarchies","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Counterparty hierarchy. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Counterparty hierarchy. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyHierarchy/{Id}/LevelDefault":{"get":{"tags":["/CounterpartyHierarchy/{Id}/LevelDefault"],"summary":"Returns latest versions of all matching Level defaults belonging to the parent Counterparty hierarchyin json format. This action requires the caller entitled to view Level defaults","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Level defaults","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Level default field. For possible fields, refer to the schema section for LevelDefault","schema":{},"examples":{"Sort by FieldName, descending order":{"description":"Sort by FieldName, descending order","value":"FieldName:DESC"},"Sort by FieldName, ascending order":{"description":"Sort by FieldName, ascending order","value":"FieldName:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Level default field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LevelDefault","schema":{},"examples":{"Filter by FieldName, in operator":{"description":"Filter by FieldName, in operator","value":"FieldName,IN,A,B,C"},"Filter by FieldName, not in operator":{"description":"Filter by FieldName, not in operator","value":"FieldName,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Level default fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LevelDefault","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Level defaults belonging to the parent Counterparty hierarchy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy.LevelDefault"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CounterpartyHierarchy/{Id}/LevelDefault"],"summary":"Creates a new Level default belonging to Counterparty hierarchy. This action requires the caller entitled to create Level defaults","description":"Creates a new  Level default.\nLevel default is a sub-entity of  Counterparty hierarchy The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is FieldName.\n For possible entity Fields, refer to the schema section for LevelDefault. This action requires the caller entitled to create Level defaults","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Level default. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Level default for the parent Counterparty hierarchy. The response body would contain the created Level default","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy.LevelDefault"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyHierarchy/{Id}/LevelDefault/{LevelDefaultId}":{"get":{"tags":["/CounterpartyHierarchy/{Id}/LevelDefault/{LevelDefaultId}"],"summary":"Returns latest version of a specific Level default belonging to the parent Counterparty hierarchyin json format. This action requires the caller entitled to view Level defaults","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Level defaults","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Level default field. For possible fields, refer to the schema section for LevelDefault","schema":{},"examples":{"Sort by FieldName, descending order":{"description":"Sort by FieldName, descending order","value":"FieldName:DESC"},"Sort by FieldName, ascending order":{"description":"Sort by FieldName, ascending order","value":"FieldName:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Level default field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LevelDefault","schema":{},"examples":{"Filter by FieldName, in operator":{"description":"Filter by FieldName, in operator","value":"FieldName,IN,A,B,C"},"Filter by FieldName, not in operator":{"description":"Filter by FieldName, not in operator","value":"FieldName,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Level default fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LevelDefault","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Level default belonging to the parent Counterparty hierarchy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy.LevelDefault"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CounterpartyHierarchy/{Id}/LevelDefault/{LevelDefaultId}"],"summary":"Deletes an existing Level default belonging to Counterparty hierarchy subject to caller is entitled to delete Level defaults","description":"Deletes a existing Level default.\nLevel default is a sub-entity of Counterparty hierarchy. This action is subject to caller is entitled to delete Level defaults","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Level default belonging to the parent Counterparty hierarchy","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CounterpartyHierarchy/{Id}/LevelDefault/{LevelDefaultId}"],"summary":"Updates an existing Level default belonging to Counterparty hierarchy subject to caller is entitled to edit Level defaults","description":"Updates a existing Level default.\nLevel default is a sub-entity of Counterparty hierarchy The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is FieldName.\n For possible entity Fields, refer to the schema section for LevelDefault in json format, subject to caller is entitled to edit Level defaults","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Level default. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Level default belonging to the parent Counterparty hierarchy. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy.LevelDefault"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue":{"get":{"tags":["/CounterpartyHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue"],"summary":"Returns latest versions of all matching Level default values belonging to the parent Level defaultin json format. This action requires the caller entitled to view Level default values","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Level default value field. For possible fields, refer to the schema section for LevelDefaultValue","schema":{},"examples":{"Sort by DefaultValue, ascending order":{"description":"Sort by DefaultValue, ascending order","value":"DefaultValue:ASC"},"Sort by DefaultValue, descending order":{"description":"Sort by DefaultValue, descending order","value":"DefaultValue:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Level default value fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LevelDefaultValue","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Level default value field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LevelDefaultValue","schema":{},"examples":{"Filter by DefaultValue, not in operator":{"description":"Filter by DefaultValue, not in operator","value":"DefaultValue,NOT_IN,A,B,C"},"Filter by DefaultValue, in operator":{"description":"Filter by DefaultValue, in operator","value":"DefaultValue,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Level default values","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Level default values belonging to the parent Level default. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy.LevelDefault.LevelDefaultValue"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CounterpartyHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue"],"summary":"Creates a new Level default value belonging to Level default. This action requires the caller entitled to create Level default values","description":"Creates a new  Level default value.\nLevel default value is a sub-entity of  Level default The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Level.\n For possible entity Fields, refer to the schema section for LevelDefaultValue. This action requires the caller entitled to create Level default values","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Level default value. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Level default value for the parent Level default. The response body would contain the created Level default value","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy.LevelDefault.LevelDefaultValue"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue/{DefaultValueId}":{"get":{"tags":["/CounterpartyHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue/{DefaultValueId}"],"summary":"Returns latest version of a specific Level default value belonging to the parent Level defaultin json format. This action requires the caller entitled to view Level default values","parameters":[{"name":"DefaultValueId","in":"path","description":"Id of Level default value","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Level default value field. For possible fields, refer to the schema section for LevelDefaultValue","schema":{},"examples":{"Sort by DefaultValue, ascending order":{"description":"Sort by DefaultValue, ascending order","value":"DefaultValue:ASC"},"Sort by DefaultValue, descending order":{"description":"Sort by DefaultValue, descending order","value":"DefaultValue:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Level default value fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LevelDefaultValue","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Level default value field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LevelDefaultValue","schema":{},"examples":{"Filter by DefaultValue, not in operator":{"description":"Filter by DefaultValue, not in operator","value":"DefaultValue,NOT_IN,A,B,C"},"Filter by DefaultValue, in operator":{"description":"Filter by DefaultValue, in operator","value":"DefaultValue,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Level default values","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Level default value belonging to the parent Level default. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy.LevelDefault.LevelDefaultValue"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CounterpartyHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue/{DefaultValueId}"],"summary":"Deletes an existing Level default value belonging to Level default subject to caller is entitled to delete Level default values","description":"Deletes a existing Level default value.\nLevel default value is a sub-entity of Level default. This action is subject to caller is entitled to delete Level default values","parameters":[{"name":"DefaultValueId","in":"path","description":"Id of Level default value","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Level default value belonging to the parent Level default","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CounterpartyHierarchy/{Id}/LevelDefault/{LevelDefaultId}/DefaultValue/{DefaultValueId}"],"summary":"Updates an existing Level default value belonging to Level default subject to caller is entitled to edit Level default values","description":"Updates a existing Level default value.\nLevel default value is a sub-entity of Level default The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Level.\n For possible entity Fields, refer to the schema section for LevelDefaultValue in json format, subject to caller is entitled to edit Level default values","parameters":[{"name":"DefaultValueId","in":"path","description":"Id of Level default value","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"LevelDefaultId","in":"path","description":"Id of Level default","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Level default value. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Level default value belonging to the parent Level default. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy.LevelDefault.LevelDefaultValue"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyHierarchy/{Id}/Levels":{"get":{"tags":["/CounterpartyHierarchy/{Id}/Levels"],"summary":"Returns latest versions of all matching Counterparty levels belonging to the parent Counterparty hierarchyin json format. This action requires the caller entitled to view Counterparty levels","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Counterparty levels","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Counterparty level field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CounterpartyLevel","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Counterparty level fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CounterpartyLevel","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Counterparty level field. For possible fields, refer to the schema section for CounterpartyLevel","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Counterparty levels belonging to the parent Counterparty hierarchy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy.CounterpartyLevel"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CounterpartyHierarchy/{Id}/Levels"],"summary":"Creates a new Counterparty level belonging to Counterparty hierarchy. This action requires the caller entitled to create Counterparty levels","description":"Creates a new  Counterparty level.\nCounterparty level is a sub-entity of  Counterparty hierarchy The Id property is optional, if not provided it will auto generate an Id.\n For possible entity Fields, refer to the schema section for CounterpartyLevel. This action requires the caller entitled to create Counterparty levels","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Counterparty level. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Counterparty level for the parent Counterparty hierarchy. The response body would contain the created Counterparty level","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy.CounterpartyLevel"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyHierarchy/{Id}/Levels/{LevelsId}":{"get":{"tags":["/CounterpartyHierarchy/{Id}/Levels/{LevelsId}"],"summary":"Returns latest version of a specific Counterparty level belonging to the parent Counterparty hierarchyin json format. This action requires the caller entitled to view Counterparty levels","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"LevelsId","in":"path","description":"Id of Counterparty level","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Counterparty levels","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Counterparty level field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CounterpartyLevel","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Counterparty level fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CounterpartyLevel","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Counterparty level field. For possible fields, refer to the schema section for CounterpartyLevel","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Counterparty level belonging to the parent Counterparty hierarchy. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy.CounterpartyLevel"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CounterpartyHierarchy/{Id}/Levels/{LevelsId}"],"summary":"Deletes an existing Counterparty level belonging to Counterparty hierarchy subject to caller is entitled to delete Counterparty levels","description":"Deletes a existing Counterparty level.\nCounterparty level is a sub-entity of Counterparty hierarchy. This action is subject to caller is entitled to delete Counterparty levels","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"LevelsId","in":"path","description":"Id of Counterparty level","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Counterparty level belonging to the parent Counterparty hierarchy","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CounterpartyHierarchy/{Id}/Levels/{LevelsId}"],"summary":"Updates an existing Counterparty level belonging to Counterparty hierarchy subject to caller is entitled to edit Counterparty levels","description":"Updates a existing Counterparty level.\nCounterparty level is a sub-entity of Counterparty hierarchy The Id property is optional, if not provided it will auto generate an Id.\n For possible entity Fields, refer to the schema section for CounterpartyLevel in json format, subject to caller is entitled to edit Counterparty levels","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty hierarchy","required":true,"schema":{}},{"name":"LevelsId","in":"path","description":"Id of Counterparty level","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Counterparty level. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Counterparty level belonging to the parent Counterparty hierarchy. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyHierarchy.CounterpartyLevel"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyStatusCMD":{"get":{"tags":["/CounterpartyStatusCMD"],"summary":"Returns latest versions of all matching CMD statusesin json format. This action requires the caller entitled to view CMD statuses","parameters":[{"name":"fields","in":"query","description":"Comma separated list of CMD status fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CounterpartyStatusCMD","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the CMD status field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CounterpartyStatusCMD","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned CMD statuses","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any CMD status field. For possible fields, refer to the schema section for CounterpartyStatusCMD","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching CMD statuses. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyStatusCMD"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CounterpartyStatusCMD"],"summary":"Creates a new CMD status. This action requires the caller entitled to create CMD statuses","description":"Creates a new  CMD status.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for CounterpartyStatusCMD. This action requires the caller entitled to create CMD statuses","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the CMD status. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of CMD status. The response body would contain the created CMD status","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyStatusCMD"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyStatusCMD/{Id}":{"get":{"tags":["/CounterpartyStatusCMD/{Id}"],"summary":"Returns latest version of a specific CMD statusin json format. This action requires the caller entitled to view CMD statuses","parameters":[{"name":"Id","in":"path","description":"Id of CMD status","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of CMD status fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CounterpartyStatusCMD","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the CMD status field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CounterpartyStatusCMD","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned CMD statuses","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any CMD status field. For possible fields, refer to the schema section for CounterpartyStatusCMD","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific CMD status. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyStatusCMD"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CounterpartyStatusCMD/{Id}"],"summary":"Deletes an existing CMD status subject to caller is entitled to delete CMD statuses","description":"Deletes a existing CMD status.\n. This action is subject to caller is entitled to delete CMD statuses","parameters":[{"name":"Id","in":"path","description":"Id of CMD status","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific CMD status","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CounterpartyStatusCMD/{Id}"],"summary":"Updates an existing CMD status subject to caller is entitled to edit CMD statuses","description":"Updates a existing CMD status.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for CounterpartyStatusCMD in json format, subject to caller is entitled to edit CMD statuses","parameters":[{"name":"Id","in":"path","description":"Id of CMD status","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified CMD status. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific CMD status. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyStatusCMD"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartySubtype":{"get":{"tags":["/CounterpartySubtype"],"summary":"Returns latest versions of all matching Counterparty subtypesin json format. This action requires the caller entitled to view Counterparty subtypes","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Counterparty subtype fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CounterpartySubtype","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Counterparty subtype field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CounterpartySubtype","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Counterparty subtypes","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Counterparty subtype field. For possible fields, refer to the schema section for CounterpartySubtype","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Counterparty subtypes. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartySubtype"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CounterpartySubtype"],"summary":"Creates a new Counterparty subtype. This action requires the caller entitled to create Counterparty subtypes","description":"Creates a new  Counterparty subtype.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for CounterpartySubtype. This action requires the caller entitled to create Counterparty subtypes","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Counterparty subtype. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Counterparty subtype. The response body would contain the created Counterparty subtype","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartySubtype"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartySubtype/{Id}":{"get":{"tags":["/CounterpartySubtype/{Id}"],"summary":"Returns latest version of a specific Counterparty subtypein json format. This action requires the caller entitled to view Counterparty subtypes","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty subtype","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Counterparty subtype fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CounterpartySubtype","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Counterparty subtype field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CounterpartySubtype","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Counterparty subtypes","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Counterparty subtype field. For possible fields, refer to the schema section for CounterpartySubtype","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Counterparty subtype. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartySubtype"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CounterpartySubtype/{Id}"],"summary":"Deletes an existing Counterparty subtype subject to caller is entitled to delete Counterparty subtypes","description":"Deletes a existing Counterparty subtype.\n. This action is subject to caller is entitled to delete Counterparty subtypes","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty subtype","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Counterparty subtype","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CounterpartySubtype/{Id}"],"summary":"Updates an existing Counterparty subtype subject to caller is entitled to edit Counterparty subtypes","description":"Updates a existing Counterparty subtype.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for CounterpartySubtype in json format, subject to caller is entitled to edit Counterparty subtypes","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty subtype","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Counterparty subtype. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Counterparty subtype. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartySubtype"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyType":{"get":{"tags":["/CounterpartyType"],"summary":"Returns latest versions of all matching Counterparty typesin json format. This action requires the caller entitled to view Counterparty types","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Counterparty type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CounterpartyType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Counterparty type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CounterpartyType","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Counterparty types","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Counterparty type field. For possible fields, refer to the schema section for CounterpartyType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Counterparty types. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CounterpartyType"],"summary":"Creates a new Counterparty type. This action requires the caller entitled to create Counterparty types","description":"Creates a new  Counterparty type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for CounterpartyType. This action requires the caller entitled to create Counterparty types","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Counterparty type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Counterparty type. The response body would contain the created Counterparty type","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyType/{Id}":{"get":{"tags":["/CounterpartyType/{Id}"],"summary":"Returns latest version of a specific Counterparty typein json format. This action requires the caller entitled to view Counterparty types","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty type","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Counterparty type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CounterpartyType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Counterparty type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CounterpartyType","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Counterparty types","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Counterparty type field. For possible fields, refer to the schema section for CounterpartyType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Counterparty type. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CounterpartyType/{Id}"],"summary":"Deletes an existing Counterparty type subject to caller is entitled to delete Counterparty types","description":"Deletes a existing Counterparty type.\n. This action is subject to caller is entitled to delete Counterparty types","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Counterparty type","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CounterpartyType/{Id}"],"summary":"Updates an existing Counterparty type subject to caller is entitled to edit Counterparty types","description":"Updates a existing Counterparty type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for CounterpartyType in json format, subject to caller is entitled to edit Counterparty types","parameters":[{"name":"Id","in":"path","description":"Id of Counterparty type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Counterparty type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Counterparty type. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyTypeCMD":{"get":{"tags":["/CounterpartyTypeCMD"],"summary":"Returns latest versions of all matching CMD typesin json format. This action requires the caller entitled to view CMD types","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any CMD type field. For possible fields, refer to the schema section for CounterpartyTypeCMD","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned CMD types","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the CMD type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CounterpartyTypeCMD","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of CMD type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CounterpartyTypeCMD","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching CMD types. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyTypeCMD"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CounterpartyTypeCMD"],"summary":"Creates a new CMD type. This action requires the caller entitled to create CMD types","description":"Creates a new  CMD type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for CounterpartyTypeCMD. This action requires the caller entitled to create CMD types","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the CMD type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of CMD type. The response body would contain the created CMD type","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyTypeCMD"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CounterpartyTypeCMD/{Id}":{"get":{"tags":["/CounterpartyTypeCMD/{Id}"],"summary":"Returns latest version of a specific CMD typein json format. This action requires the caller entitled to view CMD types","parameters":[{"name":"Id","in":"path","description":"Id of CMD type","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any CMD type field. For possible fields, refer to the schema section for CounterpartyTypeCMD","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned CMD types","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the CMD type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CounterpartyTypeCMD","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of CMD type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CounterpartyTypeCMD","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific CMD type. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyTypeCMD"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CounterpartyTypeCMD/{Id}"],"summary":"Deletes an existing CMD type subject to caller is entitled to delete CMD types","description":"Deletes a existing CMD type.\n. This action is subject to caller is entitled to delete CMD types","parameters":[{"name":"Id","in":"path","description":"Id of CMD type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific CMD type","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CounterpartyTypeCMD/{Id}"],"summary":"Updates an existing CMD type subject to caller is entitled to edit CMD types","description":"Updates a existing CMD type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for CounterpartyTypeCMD in json format, subject to caller is entitled to edit CMD types","parameters":[{"name":"Id","in":"path","description":"Id of CMD type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified CMD type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific CMD type. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CounterpartyTypeCMD"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Country":{"get":{"tags":["/Country"],"summary":"Returns latest versions of all matching Countriesin json format. This action requires the caller entitled to view Countries","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Countries","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Country field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Country","schema":{},"examples":{"Filter by NumericCode, not in operator":{"description":"Filter by NumericCode, not in operator","value":"NumericCode,NOT_IN,A,B,C"},"Filter by NumericCode, in operator":{"description":"Filter by NumericCode, in operator","value":"NumericCode,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Country field. For possible fields, refer to the schema section for Country","schema":{},"examples":{"Sort by NumericCode, ascending order":{"description":"Sort by NumericCode, ascending order","value":"NumericCode:ASC"},"Sort by NumericCode, descending order":{"description":"Sort by NumericCode, descending order","value":"NumericCode:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Country fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Country","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Countries. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Country"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Country"],"summary":"Creates a new Country. This action requires the caller entitled to create Countries","description":"Creates a new  Country.\n The Id property is optional, if not provided it will auto generate an Id.\n For possible entity Fields, refer to the schema section for Country. This action requires the caller entitled to create Countries","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Country. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Country. The response body would contain the created Country","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Country"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Country/{Id}":{"get":{"tags":["/Country/{Id}"],"summary":"Returns latest version of a specific Countryin json format. This action requires the caller entitled to view Countries","parameters":[{"name":"Id","in":"path","description":"Id of Country","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Countries","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Country field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Country","schema":{},"examples":{"Filter by NumericCode, not in operator":{"description":"Filter by NumericCode, not in operator","value":"NumericCode,NOT_IN,A,B,C"},"Filter by NumericCode, in operator":{"description":"Filter by NumericCode, in operator","value":"NumericCode,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Country field. For possible fields, refer to the schema section for Country","schema":{},"examples":{"Sort by NumericCode, ascending order":{"description":"Sort by NumericCode, ascending order","value":"NumericCode:ASC"},"Sort by NumericCode, descending order":{"description":"Sort by NumericCode, descending order","value":"NumericCode:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Country fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Country","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Country. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Country"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Country/{Id}"],"summary":"Deletes an existing Country subject to caller is entitled to delete Countries","description":"Deletes a existing Country.\n. This action is subject to caller is entitled to delete Countries","parameters":[{"name":"Id","in":"path","description":"Id of Country","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Country","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Country/{Id}"],"summary":"Updates an existing Country subject to caller is entitled to edit Countries","description":"Updates a existing Country.\n The Id property is optional, if not provided it will auto generate an Id.\n For possible entity Fields, refer to the schema section for Country in json format, subject to caller is entitled to edit Countries","parameters":[{"name":"Id","in":"path","description":"Id of Country","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Country. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Country. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Country"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Currency":{"get":{"tags":["/Currency"],"summary":"Returns latest versions of all matching Currenciesin json format. This action requires the caller entitled to view Currencies","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Currency fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Currency","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Currency field. For possible fields, refer to the schema section for Currency","schema":{},"examples":{"Sort by Symbol, descending order":{"description":"Sort by Symbol, descending order","value":"Symbol:DESC"},"Sort by Symbol, ascending order":{"description":"Sort by Symbol, ascending order","value":"Symbol:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Currency field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Currency","schema":{},"examples":{"Filter by Symbol, not in operator":{"description":"Filter by Symbol, not in operator","value":"Symbol,NOT_IN,A,B,C"},"Filter by Symbol, in operator":{"description":"Filter by Symbol, in operator","value":"Symbol,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Currencies","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Currencies. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Currency"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Currency"],"summary":"Creates a new Currency. This action requires the caller entitled to create Currencies","description":"Creates a new  Currency.\n The Id property is optional, if not provided it will auto generate an Id.\n For possible entity Fields, refer to the schema section for Currency. This action requires the caller entitled to create Currencies","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Currency. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Currency. The response body would contain the created Currency","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Currency"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Currency/{Id}":{"get":{"tags":["/Currency/{Id}"],"summary":"Returns latest version of a specific Currencyin json format. This action requires the caller entitled to view Currencies","parameters":[{"name":"Id","in":"path","description":"Id of Currency","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Currency fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Currency","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Currency field. For possible fields, refer to the schema section for Currency","schema":{},"examples":{"Sort by Symbol, descending order":{"description":"Sort by Symbol, descending order","value":"Symbol:DESC"},"Sort by Symbol, ascending order":{"description":"Sort by Symbol, ascending order","value":"Symbol:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Currency field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Currency","schema":{},"examples":{"Filter by Symbol, not in operator":{"description":"Filter by Symbol, not in operator","value":"Symbol,NOT_IN,A,B,C"},"Filter by Symbol, in operator":{"description":"Filter by Symbol, in operator","value":"Symbol,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Currencies","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Currency. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Currency"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Currency/{Id}"],"summary":"Deletes an existing Currency subject to caller is entitled to delete Currencies","description":"Deletes a existing Currency.\n. This action is subject to caller is entitled to delete Currencies","parameters":[{"name":"Id","in":"path","description":"Id of Currency","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Currency","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Currency/{Id}"],"summary":"Updates an existing Currency subject to caller is entitled to edit Currencies","description":"Updates a existing Currency.\n The Id property is optional, if not provided it will auto generate an Id.\n For possible entity Fields, refer to the schema section for Currency in json format, subject to caller is entitled to edit Currencies","parameters":[{"name":"Id","in":"path","description":"Id of Currency","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Currency. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Currency. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Currency"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CustomField":{"get":{"tags":["/CustomField"],"summary":"Returns latest versions of all matching Custom fieldsin json format. This action requires the caller entitled to view Custom fields","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Custom field fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CustomField","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Custom fields","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Custom field field. For possible fields, refer to the schema section for CustomField","schema":{},"examples":{"Sort by ValidationFailureMessage, ascending order":{"description":"Sort by ValidationFailureMessage, ascending order","value":"ValidationFailureMessage:ASC"},"Sort by ValidationFailureMessage, descending order":{"description":"Sort by ValidationFailureMessage, descending order","value":"ValidationFailureMessage:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Custom field field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CustomField","schema":{},"examples":{"Filter by ValidationFailureMessage, not in operator":{"description":"Filter by ValidationFailureMessage, not in operator","value":"ValidationFailureMessage,NOT_IN,A,B,C"},"Filter by ValidationFailureMessage, in operator":{"description":"Filter by ValidationFailureMessage, in operator","value":"ValidationFailureMessage,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Custom fields. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CustomField"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/CustomField"],"summary":"Creates a new Custom field. This action requires the caller entitled to create Custom fields","description":"Creates a new  Custom field.\nFields required for creation are Type,Identifier,EntityClass.\n For possible entity Fields, refer to the schema section for CustomField. This action requires the caller entitled to create Custom fields","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Custom field. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Custom field. The response body would contain the created Custom field","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CustomField"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/CustomField/{Id}":{"get":{"tags":["/CustomField/{Id}"],"summary":"Returns latest version of a specific Custom fieldin json format. This action requires the caller entitled to view Custom fields","parameters":[{"name":"Id","in":"path","description":"Id of Custom field","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Custom field fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for CustomField","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Custom fields","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Custom field field. For possible fields, refer to the schema section for CustomField","schema":{},"examples":{"Sort by ValidationFailureMessage, ascending order":{"description":"Sort by ValidationFailureMessage, ascending order","value":"ValidationFailureMessage:ASC"},"Sort by ValidationFailureMessage, descending order":{"description":"Sort by ValidationFailureMessage, descending order","value":"ValidationFailureMessage:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Custom field field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for CustomField","schema":{},"examples":{"Filter by ValidationFailureMessage, not in operator":{"description":"Filter by ValidationFailureMessage, not in operator","value":"ValidationFailureMessage,NOT_IN,A,B,C"},"Filter by ValidationFailureMessage, in operator":{"description":"Filter by ValidationFailureMessage, in operator","value":"ValidationFailureMessage,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Custom field. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CustomField"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/CustomField/{Id}"],"summary":"Deletes an existing Custom field subject to caller is entitled to delete Custom fields","description":"Deletes a existing Custom field.\n. This action is subject to caller is entitled to delete Custom fields","parameters":[{"name":"Id","in":"path","description":"Id of Custom field","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Custom field","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/CustomField/{Id}"],"summary":"Updates an existing Custom field subject to caller is entitled to edit Custom fields","description":"Updates a existing Custom field.\nFields required to be passed while editing are Type,Identifier,EntityClass.\n For possible entity Fields, refer to the schema section for CustomField in json format, subject to caller is entitled to edit Custom fields","parameters":[{"name":"Id","in":"path","description":"Id of Custom field","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Custom field. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Custom field. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/CustomField"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/DealogicIndustry":{"get":{"tags":["/DealogicIndustry"],"summary":"Returns latest versions of all matching Dealogic industriesin json format. This action requires the caller entitled to view Dealogic industries","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Dealogic industry fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for DealogicIndustry","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Dealogic industry field. For possible fields, refer to the schema section for DealogicIndustry","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Dealogic industry field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for DealogicIndustry","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Dealogic industries","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Dealogic industries. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/DealogicIndustry"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/DealogicIndustry"],"summary":"Creates a new Dealogic industry. This action requires the caller entitled to create Dealogic industries","description":"Creates a new  Dealogic industry.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are DealogicId,Code,Name.\n For possible entity Fields, refer to the schema section for DealogicIndustry. This action requires the caller entitled to create Dealogic industries","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Dealogic industry. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Dealogic industry. The response body would contain the created Dealogic industry","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/DealogicIndustry"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/DealogicIndustry/{Id}":{"get":{"tags":["/DealogicIndustry/{Id}"],"summary":"Returns latest version of a specific Dealogic industryin json format. This action requires the caller entitled to view Dealogic industries","parameters":[{"name":"Id","in":"path","description":"Id of Dealogic industry","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Dealogic industry fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for DealogicIndustry","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Dealogic industry field. For possible fields, refer to the schema section for DealogicIndustry","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Dealogic industry field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for DealogicIndustry","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Dealogic industries","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Dealogic industry. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/DealogicIndustry"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/DealogicIndustry/{Id}"],"summary":"Deletes an existing Dealogic industry subject to caller is entitled to delete Dealogic industries","description":"Deletes a existing Dealogic industry.\n. This action is subject to caller is entitled to delete Dealogic industries","parameters":[{"name":"Id","in":"path","description":"Id of Dealogic industry","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Dealogic industry","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/DealogicIndustry/{Id}"],"summary":"Updates an existing Dealogic industry subject to caller is entitled to edit Dealogic industries","description":"Updates a existing Dealogic industry.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are DealogicId,Code,Name.\n For possible entity Fields, refer to the schema section for DealogicIndustry in json format, subject to caller is entitled to edit Dealogic industries","parameters":[{"name":"Id","in":"path","description":"Id of Dealogic industry","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Dealogic industry. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Dealogic industry. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/DealogicIndustry"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/DepositoryCodeFormat":{"get":{"tags":["/DepositoryCodeFormat"],"summary":"Returns latest versions of all matching Depository code formatsin json format. This action requires the caller entitled to view Depository code formats","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Depository code format fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for DepositoryCodeFormat","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Depository code format field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for DepositoryCodeFormat","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Depository code formats","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Depository code format field. For possible fields, refer to the schema section for DepositoryCodeFormat","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Depository code formats. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/DepositoryCodeFormat"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/DepositoryCodeFormat"],"summary":"Creates a new Depository code format. This action requires the caller entitled to create Depository code formats","description":"Creates a new  Depository code format.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for DepositoryCodeFormat. This action requires the caller entitled to create Depository code formats","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Depository code format. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Depository code format. The response body would contain the created Depository code format","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/DepositoryCodeFormat"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/DepositoryCodeFormat/{Id}":{"get":{"tags":["/DepositoryCodeFormat/{Id}"],"summary":"Returns latest version of a specific Depository code formatin json format. This action requires the caller entitled to view Depository code formats","parameters":[{"name":"Id","in":"path","description":"Id of Depository code format","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Depository code format fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for DepositoryCodeFormat","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Depository code format field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for DepositoryCodeFormat","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Depository code formats","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Depository code format field. For possible fields, refer to the schema section for DepositoryCodeFormat","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Depository code format. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/DepositoryCodeFormat"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/DepositoryCodeFormat/{Id}"],"summary":"Deletes an existing Depository code format subject to caller is entitled to delete Depository code formats","description":"Deletes a existing Depository code format.\n. This action is subject to caller is entitled to delete Depository code formats","parameters":[{"name":"Id","in":"path","description":"Id of Depository code format","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Depository code format","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/DepositoryCodeFormat/{Id}"],"summary":"Updates an existing Depository code format subject to caller is entitled to edit Depository code formats","description":"Updates a existing Depository code format.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for DepositoryCodeFormat in json format, subject to caller is entitled to edit Depository code formats","parameters":[{"name":"Id","in":"path","description":"Id of Depository code format","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Depository code format. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Depository code format. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/DepositoryCodeFormat"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/EconomicArea":{"get":{"tags":["/EconomicArea"],"summary":"Returns latest versions of all matching Economic areasin json format. This action requires the caller entitled to view Economic areas","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Economic area field. For possible fields, refer to the schema section for EconomicArea","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Economic area fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for EconomicArea","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Economic areas","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Economic area field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for EconomicArea","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Economic areas. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EconomicArea"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/EconomicArea"],"summary":"Creates a new Economic area. This action requires the caller entitled to create Economic areas","description":"Creates a new  Economic area.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for EconomicArea. This action requires the caller entitled to create Economic areas","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Economic area. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Economic area. The response body would contain the created Economic area","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EconomicArea"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/EconomicArea/{Id}":{"get":{"tags":["/EconomicArea/{Id}"],"summary":"Returns latest version of a specific Economic areain json format. This action requires the caller entitled to view Economic areas","parameters":[{"name":"Id","in":"path","description":"Id of Economic area","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Economic area field. For possible fields, refer to the schema section for EconomicArea","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Economic area fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for EconomicArea","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Economic areas","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Economic area field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for EconomicArea","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Economic area. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EconomicArea"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/EconomicArea/{Id}"],"summary":"Deletes an existing Economic area subject to caller is entitled to delete Economic areas","description":"Deletes a existing Economic area.\n. This action is subject to caller is entitled to delete Economic areas","parameters":[{"name":"Id","in":"path","description":"Id of Economic area","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Economic area","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/EconomicArea/{Id}"],"summary":"Updates an existing Economic area subject to caller is entitled to edit Economic areas","description":"Updates a existing Economic area.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for EconomicArea in json format, subject to caller is entitled to edit Economic areas","parameters":[{"name":"Id","in":"path","description":"Id of Economic area","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Economic area. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Economic area. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EconomicArea"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/EntityConfig":{"get":{"tags":["/EntityConfig"],"summary":"Returns latest versions of all matching Entity configsin json format. This action requires the caller entitled to view Entity configs","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Entity config fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for EntityConfig","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Entity config field. For possible fields, refer to the schema section for EntityConfig","schema":{},"examples":{"Sort by NumberOfFields, descending order":{"description":"Sort by NumberOfFields, descending order","value":"NumberOfFields:DESC"},"Sort by NumberOfFields, ascending order":{"description":"Sort by NumberOfFields, ascending order","value":"NumberOfFields:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Entity configs","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Entity config field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for EntityConfig","schema":{},"examples":{"Filter by NumberOfFields, in operator":{"description":"Filter by NumberOfFields, in operator","value":"NumberOfFields,IN,A,B,C"},"Filter by NumberOfFields, not in operator":{"description":"Filter by NumberOfFields, not in operator","value":"NumberOfFields,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Entity configs. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EntityConfig"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/EntityConfig"],"summary":"Creates a new Entity config. This action requires the caller entitled to create Entity configs","description":"Creates a new  Entity config.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is EntityClass.\n For possible entity Fields, refer to the schema section for EntityConfig. This action requires the caller entitled to create Entity configs","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Entity config. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Entity config. The response body would contain the created Entity config","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EntityConfig"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/EntityConfig/{Id}":{"get":{"tags":["/EntityConfig/{Id}"],"summary":"Returns latest version of a specific Entity configin json format. This action requires the caller entitled to view Entity configs","parameters":[{"name":"Id","in":"path","description":"Id of Entity config","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Entity config fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for EntityConfig","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Entity config field. For possible fields, refer to the schema section for EntityConfig","schema":{},"examples":{"Sort by NumberOfFields, descending order":{"description":"Sort by NumberOfFields, descending order","value":"NumberOfFields:DESC"},"Sort by NumberOfFields, ascending order":{"description":"Sort by NumberOfFields, ascending order","value":"NumberOfFields:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Entity configs","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Entity config field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for EntityConfig","schema":{},"examples":{"Filter by NumberOfFields, in operator":{"description":"Filter by NumberOfFields, in operator","value":"NumberOfFields,IN,A,B,C"},"Filter by NumberOfFields, not in operator":{"description":"Filter by NumberOfFields, not in operator","value":"NumberOfFields,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Entity config. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EntityConfig"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/EntityConfig/{Id}"],"summary":"Deletes an existing Entity config subject to caller is entitled to delete Entity configs","description":"Deletes a existing Entity config.\n. This action is subject to caller is entitled to delete Entity configs","parameters":[{"name":"Id","in":"path","description":"Id of Entity config","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Entity config","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/EntityConfig/{Id}"],"summary":"Updates an existing Entity config subject to caller is entitled to edit Entity configs","description":"Updates a existing Entity config.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is EntityClass.\n For possible entity Fields, refer to the schema section for EntityConfig in json format, subject to caller is entitled to edit Entity configs","parameters":[{"name":"Id","in":"path","description":"Id of Entity config","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Entity config. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Entity config. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EntityConfig"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/EntityConfig/{Id}/FeedConfigs":{"get":{"tags":["/EntityConfig/{Id}/FeedConfigs"],"summary":"Returns latest versions of all matching Feed configs belonging to the parent Entity configin json format. This action requires the caller entitled to view Feed configs","parameters":[{"name":"Id","in":"path","description":"Id of Entity config","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Feed config field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for FeedConfig","schema":{},"examples":{"Filter by TriggerValue, in operator":{"description":"Filter by TriggerValue, in operator","value":"TriggerValue,IN,A,B,C"},"Filter by TriggerValue, not in operator":{"description":"Filter by TriggerValue, not in operator","value":"TriggerValue,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Feed config fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for FeedConfig","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Feed config field. For possible fields, refer to the schema section for FeedConfig","schema":{},"examples":{"Sort by TriggerValue, ascending order":{"description":"Sort by TriggerValue, ascending order","value":"TriggerValue:ASC"},"Sort by TriggerValue, descending order":{"description":"Sort by TriggerValue, descending order","value":"TriggerValue:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Feed configs","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Feed configs belonging to the parent Entity config. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EntityConfig.FeedConfig"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/EntityConfig/{Id}/FeedConfigs"],"summary":"Creates a new Feed config belonging to Entity config. This action requires the caller entitled to create Feed configs","description":"Creates a new  Feed config.\nFeed config is a sub-entity of  Entity config The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Feed.\n For possible entity Fields, refer to the schema section for FeedConfig. This action requires the caller entitled to create Feed configs","parameters":[{"name":"Id","in":"path","description":"Id of Entity config","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Feed config. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Feed config for the parent Entity config. The response body would contain the created Feed config","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EntityConfig.FeedConfig"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/EntityConfig/{Id}/FeedConfigs/{FeedConfigsId}":{"get":{"tags":["/EntityConfig/{Id}/FeedConfigs/{FeedConfigsId}"],"summary":"Returns latest version of a specific Feed config belonging to the parent Entity configin json format. This action requires the caller entitled to view Feed configs","parameters":[{"name":"FeedConfigsId","in":"path","description":"Id of Feed config","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Entity config","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Feed config field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for FeedConfig","schema":{},"examples":{"Filter by TriggerValue, in operator":{"description":"Filter by TriggerValue, in operator","value":"TriggerValue,IN,A,B,C"},"Filter by TriggerValue, not in operator":{"description":"Filter by TriggerValue, not in operator","value":"TriggerValue,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Feed config fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for FeedConfig","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Feed config field. For possible fields, refer to the schema section for FeedConfig","schema":{},"examples":{"Sort by TriggerValue, ascending order":{"description":"Sort by TriggerValue, ascending order","value":"TriggerValue:ASC"},"Sort by TriggerValue, descending order":{"description":"Sort by TriggerValue, descending order","value":"TriggerValue:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Feed configs","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Feed config belonging to the parent Entity config. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EntityConfig.FeedConfig"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/EntityConfig/{Id}/FeedConfigs/{FeedConfigsId}"],"summary":"Deletes an existing Feed config belonging to Entity config subject to caller is entitled to delete Feed configs","description":"Deletes a existing Feed config.\nFeed config is a sub-entity of Entity config. This action is subject to caller is entitled to delete Feed configs","parameters":[{"name":"FeedConfigsId","in":"path","description":"Id of Feed config","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Entity config","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Feed config belonging to the parent Entity config","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/EntityConfig/{Id}/FeedConfigs/{FeedConfigsId}"],"summary":"Updates an existing Feed config belonging to Entity config subject to caller is entitled to edit Feed configs","description":"Updates a existing Feed config.\nFeed config is a sub-entity of Entity config The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Feed.\n For possible entity Fields, refer to the schema section for FeedConfig in json format, subject to caller is entitled to edit Feed configs","parameters":[{"name":"FeedConfigsId","in":"path","description":"Id of Feed config","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Entity config","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Feed config. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Feed config belonging to the parent Entity config. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EntityConfig.FeedConfig"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/EntityConfig/{Id}/FieldConfigs":{"get":{"tags":["/EntityConfig/{Id}/FieldConfigs"],"summary":"Returns latest versions of all matching Field configs belonging to the parent Entity configin json format. This action requires the caller entitled to view Field configs","parameters":[{"name":"Id","in":"path","description":"Id of Entity config","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Field config field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for FieldConfig","schema":{},"examples":{"Filter by ReferenceFieldId, in operator":{"description":"Filter by ReferenceFieldId, in operator","value":"ReferenceFieldId,IN,A,B,C"},"Filter by ReferenceFieldId, not in operator":{"description":"Filter by ReferenceFieldId, not in operator","value":"ReferenceFieldId,NOT_IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Field config field. For possible fields, refer to the schema section for FieldConfig","schema":{},"examples":{"Sort by ReferenceFieldId, ascending order":{"description":"Sort by ReferenceFieldId, ascending order","value":"ReferenceFieldId:ASC"},"Sort by ReferenceFieldId, descending order":{"description":"Sort by ReferenceFieldId, descending order","value":"ReferenceFieldId:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Field configs","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Field config fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for FieldConfig","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Field configs belonging to the parent Entity config. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EntityConfig.FieldConfig"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/EntityConfig/{Id}/FieldConfigs"],"summary":"Creates a new Field config belonging to Entity config. This action requires the caller entitled to create Field configs","description":"Creates a new  Field config.\nField config is a sub-entity of  Entity config The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are RDXFieldName,Feed.\n For possible entity Fields, refer to the schema section for FieldConfig. This action requires the caller entitled to create Field configs","parameters":[{"name":"Id","in":"path","description":"Id of Entity config","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Field config. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Field config for the parent Entity config. The response body would contain the created Field config","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EntityConfig.FieldConfig"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/EntityConfig/{Id}/FieldConfigs/{FieldConfigsId}":{"get":{"tags":["/EntityConfig/{Id}/FieldConfigs/{FieldConfigsId}"],"summary":"Returns latest version of a specific Field config belonging to the parent Entity configin json format. This action requires the caller entitled to view Field configs","parameters":[{"name":"FieldConfigsId","in":"path","description":"Id of Field config","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Entity config","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Field config field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for FieldConfig","schema":{},"examples":{"Filter by ReferenceFieldId, in operator":{"description":"Filter by ReferenceFieldId, in operator","value":"ReferenceFieldId,IN,A,B,C"},"Filter by ReferenceFieldId, not in operator":{"description":"Filter by ReferenceFieldId, not in operator","value":"ReferenceFieldId,NOT_IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Field config field. For possible fields, refer to the schema section for FieldConfig","schema":{},"examples":{"Sort by ReferenceFieldId, ascending order":{"description":"Sort by ReferenceFieldId, ascending order","value":"ReferenceFieldId:ASC"},"Sort by ReferenceFieldId, descending order":{"description":"Sort by ReferenceFieldId, descending order","value":"ReferenceFieldId:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Field configs","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Field config fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for FieldConfig","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Field config belonging to the parent Entity config. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EntityConfig.FieldConfig"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/EntityConfig/{Id}/FieldConfigs/{FieldConfigsId}"],"summary":"Deletes an existing Field config belonging to Entity config subject to caller is entitled to delete Field configs","description":"Deletes a existing Field config.\nField config is a sub-entity of Entity config. This action is subject to caller is entitled to delete Field configs","parameters":[{"name":"FieldConfigsId","in":"path","description":"Id of Field config","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Entity config","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Field config belonging to the parent Entity config","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/EntityConfig/{Id}/FieldConfigs/{FieldConfigsId}"],"summary":"Updates an existing Field config belonging to Entity config subject to caller is entitled to edit Field configs","description":"Updates a existing Field config.\nField config is a sub-entity of Entity config The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are RDXFieldName,Feed.\n For possible entity Fields, refer to the schema section for FieldConfig in json format, subject to caller is entitled to edit Field configs","parameters":[{"name":"FieldConfigsId","in":"path","description":"Id of Field config","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Entity config","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Field config. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Field config belonging to the parent Entity config. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EntityConfig.FieldConfig"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/EventDate":{"get":{"tags":["/EventDate"],"summary":"Returns latest versions of all matching Event datesin json format. This action requires the caller entitled to view Event dates","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Event date fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for EventDate","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Event date field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for EventDate","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Event date field. For possible fields, refer to the schema section for EventDate","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Event dates","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Event dates. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EventDate"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/EventDate"],"summary":"Creates a new Event date. This action requires the caller entitled to create Event dates","description":"Creates a new  Event date.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are Group,Type,Name.\n For possible entity Fields, refer to the schema section for EventDate. This action requires the caller entitled to create Event dates","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Event date. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Event date. The response body would contain the created Event date","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EventDate"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/EventDate/{Id}":{"get":{"tags":["/EventDate/{Id}"],"summary":"Returns latest version of a specific Event datein json format. This action requires the caller entitled to view Event dates","parameters":[{"name":"Id","in":"path","description":"Id of Event date","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Event date fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for EventDate","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Event date field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for EventDate","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Event date field. For possible fields, refer to the schema section for EventDate","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Event dates","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Event date. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EventDate"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/EventDate/{Id}"],"summary":"Deletes an existing Event date subject to caller is entitled to delete Event dates","description":"Deletes a existing Event date.\n. This action is subject to caller is entitled to delete Event dates","parameters":[{"name":"Id","in":"path","description":"Id of Event date","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Event date","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/EventDate/{Id}"],"summary":"Updates an existing Event date subject to caller is entitled to edit Event dates","description":"Updates a existing Event date.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are Group,Type,Name.\n For possible entity Fields, refer to the schema section for EventDate in json format, subject to caller is entitled to edit Event dates","parameters":[{"name":"Id","in":"path","description":"Id of Event date","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Event date. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Event date. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/EventDate"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Exchange":{"get":{"tags":["/Exchange"],"summary":"Returns latest versions of all matching Exchangesin json format. This action requires the caller entitled to view Exchanges","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Exchange fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Exchange","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Exchange field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Exchange","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Exchanges","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Exchange field. For possible fields, refer to the schema section for Exchange","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Exchanges. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Exchange"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Exchange"],"summary":"Creates a new Exchange. This action requires the caller entitled to create Exchanges","description":"Creates a new  Exchange.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for Exchange. This action requires the caller entitled to create Exchanges","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Exchange. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Exchange. The response body would contain the created Exchange","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Exchange"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Exchange/{Id}":{"get":{"tags":["/Exchange/{Id}"],"summary":"Returns latest version of a specific Exchangein json format. This action requires the caller entitled to view Exchanges","parameters":[{"name":"Id","in":"path","description":"Id of Exchange","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Exchange fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Exchange","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Exchange field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Exchange","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Exchanges","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Exchange field. For possible fields, refer to the schema section for Exchange","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Exchange. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Exchange"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Exchange/{Id}"],"summary":"Deletes an existing Exchange subject to caller is entitled to delete Exchanges","description":"Deletes a existing Exchange.\n. This action is subject to caller is entitled to delete Exchanges","parameters":[{"name":"Id","in":"path","description":"Id of Exchange","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Exchange","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Exchange/{Id}"],"summary":"Updates an existing Exchange subject to caller is entitled to edit Exchanges","description":"Updates a existing Exchange.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Exchange in json format, subject to caller is entitled to edit Exchanges","parameters":[{"name":"Id","in":"path","description":"Id of Exchange","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Exchange. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Exchange. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Exchange"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Feed":{"get":{"tags":["/Feed"],"summary":"Returns latest versions of all matching Feedsin json format. This action requires the caller entitled to view Feeds","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Feed field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Feed","schema":{},"examples":{"Filter by TriggerValue, in operator":{"description":"Filter by TriggerValue, in operator","value":"TriggerValue,IN,A,B,C"},"Filter by TriggerValue, not in operator":{"description":"Filter by TriggerValue, not in operator","value":"TriggerValue,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Feed fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Feed","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Feed field. For possible fields, refer to the schema section for Feed","schema":{},"examples":{"Sort by TriggerValue, ascending order":{"description":"Sort by TriggerValue, ascending order","value":"TriggerValue:ASC"},"Sort by TriggerValue, descending order":{"description":"Sort by TriggerValue, descending order","value":"TriggerValue:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Feeds","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Feeds. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Feed"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Feed"],"summary":"Creates a new Feed. This action requires the caller entitled to create Feeds","description":"Creates a new  Feed.\nFields required for creation are FeedType,Name.\n For possible entity Fields, refer to the schema section for Feed. This action requires the caller entitled to create Feeds","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Feed. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Feed. The response body would contain the created Feed","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Feed"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Feed/{Id}":{"get":{"tags":["/Feed/{Id}"],"summary":"Returns latest version of a specific Feedin json format. This action requires the caller entitled to view Feeds","parameters":[{"name":"Id","in":"path","description":"Id of Feed","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Feed field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Feed","schema":{},"examples":{"Filter by TriggerValue, in operator":{"description":"Filter by TriggerValue, in operator","value":"TriggerValue,IN,A,B,C"},"Filter by TriggerValue, not in operator":{"description":"Filter by TriggerValue, not in operator","value":"TriggerValue,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Feed fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Feed","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Feed field. For possible fields, refer to the schema section for Feed","schema":{},"examples":{"Sort by TriggerValue, ascending order":{"description":"Sort by TriggerValue, ascending order","value":"TriggerValue:ASC"},"Sort by TriggerValue, descending order":{"description":"Sort by TriggerValue, descending order","value":"TriggerValue:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Feeds","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Feed. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Feed"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Feed/{Id}"],"summary":"Deletes an existing Feed subject to caller is entitled to delete Feeds","description":"Deletes a existing Feed.\n. This action is subject to caller is entitled to delete Feeds","parameters":[{"name":"Id","in":"path","description":"Id of Feed","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Feed","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Feed/{Id}"],"summary":"Updates an existing Feed subject to caller is entitled to edit Feeds","description":"Updates a existing Feed.\nFields required to be passed while editing are FeedType,Name.\n For possible entity Fields, refer to the schema section for Feed in json format, subject to caller is entitled to edit Feeds","parameters":[{"name":"Id","in":"path","description":"Id of Feed","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Feed. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Feed. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Feed"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/FreightCharge":{"get":{"tags":["/FreightCharge"],"summary":"Returns latest versions of all matching Chargesin json format. This action requires the caller entitled to view Charges","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Charge field. For possible fields, refer to the schema section for FreightCharge","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Charge field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for FreightCharge","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Charge fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for FreightCharge","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Charges","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Charges. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/FreightCharge"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/FreightCharge"],"summary":"Creates a new Charge. This action requires the caller entitled to create Charges","description":"Creates a new  Charge.\nFields required for creation are VoyageTypes,Unit,AccountType,Code,Name.\n For possible entity Fields, refer to the schema section for FreightCharge. This action requires the caller entitled to create Charges","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Charge. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Charge. The response body would contain the created Charge","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/FreightCharge"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/FreightCharge/{Id}":{"get":{"tags":["/FreightCharge/{Id}"],"summary":"Returns latest version of a specific Chargein json format. This action requires the caller entitled to view Charges","parameters":[{"name":"Id","in":"path","description":"Id of Charge","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Charge field. For possible fields, refer to the schema section for FreightCharge","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Charge field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for FreightCharge","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Charge fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for FreightCharge","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Charges","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Charge. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/FreightCharge"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/FreightCharge/{Id}"],"summary":"Deletes an existing Charge subject to caller is entitled to delete Charges","description":"Deletes a existing Charge.\n. This action is subject to caller is entitled to delete Charges","parameters":[{"name":"Id","in":"path","description":"Id of Charge","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Charge","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/FreightCharge/{Id}"],"summary":"Updates an existing Charge subject to caller is entitled to edit Charges","description":"Updates a existing Charge.\nFields required to be passed while editing are VoyageTypes,Unit,AccountType,Code,Name.\n For possible entity Fields, refer to the schema section for FreightCharge in json format, subject to caller is entitled to edit Charges","parameters":[{"name":"Id","in":"path","description":"Id of Charge","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Charge. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Charge. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/FreightCharge"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/FreightIndex":{"get":{"tags":["/FreightIndex"],"summary":"Returns latest versions of all matching Freight indexesin json format. This action requires the caller entitled to view Freight indexes","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Freight index field. For possible fields, refer to the schema section for FreightIndex","schema":{},"examples":{"Sort by TradingPlace, ascending order":{"description":"Sort by TradingPlace, ascending order","value":"TradingPlace:ASC"},"Sort by TradingPlace, descending order":{"description":"Sort by TradingPlace, descending order","value":"TradingPlace:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Freight index field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for FreightIndex","schema":{},"examples":{"Filter by TradingPlace, not in operator":{"description":"Filter by TradingPlace, not in operator","value":"TradingPlace,NOT_IN,A,B,C"},"Filter by TradingPlace, in operator":{"description":"Filter by TradingPlace, in operator","value":"TradingPlace,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Freight indexes","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Freight index fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for FreightIndex","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Freight indexes. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/FreightIndex"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/FreightIndex"],"summary":"Creates a new Freight index. This action requires the caller entitled to create Freight indexes","description":"Creates a new  Freight index.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are RateCurrency,Name.\n For possible entity Fields, refer to the schema section for FreightIndex. This action requires the caller entitled to create Freight indexes","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Freight index. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Freight index. The response body would contain the created Freight index","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/FreightIndex"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/FreightIndex/{Id}":{"get":{"tags":["/FreightIndex/{Id}"],"summary":"Returns latest version of a specific Freight indexin json format. This action requires the caller entitled to view Freight indexes","parameters":[{"name":"Id","in":"path","description":"Id of Freight index","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Freight index field. For possible fields, refer to the schema section for FreightIndex","schema":{},"examples":{"Sort by TradingPlace, ascending order":{"description":"Sort by TradingPlace, ascending order","value":"TradingPlace:ASC"},"Sort by TradingPlace, descending order":{"description":"Sort by TradingPlace, descending order","value":"TradingPlace:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Freight index field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for FreightIndex","schema":{},"examples":{"Filter by TradingPlace, not in operator":{"description":"Filter by TradingPlace, not in operator","value":"TradingPlace,NOT_IN,A,B,C"},"Filter by TradingPlace, in operator":{"description":"Filter by TradingPlace, in operator","value":"TradingPlace,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Freight indexes","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Freight index fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for FreightIndex","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Freight index. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/FreightIndex"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/FreightIndex/{Id}"],"summary":"Deletes an existing Freight index subject to caller is entitled to delete Freight indexes","description":"Deletes a existing Freight index.\n. This action is subject to caller is entitled to delete Freight indexes","parameters":[{"name":"Id","in":"path","description":"Id of Freight index","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Freight index","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/FreightIndex/{Id}"],"summary":"Updates an existing Freight index subject to caller is entitled to edit Freight indexes","description":"Updates a existing Freight index.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are RateCurrency,Name.\n For possible entity Fields, refer to the schema section for FreightIndex in json format, subject to caller is entitled to edit Freight indexes","parameters":[{"name":"Id","in":"path","description":"Id of Freight index","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Freight index. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Freight index. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/FreightIndex"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/FreightPaymentTerm":{"get":{"tags":["/FreightPaymentTerm"],"summary":"Returns latest versions of all matching Freight payment termsin json format. This action requires the caller entitled to view Freight payment terms","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Freight payment term field. For possible fields, refer to the schema section for FreightPaymentTerm","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Freight payment term field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for FreightPaymentTerm","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Freight payment terms","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Freight payment term fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for FreightPaymentTerm","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Freight payment terms. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/FreightPaymentTerm"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/FreightPaymentTerm"],"summary":"Creates a new Freight payment term. This action requires the caller entitled to create Freight payment terms","description":"Creates a new  Freight payment term.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are Type,Name.\n For possible entity Fields, refer to the schema section for FreightPaymentTerm. This action requires the caller entitled to create Freight payment terms","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Freight payment term. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Freight payment term. The response body would contain the created Freight payment term","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/FreightPaymentTerm"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/FreightPaymentTerm/{Id}":{"get":{"tags":["/FreightPaymentTerm/{Id}"],"summary":"Returns latest version of a specific Freight payment termin json format. This action requires the caller entitled to view Freight payment terms","parameters":[{"name":"Id","in":"path","description":"Id of Freight payment term","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Freight payment term field. For possible fields, refer to the schema section for FreightPaymentTerm","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Freight payment term field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for FreightPaymentTerm","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Freight payment terms","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Freight payment term fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for FreightPaymentTerm","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Freight payment term. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/FreightPaymentTerm"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/FreightPaymentTerm/{Id}"],"summary":"Deletes an existing Freight payment term subject to caller is entitled to delete Freight payment terms","description":"Deletes a existing Freight payment term.\n. This action is subject to caller is entitled to delete Freight payment terms","parameters":[{"name":"Id","in":"path","description":"Id of Freight payment term","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Freight payment term","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/FreightPaymentTerm/{Id}"],"summary":"Updates an existing Freight payment term subject to caller is entitled to edit Freight payment terms","description":"Updates a existing Freight payment term.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are Type,Name.\n For possible entity Fields, refer to the schema section for FreightPaymentTerm in json format, subject to caller is entitled to edit Freight payment terms","parameters":[{"name":"Id","in":"path","description":"Id of Freight payment term","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Freight payment term. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Freight payment term. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/FreightPaymentTerm"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Future":{"get":{"tags":["/Future"],"summary":"Returns latest versions of all matching Futuresin json format. This action requires the caller entitled to view Futures","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Futures","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Future field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Future","schema":{},"examples":{"Filter by Ticker, not in operator":{"description":"Filter by Ticker, not in operator","value":"Ticker,NOT_IN,A,B,C"},"Filter by Ticker, in operator":{"description":"Filter by Ticker, in operator","value":"Ticker,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Future fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Future","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Future field. For possible fields, refer to the schema section for Future","schema":{},"examples":{"Sort by Ticker, ascending order":{"description":"Sort by Ticker, ascending order","value":"Ticker:ASC"},"Sort by Ticker, descending order":{"description":"Sort by Ticker, descending order","value":"Ticker:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Futures. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Future"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Future"],"summary":"Creates a new Future. This action requires the caller entitled to create Futures","description":"Creates a new  Future.\nFields required for creation are MaturityMonthYear,FutureProductCode.\n For possible entity Fields, refer to the schema section for Future. This action requires the caller entitled to create Futures","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Future. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Future. The response body would contain the created Future","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Future"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Future/{Id}":{"get":{"tags":["/Future/{Id}"],"summary":"Returns latest version of a specific Futurein json format. This action requires the caller entitled to view Futures","parameters":[{"name":"Id","in":"path","description":"Id of Future","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Futures","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Future field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Future","schema":{},"examples":{"Filter by Ticker, not in operator":{"description":"Filter by Ticker, not in operator","value":"Ticker,NOT_IN,A,B,C"},"Filter by Ticker, in operator":{"description":"Filter by Ticker, in operator","value":"Ticker,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Future fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Future","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Future field. For possible fields, refer to the schema section for Future","schema":{},"examples":{"Sort by Ticker, ascending order":{"description":"Sort by Ticker, ascending order","value":"Ticker:ASC"},"Sort by Ticker, descending order":{"description":"Sort by Ticker, descending order","value":"Ticker:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Future. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Future"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Future/{Id}"],"summary":"Deletes an existing Future subject to caller is entitled to delete Futures","description":"Deletes a existing Future.\n. This action is subject to caller is entitled to delete Futures","parameters":[{"name":"Id","in":"path","description":"Id of Future","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Future","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Future/{Id}"],"summary":"Updates an existing Future subject to caller is entitled to edit Futures","description":"Updates a existing Future.\nFields required to be passed while editing are MaturityMonthYear,FutureProductCode.\n For possible entity Fields, refer to the schema section for Future in json format, subject to caller is entitled to edit Futures","parameters":[{"name":"Id","in":"path","description":"Id of Future","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Future. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Future. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Future"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/GICSIndustry":{"get":{"tags":["/GICSIndustry"],"summary":"Returns latest versions of all matching GICS industriesin json format. This action requires the caller entitled to view GICS industries","parameters":[{"name":"fields","in":"query","description":"Comma separated list of GICS industry fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for GICSIndustry","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the GICS industry field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for GICSIndustry","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any GICS industry field. For possible fields, refer to the schema section for GICSIndustry","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned GICS industries","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching GICS industries. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/GICSIndustry"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/GICSIndustry"],"summary":"Creates a new GICS industry. This action requires the caller entitled to create GICS industries","description":"Creates a new  GICS industry.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are Type,Code,Name.\n For possible entity Fields, refer to the schema section for GICSIndustry. This action requires the caller entitled to create GICS industries","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the GICS industry. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of GICS industry. The response body would contain the created GICS industry","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/GICSIndustry"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/GICSIndustry/{Id}":{"get":{"tags":["/GICSIndustry/{Id}"],"summary":"Returns latest version of a specific GICS industryin json format. This action requires the caller entitled to view GICS industries","parameters":[{"name":"Id","in":"path","description":"Id of GICS industry","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of GICS industry fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for GICSIndustry","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the GICS industry field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for GICSIndustry","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any GICS industry field. For possible fields, refer to the schema section for GICSIndustry","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned GICS industries","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific GICS industry. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/GICSIndustry"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/GICSIndustry/{Id}"],"summary":"Deletes an existing GICS industry subject to caller is entitled to delete GICS industries","description":"Deletes a existing GICS industry.\n. This action is subject to caller is entitled to delete GICS industries","parameters":[{"name":"Id","in":"path","description":"Id of GICS industry","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific GICS industry","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/GICSIndustry/{Id}"],"summary":"Updates an existing GICS industry subject to caller is entitled to edit GICS industries","description":"Updates a existing GICS industry.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are Type,Code,Name.\n For possible entity Fields, refer to the schema section for GICSIndustry in json format, subject to caller is entitled to edit GICS industries","parameters":[{"name":"Id","in":"path","description":"Id of GICS industry","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified GICS industry. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific GICS industry. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/GICSIndustry"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/GeoZone":{"get":{"tags":["/GeoZone"],"summary":"Returns latest versions of all matching Geo zonesin json format. This action requires the caller entitled to view Geo zones","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Geo zone field. For possible fields, refer to the schema section for GeoZone","schema":{},"examples":{"Sort by Zone, ascending order":{"description":"Sort by Zone, ascending order","value":"Zone:ASC"},"Sort by Zone, descending order":{"description":"Sort by Zone, descending order","value":"Zone:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Geo zone field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for GeoZone","schema":{},"examples":{"Filter by Zone, not in operator":{"description":"Filter by Zone, not in operator","value":"Zone,NOT_IN,A,B,C"},"Filter by Zone, in operator":{"description":"Filter by Zone, in operator","value":"Zone,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Geo zone fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for GeoZone","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Geo zones","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Geo zones. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/GeoZone"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/GeoZone"],"summary":"Creates a new Geo zone. This action requires the caller entitled to create Geo zones","description":"Creates a new  Geo zone.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Zone.\n For possible entity Fields, refer to the schema section for GeoZone. This action requires the caller entitled to create Geo zones","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Geo zone. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Geo zone. The response body would contain the created Geo zone","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/GeoZone"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/GeoZone/{Id}":{"get":{"tags":["/GeoZone/{Id}"],"summary":"Returns latest version of a specific Geo zonein json format. This action requires the caller entitled to view Geo zones","parameters":[{"name":"Id","in":"path","description":"Id of Geo zone","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Geo zone field. For possible fields, refer to the schema section for GeoZone","schema":{},"examples":{"Sort by Zone, ascending order":{"description":"Sort by Zone, ascending order","value":"Zone:ASC"},"Sort by Zone, descending order":{"description":"Sort by Zone, descending order","value":"Zone:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Geo zone field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for GeoZone","schema":{},"examples":{"Filter by Zone, not in operator":{"description":"Filter by Zone, not in operator","value":"Zone,NOT_IN,A,B,C"},"Filter by Zone, in operator":{"description":"Filter by Zone, in operator","value":"Zone,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Geo zone fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for GeoZone","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Geo zones","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Geo zone. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/GeoZone"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/GeoZone/{Id}"],"summary":"Deletes an existing Geo zone subject to caller is entitled to delete Geo zones","description":"Deletes a existing Geo zone.\n. This action is subject to caller is entitled to delete Geo zones","parameters":[{"name":"Id","in":"path","description":"Id of Geo zone","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Geo zone","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/GeoZone/{Id}"],"summary":"Updates an existing Geo zone subject to caller is entitled to edit Geo zones","description":"Updates a existing Geo zone.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Zone.\n For possible entity Fields, refer to the schema section for GeoZone in json format, subject to caller is entitled to edit Geo zones","parameters":[{"name":"Id","in":"path","description":"Id of Geo zone","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Geo zone. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Geo zone. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/GeoZone"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Grade":{"get":{"tags":["/Grade"],"summary":"Returns latest versions of all matching Gradesin json format. This action requires the caller entitled to view Grades","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Grade fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Grade","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Grades","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Grade field. For possible fields, refer to the schema section for Grade","schema":{},"examples":{"Sort by Standard, descending order":{"description":"Sort by Standard, descending order","value":"Standard:DESC"},"Sort by Standard, ascending order":{"description":"Sort by Standard, ascending order","value":"Standard:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Grade field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Grade","schema":{},"examples":{"Filter by Standard, not in operator":{"description":"Filter by Standard, not in operator","value":"Standard,NOT_IN,A,B,C"},"Filter by Standard, in operator":{"description":"Filter by Standard, in operator","value":"Standard,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Grades. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Grade"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Grade"],"summary":"Creates a new Grade. This action requires the caller entitled to create Grades","description":"Creates a new  Grade.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for Grade. This action requires the caller entitled to create Grades","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Grade. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Grade. The response body would contain the created Grade","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Grade"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Grade/{Id}":{"get":{"tags":["/Grade/{Id}"],"summary":"Returns latest version of a specific Gradein json format. This action requires the caller entitled to view Grades","parameters":[{"name":"Id","in":"path","description":"Id of Grade","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Grade fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Grade","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Grades","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Grade field. For possible fields, refer to the schema section for Grade","schema":{},"examples":{"Sort by Standard, descending order":{"description":"Sort by Standard, descending order","value":"Standard:DESC"},"Sort by Standard, ascending order":{"description":"Sort by Standard, ascending order","value":"Standard:ASC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Grade field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Grade","schema":{},"examples":{"Filter by Standard, not in operator":{"description":"Filter by Standard, not in operator","value":"Standard,NOT_IN,A,B,C"},"Filter by Standard, in operator":{"description":"Filter by Standard, in operator","value":"Standard,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Grade. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Grade"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Grade/{Id}"],"summary":"Deletes an existing Grade subject to caller is entitled to delete Grades","description":"Deletes a existing Grade.\n. This action is subject to caller is entitled to delete Grades","parameters":[{"name":"Id","in":"path","description":"Id of Grade","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Grade","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Grade/{Id}"],"summary":"Updates an existing Grade subject to caller is entitled to edit Grades","description":"Updates a existing Grade.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Grade in json format, subject to caller is entitled to edit Grades","parameters":[{"name":"Id","in":"path","description":"Id of Grade","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Grade. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Grade. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Grade"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/GradeFactor":{"get":{"tags":["/GradeFactor"],"summary":"Returns latest versions of all matching Grade factorsin json format. This action requires the caller entitled to view Grade factors","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Grade factor fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for GradeFactor","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Grade factors","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Grade factor field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for GradeFactor","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Grade factor field. For possible fields, refer to the schema section for GradeFactor","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Grade factors. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/GradeFactor"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/GradeFactor"],"summary":"Creates a new Grade factor. This action requires the caller entitled to create Grade factors","description":"Creates a new  Grade factor.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for GradeFactor. This action requires the caller entitled to create Grade factors","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Grade factor. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Grade factor. The response body would contain the created Grade factor","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/GradeFactor"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/GradeFactor/{Id}":{"get":{"tags":["/GradeFactor/{Id}"],"summary":"Returns latest version of a specific Grade factorin json format. This action requires the caller entitled to view Grade factors","parameters":[{"name":"Id","in":"path","description":"Id of Grade factor","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Grade factor fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for GradeFactor","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Grade factors","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Grade factor field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for GradeFactor","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Grade factor field. For possible fields, refer to the schema section for GradeFactor","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Grade factor. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/GradeFactor"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/GradeFactor/{Id}"],"summary":"Deletes an existing Grade factor subject to caller is entitled to delete Grade factors","description":"Deletes a existing Grade factor.\n. This action is subject to caller is entitled to delete Grade factors","parameters":[{"name":"Id","in":"path","description":"Id of Grade factor","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Grade factor","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/GradeFactor/{Id}"],"summary":"Updates an existing Grade factor subject to caller is entitled to edit Grade factors","description":"Updates a existing Grade factor.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for GradeFactor in json format, subject to caller is entitled to edit Grade factors","parameters":[{"name":"Id","in":"path","description":"Id of Grade factor","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Grade factor. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Grade factor. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/GradeFactor"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Incoterm":{"get":{"tags":["/Incoterm"],"summary":"Returns latest versions of all matching Incotermsin json format. This action requires the caller entitled to view Incoterms","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Incoterms","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Incoterm field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Incoterm","schema":{},"examples":{"Filter by Version, in operator":{"description":"Filter by Version, in operator","value":"Version,IN,A,B,C"},"Filter by Version, not in operator":{"description":"Filter by Version, not in operator","value":"Version,NOT_IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Incoterm field. For possible fields, refer to the schema section for Incoterm","schema":{},"examples":{"Sort by Version, ascending order":{"description":"Sort by Version, ascending order","value":"Version:ASC"},"Sort by Version, descending order":{"description":"Sort by Version, descending order","value":"Version:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Incoterm fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Incoterm","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Incoterms. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Incoterm"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Incoterm"],"summary":"Creates a new Incoterm. This action requires the caller entitled to create Incoterms","description":"Creates a new  Incoterm.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for Incoterm. This action requires the caller entitled to create Incoterms","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Incoterm. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Incoterm. The response body would contain the created Incoterm","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Incoterm"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Incoterm/{Id}":{"get":{"tags":["/Incoterm/{Id}"],"summary":"Returns latest version of a specific Incotermin json format. This action requires the caller entitled to view Incoterms","parameters":[{"name":"Id","in":"path","description":"Id of Incoterm","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Incoterms","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Incoterm field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Incoterm","schema":{},"examples":{"Filter by Version, in operator":{"description":"Filter by Version, in operator","value":"Version,IN,A,B,C"},"Filter by Version, not in operator":{"description":"Filter by Version, not in operator","value":"Version,NOT_IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Incoterm field. For possible fields, refer to the schema section for Incoterm","schema":{},"examples":{"Sort by Version, ascending order":{"description":"Sort by Version, ascending order","value":"Version:ASC"},"Sort by Version, descending order":{"description":"Sort by Version, descending order","value":"Version:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Incoterm fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Incoterm","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Incoterm. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Incoterm"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Incoterm/{Id}"],"summary":"Deletes an existing Incoterm subject to caller is entitled to delete Incoterms","description":"Deletes a existing Incoterm.\n. This action is subject to caller is entitled to delete Incoterms","parameters":[{"name":"Id","in":"path","description":"Id of Incoterm","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Incoterm","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Incoterm/{Id}"],"summary":"Updates an existing Incoterm subject to caller is entitled to edit Incoterms","description":"Updates a existing Incoterm.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Incoterm in json format, subject to caller is entitled to edit Incoterms","parameters":[{"name":"Id","in":"path","description":"Id of Incoterm","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Incoterm. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Incoterm. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Incoterm"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/InheritableField":{"get":{"tags":["/InheritableField"],"summary":"Returns latest versions of all matching Inheritable fieldsin json format. This action requires the caller entitled to view Inheritable fields","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Inheritable field fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for InheritableField","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Inheritable field field. For possible fields, refer to the schema section for InheritableField","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Inheritable fields","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Inheritable field field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for InheritableField","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Inheritable fields. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/InheritableField"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/InheritableField"],"summary":"Creates a new Inheritable field. This action requires the caller entitled to create Inheritable fields","description":"Creates a new  Inheritable field.\nFields required for creation are EntityClass,Name.\n For possible entity Fields, refer to the schema section for InheritableField. This action requires the caller entitled to create Inheritable fields","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Inheritable field. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Inheritable field. The response body would contain the created Inheritable field","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/InheritableField"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/InheritableField/{Id}":{"get":{"tags":["/InheritableField/{Id}"],"summary":"Returns latest version of a specific Inheritable fieldin json format. This action requires the caller entitled to view Inheritable fields","parameters":[{"name":"Id","in":"path","description":"Id of Inheritable field","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Inheritable field fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for InheritableField","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Inheritable field field. For possible fields, refer to the schema section for InheritableField","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Inheritable fields","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Inheritable field field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for InheritableField","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Inheritable field. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/InheritableField"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/InheritableField/{Id}"],"summary":"Deletes an existing Inheritable field subject to caller is entitled to delete Inheritable fields","description":"Deletes a existing Inheritable field.\n. This action is subject to caller is entitled to delete Inheritable fields","parameters":[{"name":"Id","in":"path","description":"Id of Inheritable field","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Inheritable field","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/InheritableField/{Id}"],"summary":"Updates an existing Inheritable field subject to caller is entitled to edit Inheritable fields","description":"Updates a existing Inheritable field.\nFields required to be passed while editing are EntityClass,Name.\n For possible entity Fields, refer to the schema section for InheritableField in json format, subject to caller is entitled to edit Inheritable fields","parameters":[{"name":"Id","in":"path","description":"Id of Inheritable field","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Inheritable field. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Inheritable field. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/InheritableField"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/InvestorType":{"get":{"tags":["/InvestorType"],"summary":"Returns latest versions of all matching Investor typesin json format. This action requires the caller entitled to view Investor types","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Investor type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for InvestorType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Investor types","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Investor type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for InvestorType","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Investor type field. For possible fields, refer to the schema section for InvestorType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Investor types. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/InvestorType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/InvestorType"],"summary":"Creates a new Investor type. This action requires the caller entitled to create Investor types","description":"Creates a new  Investor type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are DealogicId,Code,Name.\n For possible entity Fields, refer to the schema section for InvestorType. This action requires the caller entitled to create Investor types","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Investor type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Investor type. The response body would contain the created Investor type","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/InvestorType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/InvestorType/{Id}":{"get":{"tags":["/InvestorType/{Id}"],"summary":"Returns latest version of a specific Investor typein json format. This action requires the caller entitled to view Investor types","parameters":[{"name":"Id","in":"path","description":"Id of Investor type","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Investor type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for InvestorType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Investor types","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Investor type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for InvestorType","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Investor type field. For possible fields, refer to the schema section for InvestorType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Investor type. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/InvestorType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/InvestorType/{Id}"],"summary":"Deletes an existing Investor type subject to caller is entitled to delete Investor types","description":"Deletes a existing Investor type.\n. This action is subject to caller is entitled to delete Investor types","parameters":[{"name":"Id","in":"path","description":"Id of Investor type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Investor type","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/InvestorType/{Id}"],"summary":"Updates an existing Investor type subject to caller is entitled to edit Investor types","description":"Updates a existing Investor type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are DealogicId,Code,Name.\n For possible entity Fields, refer to the schema section for InvestorType in json format, subject to caller is entitled to edit Investor types","parameters":[{"name":"Id","in":"path","description":"Id of Investor type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Investor type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Investor type. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/InvestorType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/IonUser":{"get":{"tags":["/IonUser"],"summary":"Returns latest versions of all matching ION usersin json format. This action requires the caller entitled to view ION users","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any ION user field. For possible fields, refer to the schema section for IonUser","schema":{},"examples":{"Sort by RCFieldName, descending order":{"description":"Sort by RCFieldName, descending order","value":"RCFieldName:DESC"},"Sort by RCFieldName, ascending order":{"description":"Sort by RCFieldName, ascending order","value":"RCFieldName:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned ION users","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of ION user fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for IonUser","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the ION user field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for IonUser","schema":{},"examples":{"Filter by RCFieldName, in operator":{"description":"Filter by RCFieldName, in operator","value":"RCFieldName,IN,A,B,C"},"Filter by RCFieldName, not in operator":{"description":"Filter by RCFieldName, not in operator","value":"RCFieldName,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching ION users. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/IonUser"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/IonUser"],"summary":"Creates a new ION user. This action requires the caller entitled to create ION users","description":"Creates a new  ION user.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for IonUser. This action requires the caller entitled to create ION users","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the ION user. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of ION user. The response body would contain the created ION user","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/IonUser"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/IonUser/{Id}":{"get":{"tags":["/IonUser/{Id}"],"summary":"Returns latest version of a specific ION userin json format. This action requires the caller entitled to view ION users","parameters":[{"name":"Id","in":"path","description":"Id of ION user","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any ION user field. For possible fields, refer to the schema section for IonUser","schema":{},"examples":{"Sort by RCFieldName, descending order":{"description":"Sort by RCFieldName, descending order","value":"RCFieldName:DESC"},"Sort by RCFieldName, ascending order":{"description":"Sort by RCFieldName, ascending order","value":"RCFieldName:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned ION users","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of ION user fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for IonUser","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the ION user field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for IonUser","schema":{},"examples":{"Filter by RCFieldName, in operator":{"description":"Filter by RCFieldName, in operator","value":"RCFieldName,IN,A,B,C"},"Filter by RCFieldName, not in operator":{"description":"Filter by RCFieldName, not in operator","value":"RCFieldName,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific ION user. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/IonUser"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/IonUser/{Id}"],"summary":"Deletes an existing ION user subject to caller is entitled to delete ION users","description":"Deletes a existing ION user.\n. This action is subject to caller is entitled to delete ION users","parameters":[{"name":"Id","in":"path","description":"Id of ION user","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific ION user","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/IonUser/{Id}"],"summary":"Updates an existing ION user subject to caller is entitled to edit ION users","description":"Updates a existing ION user.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for IonUser in json format, subject to caller is entitled to edit ION users","parameters":[{"name":"Id","in":"path","description":"Id of ION user","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified ION user. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific ION user. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/IonUser"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/LaytimeTerm":{"get":{"tags":["/LaytimeTerm"],"summary":"Returns latest versions of all matching Laytime termsin json format. This action requires the caller entitled to view Laytime terms","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Laytime term field. For possible fields, refer to the schema section for LaytimeTerm","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Laytime terms","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Laytime term field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LaytimeTerm","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Laytime term fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LaytimeTerm","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Laytime terms. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LaytimeTerm"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/LaytimeTerm"],"summary":"Creates a new Laytime term. This action requires the caller entitled to create Laytime terms","description":"Creates a new  Laytime term.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are TimeFrom,TimeTo,DaysTo,DaysFrom,Name.\n For possible entity Fields, refer to the schema section for LaytimeTerm. This action requires the caller entitled to create Laytime terms","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Laytime term. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Laytime term. The response body would contain the created Laytime term","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LaytimeTerm"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/LaytimeTerm/{Id}":{"get":{"tags":["/LaytimeTerm/{Id}"],"summary":"Returns latest version of a specific Laytime termin json format. This action requires the caller entitled to view Laytime terms","parameters":[{"name":"Id","in":"path","description":"Id of Laytime term","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Laytime term field. For possible fields, refer to the schema section for LaytimeTerm","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Laytime terms","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Laytime term field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LaytimeTerm","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Laytime term fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LaytimeTerm","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Laytime term. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LaytimeTerm"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/LaytimeTerm/{Id}"],"summary":"Deletes an existing Laytime term subject to caller is entitled to delete Laytime terms","description":"Deletes a existing Laytime term.\n. This action is subject to caller is entitled to delete Laytime terms","parameters":[{"name":"Id","in":"path","description":"Id of Laytime term","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Laytime term","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/LaytimeTerm/{Id}"],"summary":"Updates an existing Laytime term subject to caller is entitled to edit Laytime terms","description":"Updates a existing Laytime term.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are TimeFrom,TimeTo,DaysTo,DaysFrom,Name.\n For possible entity Fields, refer to the schema section for LaytimeTerm in json format, subject to caller is entitled to edit Laytime terms","parameters":[{"name":"Id","in":"path","description":"Id of Laytime term","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Laytime term. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Laytime term. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LaytimeTerm"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/LegalEntity":{"get":{"tags":["/LegalEntity"],"summary":"Returns latest versions of all matching Legal entitiesin json format. This action requires the caller entitled to view Legal entities","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Legal entity fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LegalEntity","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Legal entity field. For possible fields, refer to the schema section for LegalEntity","schema":{},"examples":{"Sort by XtractUnderwriterId, ascending order":{"description":"Sort by XtractUnderwriterId, ascending order","value":"XtractUnderwriterId:ASC"},"Sort by XtractUnderwriterId, descending order":{"description":"Sort by XtractUnderwriterId, descending order","value":"XtractUnderwriterId:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Legal entities","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Legal entity field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LegalEntity","schema":{},"examples":{"Filter by XtractUnderwriterId, in operator":{"description":"Filter by XtractUnderwriterId, in operator","value":"XtractUnderwriterId,IN,A,B,C"},"Filter by XtractUnderwriterId, not in operator":{"description":"Filter by XtractUnderwriterId, not in operator","value":"XtractUnderwriterId,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Legal entities. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/LegalEntity"],"summary":"Creates a new Legal entity. This action requires the caller entitled to create Legal entities","description":"Creates a new  Legal entity.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are DealogicId,LegalName.\n For possible entity Fields, refer to the schema section for LegalEntity. This action requires the caller entitled to create Legal entities","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Legal entity. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Legal entity. The response body would contain the created Legal entity","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/LegalEntity/{Id}":{"get":{"tags":["/LegalEntity/{Id}"],"summary":"Returns latest version of a specific Legal entityin json format. This action requires the caller entitled to view Legal entities","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Legal entity fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LegalEntity","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Legal entity field. For possible fields, refer to the schema section for LegalEntity","schema":{},"examples":{"Sort by XtractUnderwriterId, ascending order":{"description":"Sort by XtractUnderwriterId, ascending order","value":"XtractUnderwriterId:ASC"},"Sort by XtractUnderwriterId, descending order":{"description":"Sort by XtractUnderwriterId, descending order","value":"XtractUnderwriterId:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Legal entities","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Legal entity field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LegalEntity","schema":{},"examples":{"Filter by XtractUnderwriterId, in operator":{"description":"Filter by XtractUnderwriterId, in operator","value":"XtractUnderwriterId,IN,A,B,C"},"Filter by XtractUnderwriterId, not in operator":{"description":"Filter by XtractUnderwriterId, not in operator","value":"XtractUnderwriterId,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Legal entity. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/LegalEntity/{Id}"],"summary":"Deletes an existing Legal entity subject to caller is entitled to delete Legal entities","description":"Deletes a existing Legal entity.\n. This action is subject to caller is entitled to delete Legal entities","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Legal entity","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/LegalEntity/{Id}"],"summary":"Updates an existing Legal entity subject to caller is entitled to edit Legal entities","description":"Updates a existing Legal entity.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are DealogicId,LegalName.\n For possible entity Fields, refer to the schema section for LegalEntity in json format, subject to caller is entitled to edit Legal entities","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Legal entity. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Legal entity. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/LegalEntity/{Id}/BusinessVersions":{"get":{"tags":["/LegalEntity/{Id}/BusinessVersions"],"summary":"Returns latest versions of all matching Business versions belonging to the parent Legal entityin json format. This action requires the caller entitled to view Business versions","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Business version fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for AnalyticsBusinessVersion","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Business versions","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Business version field. For possible fields, refer to the schema section for AnalyticsBusinessVersion","schema":{},"examples":{"Sort by ValidTo, ascending order":{"description":"Sort by ValidTo, ascending order","value":"ValidTo:ASC"},"Sort by ValidTo, descending order":{"description":"Sort by ValidTo, descending order","value":"ValidTo:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Business version field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for AnalyticsBusinessVersion","schema":{},"examples":{"Filter by ValidTo, not in operator":{"description":"Filter by ValidTo, not in operator","value":"ValidTo,NOT_IN,A,B,C"},"Filter by ValidTo, in operator":{"description":"Filter by ValidTo, in operator","value":"ValidTo,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Business versions belonging to the parent Legal entity. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity.AnalyticsBusinessVersion"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/LegalEntity/{Id}/BusinessVersions"],"summary":"Creates a new Business version belonging to Legal entity. This action requires the caller entitled to create Business versions","description":"Creates a new  Business version.\nBusiness version is a sub-entity of  Legal entity The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are VersionId,LegalName.\n For possible entity Fields, refer to the schema section for AnalyticsBusinessVersion. This action requires the caller entitled to create Business versions","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Business version. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Business version for the parent Legal entity. The response body would contain the created Business version","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity.AnalyticsBusinessVersion"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/LegalEntity/{Id}/BusinessVersions/{BusinessVersionsId}":{"get":{"tags":["/LegalEntity/{Id}/BusinessVersions/{BusinessVersionsId}"],"summary":"Returns latest version of a specific Business version belonging to the parent Legal entityin json format. This action requires the caller entitled to view Business versions","parameters":[{"name":"BusinessVersionsId","in":"path","description":"Id of Business version","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Business version fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for AnalyticsBusinessVersion","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Business versions","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Business version field. For possible fields, refer to the schema section for AnalyticsBusinessVersion","schema":{},"examples":{"Sort by ValidTo, ascending order":{"description":"Sort by ValidTo, ascending order","value":"ValidTo:ASC"},"Sort by ValidTo, descending order":{"description":"Sort by ValidTo, descending order","value":"ValidTo:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Business version field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for AnalyticsBusinessVersion","schema":{},"examples":{"Filter by ValidTo, not in operator":{"description":"Filter by ValidTo, not in operator","value":"ValidTo,NOT_IN,A,B,C"},"Filter by ValidTo, in operator":{"description":"Filter by ValidTo, in operator","value":"ValidTo,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Business version belonging to the parent Legal entity. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity.AnalyticsBusinessVersion"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/LegalEntity/{Id}/BusinessVersions/{BusinessVersionsId}"],"summary":"Deletes an existing Business version belonging to Legal entity subject to caller is entitled to delete Business versions","description":"Deletes a existing Business version.\nBusiness version is a sub-entity of Legal entity. This action is subject to caller is entitled to delete Business versions","parameters":[{"name":"BusinessVersionsId","in":"path","description":"Id of Business version","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Business version belonging to the parent Legal entity","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/LegalEntity/{Id}/BusinessVersions/{BusinessVersionsId}"],"summary":"Updates an existing Business version belonging to Legal entity subject to caller is entitled to edit Business versions","description":"Updates a existing Business version.\nBusiness version is a sub-entity of Legal entity The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are VersionId,LegalName.\n For possible entity Fields, refer to the schema section for AnalyticsBusinessVersion in json format, subject to caller is entitled to edit Business versions","parameters":[{"name":"BusinessVersionsId","in":"path","description":"Id of Business version","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Business version. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Business version belonging to the parent Legal entity. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity.AnalyticsBusinessVersion"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/LegalEntity/{Id}/OwnershipStakes":{"get":{"tags":["/LegalEntity/{Id}/OwnershipStakes"],"summary":"Returns latest versions of all matching Ownership stakes belonging to the parent Legal entityin json format. This action requires the caller entitled to view Ownership stakes","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Ownership stake fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for OwnershipStake","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Ownership stake field. For possible fields, refer to the schema section for OwnershipStake","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Ownership stakes","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Ownership stake field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for OwnershipStake","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Ownership stakes belonging to the parent Legal entity. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity.OwnershipStake"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/LegalEntity/{Id}/OwnershipStakes"],"summary":"Creates a new Ownership stake belonging to Legal entity. This action requires the caller entitled to create Ownership stakes","description":"Creates a new  Ownership stake.\nOwnership stake is a sub-entity of  Legal entity The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Owner.\n For possible entity Fields, refer to the schema section for OwnershipStake. This action requires the caller entitled to create Ownership stakes","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Ownership stake. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Ownership stake for the parent Legal entity. The response body would contain the created Ownership stake","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity.OwnershipStake"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/LegalEntity/{Id}/OwnershipStakes/{OwnershipStakesId}":{"get":{"tags":["/LegalEntity/{Id}/OwnershipStakes/{OwnershipStakesId}"],"summary":"Returns latest version of a specific Ownership stake belonging to the parent Legal entityin json format. This action requires the caller entitled to view Ownership stakes","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"OwnershipStakesId","in":"path","description":"Id of Ownership stake","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Ownership stake fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for OwnershipStake","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Ownership stake field. For possible fields, refer to the schema section for OwnershipStake","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Ownership stakes","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Ownership stake field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for OwnershipStake","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Ownership stake belonging to the parent Legal entity. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity.OwnershipStake"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/LegalEntity/{Id}/OwnershipStakes/{OwnershipStakesId}"],"summary":"Deletes an existing Ownership stake belonging to Legal entity subject to caller is entitled to delete Ownership stakes","description":"Deletes a existing Ownership stake.\nOwnership stake is a sub-entity of Legal entity. This action is subject to caller is entitled to delete Ownership stakes","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"OwnershipStakesId","in":"path","description":"Id of Ownership stake","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Ownership stake belonging to the parent Legal entity","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/LegalEntity/{Id}/OwnershipStakes/{OwnershipStakesId}"],"summary":"Updates an existing Ownership stake belonging to Legal entity subject to caller is entitled to edit Ownership stakes","description":"Updates a existing Ownership stake.\nOwnership stake is a sub-entity of Legal entity The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Owner.\n For possible entity Fields, refer to the schema section for OwnershipStake in json format, subject to caller is entitled to edit Ownership stakes","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"OwnershipStakesId","in":"path","description":"Id of Ownership stake","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Ownership stake. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Ownership stake belonging to the parent Legal entity. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity.OwnershipStake"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/LegalEntity/{Id}/Synonyms":{"get":{"tags":["/LegalEntity/{Id}/Synonyms"],"summary":"Returns latest versions of all matching Legal entity synonyms belonging to the parent Legal entityin json format. This action requires the caller entitled to view Legal entity synonyms","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Legal entity synonym field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LegalEntitySynonym","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Legal entity synonym field. For possible fields, refer to the schema section for LegalEntitySynonym","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Legal entity synonym fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LegalEntitySynonym","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Legal entity synonyms","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Legal entity synonyms belonging to the parent Legal entity. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity.LegalEntitySynonym"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/LegalEntity/{Id}/Synonyms"],"summary":"Creates a new Legal entity synonym belonging to Legal entity. This action requires the caller entitled to create Legal entity synonyms","description":"Creates a new  Legal entity synonym.\nLegal entity synonym is a sub-entity of  Legal entity The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for LegalEntitySynonym. This action requires the caller entitled to create Legal entity synonyms","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Legal entity synonym. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Legal entity synonym for the parent Legal entity. The response body would contain the created Legal entity synonym","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity.LegalEntitySynonym"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/LegalEntity/{Id}/Synonyms/{SynonymsId}":{"get":{"tags":["/LegalEntity/{Id}/Synonyms/{SynonymsId}"],"summary":"Returns latest version of a specific Legal entity synonym belonging to the parent Legal entityin json format. This action requires the caller entitled to view Legal entity synonyms","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"SynonymsId","in":"path","description":"Id of Legal entity synonym","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Legal entity synonym field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for LegalEntitySynonym","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Legal entity synonym field. For possible fields, refer to the schema section for LegalEntitySynonym","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Legal entity synonym fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for LegalEntitySynonym","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Legal entity synonyms","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Legal entity synonym belonging to the parent Legal entity. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity.LegalEntitySynonym"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/LegalEntity/{Id}/Synonyms/{SynonymsId}"],"summary":"Deletes an existing Legal entity synonym belonging to Legal entity subject to caller is entitled to delete Legal entity synonyms","description":"Deletes a existing Legal entity synonym.\nLegal entity synonym is a sub-entity of Legal entity. This action is subject to caller is entitled to delete Legal entity synonyms","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"SynonymsId","in":"path","description":"Id of Legal entity synonym","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Legal entity synonym belonging to the parent Legal entity","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/LegalEntity/{Id}/Synonyms/{SynonymsId}"],"summary":"Updates an existing Legal entity synonym belonging to Legal entity subject to caller is entitled to edit Legal entity synonyms","description":"Updates a existing Legal entity synonym.\nLegal entity synonym is a sub-entity of Legal entity The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for LegalEntitySynonym in json format, subject to caller is entitled to edit Legal entity synonyms","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"SynonymsId","in":"path","description":"Id of Legal entity synonym","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Legal entity synonym. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Legal entity synonym belonging to the parent Legal entity. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity.LegalEntitySynonym"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/binary/LegalEntity/{Id}/Logo":{"get":{"tags":["/binary/LegalEntity/{Id}/Logo"],"summary":"Returns latest version of the Logo of Legal entity, subject to caller's view entitlements","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  downloading of Logo of Legal entity. The response body would contain the downloaded Logo","headers":{"Location":{"description":"Location of the existing binary resource","style":"simple"}},"content":{"application/octet-stream":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/binary/LegalEntity/{Id}/Logo"],"summary":"Deletes an existing Legal entity belonging to Legal entity subject to caller is entitled to delete Legal entities","description":"Deletes a existing Legal entity.\nLegal entity is a sub-entity of Legal entity. This action is subject to caller is entitled to delete Legal entities","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of Logo of Legal entity","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/binary/LegalEntity/{Id}/Logo"],"summary":"Updates an existing Legal entity belonging to Legal entity subject to caller is entitled to edit Legal entities","description":"Updates a existing Legal entity.\nLegal entity is a sub-entity of Legal entity The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are DealogicId,LegalName.\n For possible entity Fields, refer to the schema section for LegalEntity in json format, subject to caller is entitled to edit Legal entities","parameters":[{"name":"Id","in":"path","description":"Id of Legal entity","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Legal entity. Any subentity field (if any) would be ignored.","content":{"*/*":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of Logo of Legal entity. The response body would contain the updated entity with the Logo containing the generated id of the updated file","headers":{"ETag":{"description":"ETag of the resource in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated resource","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/LegalEntity"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ModeOfTransport":{"get":{"tags":["/ModeOfTransport"],"summary":"Returns latest versions of all matching Mode of transportsin json format. This action requires the caller entitled to view Mode of transports","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Mode of transports","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Mode of transport field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ModeOfTransport","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Mode of transport field. For possible fields, refer to the schema section for ModeOfTransport","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Mode of transport fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ModeOfTransport","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Mode of transports. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ModeOfTransport"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/ModeOfTransport"],"summary":"Creates a new Mode of transport. This action requires the caller entitled to create Mode of transports","description":"Creates a new  Mode of transport.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for ModeOfTransport. This action requires the caller entitled to create Mode of transports","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Mode of transport. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Mode of transport. The response body would contain the created Mode of transport","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ModeOfTransport"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/ModeOfTransport/{Id}":{"get":{"tags":["/ModeOfTransport/{Id}"],"summary":"Returns latest version of a specific Mode of transportin json format. This action requires the caller entitled to view Mode of transports","parameters":[{"name":"Id","in":"path","description":"Id of Mode of transport","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Mode of transports","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Mode of transport field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ModeOfTransport","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Mode of transport field. For possible fields, refer to the schema section for ModeOfTransport","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Mode of transport fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ModeOfTransport","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Mode of transport. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ModeOfTransport"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/ModeOfTransport/{Id}"],"summary":"Deletes an existing Mode of transport subject to caller is entitled to delete Mode of transports","description":"Deletes a existing Mode of transport.\n. This action is subject to caller is entitled to delete Mode of transports","parameters":[{"name":"Id","in":"path","description":"Id of Mode of transport","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Mode of transport","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/ModeOfTransport/{Id}"],"summary":"Updates an existing Mode of transport subject to caller is entitled to edit Mode of transports","description":"Updates a existing Mode of transport.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for ModeOfTransport in json format, subject to caller is entitled to edit Mode of transports","parameters":[{"name":"Id","in":"path","description":"Id of Mode of transport","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Mode of transport. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Mode of transport. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/ModeOfTransport"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/NAICS2017Industry":{"get":{"tags":["/NAICS2017Industry"],"summary":"Returns latest versions of all matching NAICS 2017 industriesin json format. This action requires the caller entitled to view NAICS 2017 industries","parameters":[{"name":"fields","in":"query","description":"Comma separated list of NAICS 2017 industry fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for NAICS2017Industry","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any NAICS 2017 industry field. For possible fields, refer to the schema section for NAICS2017Industry","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the NAICS 2017 industry field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for NAICS2017Industry","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned NAICS 2017 industries","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching NAICS 2017 industries. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/NAICS2017Industry"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/NAICS2017Industry"],"summary":"Creates a new NAICS 2017 industry. This action requires the caller entitled to create NAICS 2017 industries","description":"Creates a new  NAICS 2017 industry.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are DealogicId,Code,Name.\n For possible entity Fields, refer to the schema section for NAICS2017Industry. This action requires the caller entitled to create NAICS 2017 industries","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the NAICS 2017 industry. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of NAICS 2017 industry. The response body would contain the created NAICS 2017 industry","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/NAICS2017Industry"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/NAICS2017Industry/{Id}":{"get":{"tags":["/NAICS2017Industry/{Id}"],"summary":"Returns latest version of a specific NAICS 2017 industryin json format. This action requires the caller entitled to view NAICS 2017 industries","parameters":[{"name":"Id","in":"path","description":"Id of NAICS 2017 industry","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of NAICS 2017 industry fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for NAICS2017Industry","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any NAICS 2017 industry field. For possible fields, refer to the schema section for NAICS2017Industry","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the NAICS 2017 industry field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for NAICS2017Industry","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned NAICS 2017 industries","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific NAICS 2017 industry. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/NAICS2017Industry"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/NAICS2017Industry/{Id}"],"summary":"Deletes an existing NAICS 2017 industry subject to caller is entitled to delete NAICS 2017 industries","description":"Deletes a existing NAICS 2017 industry.\n. This action is subject to caller is entitled to delete NAICS 2017 industries","parameters":[{"name":"Id","in":"path","description":"Id of NAICS 2017 industry","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific NAICS 2017 industry","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/NAICS2017Industry/{Id}"],"summary":"Updates an existing NAICS 2017 industry subject to caller is entitled to edit NAICS 2017 industries","description":"Updates a existing NAICS 2017 industry.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are DealogicId,Code,Name.\n For possible entity Fields, refer to the schema section for NAICS2017Industry in json format, subject to caller is entitled to edit NAICS 2017 industries","parameters":[{"name":"Id","in":"path","description":"Id of NAICS 2017 industry","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified NAICS 2017 industry. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific NAICS 2017 industry. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/NAICS2017Industry"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/OwnershipType":{"get":{"tags":["/OwnershipType"],"summary":"Returns latest versions of all matching Ownership typesin json format. This action requires the caller entitled to view Ownership types","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Ownership type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for OwnershipType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Ownership types","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Ownership type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for OwnershipType","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Ownership type field. For possible fields, refer to the schema section for OwnershipType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Ownership types. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/OwnershipType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/OwnershipType"],"summary":"Creates a new Ownership type. This action requires the caller entitled to create Ownership types","description":"Creates a new  Ownership type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are DealogicId,Code,Name.\n For possible entity Fields, refer to the schema section for OwnershipType. This action requires the caller entitled to create Ownership types","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Ownership type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Ownership type. The response body would contain the created Ownership type","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/OwnershipType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/OwnershipType/{Id}":{"get":{"tags":["/OwnershipType/{Id}"],"summary":"Returns latest version of a specific Ownership typein json format. This action requires the caller entitled to view Ownership types","parameters":[{"name":"Id","in":"path","description":"Id of Ownership type","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Ownership type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for OwnershipType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Ownership types","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Ownership type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for OwnershipType","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Ownership type field. For possible fields, refer to the schema section for OwnershipType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Ownership type. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/OwnershipType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/OwnershipType/{Id}"],"summary":"Deletes an existing Ownership type subject to caller is entitled to delete Ownership types","description":"Deletes a existing Ownership type.\n. This action is subject to caller is entitled to delete Ownership types","parameters":[{"name":"Id","in":"path","description":"Id of Ownership type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Ownership type","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/OwnershipType/{Id}"],"summary":"Updates an existing Ownership type subject to caller is entitled to edit Ownership types","description":"Updates a existing Ownership type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are DealogicId,Code,Name.\n For possible entity Fields, refer to the schema section for OwnershipType in json format, subject to caller is entitled to edit Ownership types","parameters":[{"name":"Id","in":"path","description":"Id of Ownership type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Ownership type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Ownership type. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/OwnershipType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Packaging":{"get":{"tags":["/Packaging"],"summary":"Returns latest versions of all matching Packagingsin json format. This action requires the caller entitled to view Packagings","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Packagings","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Packaging field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Packaging","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Packaging fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Packaging","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Packaging field. For possible fields, refer to the schema section for Packaging","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Packagings. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Packaging"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Packaging"],"summary":"Creates a new Packaging. This action requires the caller entitled to create Packagings","description":"Creates a new  Packaging.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for Packaging. This action requires the caller entitled to create Packagings","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Packaging. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Packaging. The response body would contain the created Packaging","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Packaging"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Packaging/{Id}":{"get":{"tags":["/Packaging/{Id}"],"summary":"Returns latest version of a specific Packagingin json format. This action requires the caller entitled to view Packagings","parameters":[{"name":"Id","in":"path","description":"Id of Packaging","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Packagings","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Packaging field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Packaging","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Packaging fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Packaging","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Packaging field. For possible fields, refer to the schema section for Packaging","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Packaging. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Packaging"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Packaging/{Id}"],"summary":"Deletes an existing Packaging subject to caller is entitled to delete Packagings","description":"Deletes a existing Packaging.\n. This action is subject to caller is entitled to delete Packagings","parameters":[{"name":"Id","in":"path","description":"Id of Packaging","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Packaging","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Packaging/{Id}"],"summary":"Updates an existing Packaging subject to caller is entitled to edit Packagings","description":"Updates a existing Packaging.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Packaging in json format, subject to caller is entitled to edit Packagings","parameters":[{"name":"Id","in":"path","description":"Id of Packaging","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Packaging. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Packaging. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Packaging"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Port":{"get":{"tags":["/Port"],"summary":"Returns latest versions of all matching Portsin json format. This action requires the caller entitled to view Ports","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Port field. For possible fields, refer to the schema section for Port","schema":{},"examples":{"Sort by UNCode, descending order":{"description":"Sort by UNCode, descending order","value":"UNCode:DESC"},"Sort by UNCode, ascending order":{"description":"Sort by UNCode, ascending order","value":"UNCode:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Port fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Port","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Ports","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Port field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Port","schema":{},"examples":{"Filter by UNCode, not in operator":{"description":"Filter by UNCode, not in operator","value":"UNCode,NOT_IN,A,B,C"},"Filter by UNCode, in operator":{"description":"Filter by UNCode, in operator","value":"UNCode,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Ports. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Port"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Port"],"summary":"Creates a new Port. This action requires the caller entitled to create Ports","description":"Creates a new  Port.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are TimeZone,Country,GeoZoneNumber,Name.\n For possible entity Fields, refer to the schema section for Port. This action requires the caller entitled to create Ports","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Port. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Port. The response body would contain the created Port","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Port"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Port/{Id}":{"get":{"tags":["/Port/{Id}"],"summary":"Returns latest version of a specific Portin json format. This action requires the caller entitled to view Ports","parameters":[{"name":"Id","in":"path","description":"Id of Port","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Port field. For possible fields, refer to the schema section for Port","schema":{},"examples":{"Sort by UNCode, descending order":{"description":"Sort by UNCode, descending order","value":"UNCode:DESC"},"Sort by UNCode, ascending order":{"description":"Sort by UNCode, ascending order","value":"UNCode:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Port fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Port","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Ports","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Port field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Port","schema":{},"examples":{"Filter by UNCode, not in operator":{"description":"Filter by UNCode, not in operator","value":"UNCode,NOT_IN,A,B,C"},"Filter by UNCode, in operator":{"description":"Filter by UNCode, in operator","value":"UNCode,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Port. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Port"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Port/{Id}"],"summary":"Deletes an existing Port subject to caller is entitled to delete Ports","description":"Deletes a existing Port.\n. This action is subject to caller is entitled to delete Ports","parameters":[{"name":"Id","in":"path","description":"Id of Port","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Port","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Port/{Id}"],"summary":"Updates an existing Port subject to caller is entitled to edit Ports","description":"Updates a existing Port.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are TimeZone,Country,GeoZoneNumber,Name.\n For possible entity Fields, refer to the schema section for Port in json format, subject to caller is entitled to edit Ports","parameters":[{"name":"Id","in":"path","description":"Id of Port","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Port. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Port. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Port"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Port/{Id}/AlternativeNames":{"get":{"tags":["/Port/{Id}/AlternativeNames"],"summary":"Returns latest versions of all matching Alternative port names belonging to the parent Portin json format. This action requires the caller entitled to view Alternative port names","parameters":[{"name":"Id","in":"path","description":"Id of Port","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Alternative port name field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for AlternativePortName","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Alternative port names","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Alternative port name fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for AlternativePortName","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Alternative port name field. For possible fields, refer to the schema section for AlternativePortName","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Alternative port names belonging to the parent Port. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Port.AlternativePortName"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Port/{Id}/AlternativeNames"],"summary":"Creates a new Alternative port name belonging to Port. This action requires the caller entitled to create Alternative port names","description":"Creates a new  Alternative port name.\nAlternative port name is a sub-entity of  Port The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for AlternativePortName. This action requires the caller entitled to create Alternative port names","parameters":[{"name":"Id","in":"path","description":"Id of Port","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Alternative port name. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Alternative port name for the parent Port. The response body would contain the created Alternative port name","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Port.AlternativePortName"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Port/{Id}/AlternativeNames/{AlternativeNamesId}":{"get":{"tags":["/Port/{Id}/AlternativeNames/{AlternativeNamesId}"],"summary":"Returns latest version of a specific Alternative port name belonging to the parent Portin json format. This action requires the caller entitled to view Alternative port names","parameters":[{"name":"AlternativeNamesId","in":"path","description":"Id of Alternative port name","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Port","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Alternative port name field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for AlternativePortName","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Alternative port names","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Alternative port name fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for AlternativePortName","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Alternative port name field. For possible fields, refer to the schema section for AlternativePortName","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Alternative port name belonging to the parent Port. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Port.AlternativePortName"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Port/{Id}/AlternativeNames/{AlternativeNamesId}"],"summary":"Deletes an existing Alternative port name belonging to Port subject to caller is entitled to delete Alternative port names","description":"Deletes a existing Alternative port name.\nAlternative port name is a sub-entity of Port. This action is subject to caller is entitled to delete Alternative port names","parameters":[{"name":"AlternativeNamesId","in":"path","description":"Id of Alternative port name","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Port","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Alternative port name belonging to the parent Port","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Port/{Id}/AlternativeNames/{AlternativeNamesId}"],"summary":"Updates an existing Alternative port name belonging to Port subject to caller is entitled to edit Alternative port names","description":"Updates a existing Alternative port name.\nAlternative port name is a sub-entity of Port The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for AlternativePortName in json format, subject to caller is entitled to edit Alternative port names","parameters":[{"name":"AlternativeNamesId","in":"path","description":"Id of Alternative port name","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Port","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Alternative port name. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Alternative port name belonging to the parent Port. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Port.AlternativePortName"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Port/{Id}/Terminals":{"get":{"tags":["/Port/{Id}/Terminals"],"summary":"Returns latest versions of all matching Port terminals belonging to the parent Portin json format. This action requires the caller entitled to view Port terminals","parameters":[{"name":"Id","in":"path","description":"Id of Port","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Port terminal fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for PortTerminal","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Port terminal field. For possible fields, refer to the schema section for PortTerminal","schema":{},"examples":{"Sort by Restrictions, descending order":{"description":"Sort by Restrictions, descending order","value":"Restrictions:DESC"},"Sort by Restrictions, ascending order":{"description":"Sort by Restrictions, ascending order","value":"Restrictions:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Port terminals","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Port terminal field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for PortTerminal","schema":{},"examples":{"Filter by Restrictions, in operator":{"description":"Filter by Restrictions, in operator","value":"Restrictions,IN,A,B,C"},"Filter by Restrictions, not in operator":{"description":"Filter by Restrictions, not in operator","value":"Restrictions,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Port terminals belonging to the parent Port. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Port.PortTerminal"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Port/{Id}/Terminals"],"summary":"Creates a new Port terminal belonging to Port. This action requires the caller entitled to create Port terminals","description":"Creates a new  Port terminal.\nPort terminal is a sub-entity of  Port The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for PortTerminal. This action requires the caller entitled to create Port terminals","parameters":[{"name":"Id","in":"path","description":"Id of Port","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Port terminal. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Port terminal for the parent Port. The response body would contain the created Port terminal","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Port.PortTerminal"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Port/{Id}/Terminals/{TerminalsId}":{"get":{"tags":["/Port/{Id}/Terminals/{TerminalsId}"],"summary":"Returns latest version of a specific Port terminal belonging to the parent Portin json format. This action requires the caller entitled to view Port terminals","parameters":[{"name":"Id","in":"path","description":"Id of Port","required":true,"schema":{}},{"name":"TerminalsId","in":"path","description":"Id of Port terminal","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Port terminal fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for PortTerminal","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Port terminal field. For possible fields, refer to the schema section for PortTerminal","schema":{},"examples":{"Sort by Restrictions, descending order":{"description":"Sort by Restrictions, descending order","value":"Restrictions:DESC"},"Sort by Restrictions, ascending order":{"description":"Sort by Restrictions, ascending order","value":"Restrictions:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Port terminals","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Port terminal field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for PortTerminal","schema":{},"examples":{"Filter by Restrictions, in operator":{"description":"Filter by Restrictions, in operator","value":"Restrictions,IN,A,B,C"},"Filter by Restrictions, not in operator":{"description":"Filter by Restrictions, not in operator","value":"Restrictions,NOT_IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Port terminal belonging to the parent Port. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Port.PortTerminal"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Port/{Id}/Terminals/{TerminalsId}"],"summary":"Deletes an existing Port terminal belonging to Port subject to caller is entitled to delete Port terminals","description":"Deletes a existing Port terminal.\nPort terminal is a sub-entity of Port. This action is subject to caller is entitled to delete Port terminals","parameters":[{"name":"Id","in":"path","description":"Id of Port","required":true,"schema":{}},{"name":"TerminalsId","in":"path","description":"Id of Port terminal","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Port terminal belonging to the parent Port","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Port/{Id}/Terminals/{TerminalsId}"],"summary":"Updates an existing Port terminal belonging to Port subject to caller is entitled to edit Port terminals","description":"Updates a existing Port terminal.\nPort terminal is a sub-entity of Port The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for PortTerminal in json format, subject to caller is entitled to edit Port terminals","parameters":[{"name":"Id","in":"path","description":"Id of Port","required":true,"schema":{}},{"name":"TerminalsId","in":"path","description":"Id of Port terminal","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Port terminal. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Port terminal belonging to the parent Port. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Port.PortTerminal"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/SalesRep":{"get":{"tags":["/SalesRep"],"summary":"Returns latest versions of all matching Sales representativesin json format. This action requires the caller entitled to view Sales representatives","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Sales representative field. For possible fields, refer to the schema section for SalesRep","schema":{},"examples":{"Sort by Phone, descending order":{"description":"Sort by Phone, descending order","value":"Phone:DESC"},"Sort by Phone, ascending order":{"description":"Sort by Phone, ascending order","value":"Phone:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Sales representative fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for SalesRep","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Sales representative field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for SalesRep","schema":{},"examples":{"Filter by Phone, in operator":{"description":"Filter by Phone, in operator","value":"Phone,IN,A,B,C"},"Filter by Phone, not in operator":{"description":"Filter by Phone, not in operator","value":"Phone,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Sales representatives","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Sales representatives. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/SalesRep"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/SalesRep"],"summary":"Creates a new Sales representative. This action requires the caller entitled to create Sales representatives","description":"Creates a new  Sales representative.\n The Id property is optional, if not provided it will auto generate an Id.\n For possible entity Fields, refer to the schema section for SalesRep. This action requires the caller entitled to create Sales representatives","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Sales representative. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Sales representative. The response body would contain the created Sales representative","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/SalesRep"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/SalesRep/{Id}":{"get":{"tags":["/SalesRep/{Id}"],"summary":"Returns latest version of a specific Sales representativein json format. This action requires the caller entitled to view Sales representatives","parameters":[{"name":"Id","in":"path","description":"Id of Sales representative","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Sales representative field. For possible fields, refer to the schema section for SalesRep","schema":{},"examples":{"Sort by Phone, descending order":{"description":"Sort by Phone, descending order","value":"Phone:DESC"},"Sort by Phone, ascending order":{"description":"Sort by Phone, ascending order","value":"Phone:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Sales representative fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for SalesRep","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Sales representative field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for SalesRep","schema":{},"examples":{"Filter by Phone, in operator":{"description":"Filter by Phone, in operator","value":"Phone,IN,A,B,C"},"Filter by Phone, not in operator":{"description":"Filter by Phone, not in operator","value":"Phone,NOT_IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Sales representatives","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Sales representative. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/SalesRep"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/SalesRep/{Id}"],"summary":"Deletes an existing Sales representative subject to caller is entitled to delete Sales representatives","description":"Deletes a existing Sales representative.\n. This action is subject to caller is entitled to delete Sales representatives","parameters":[{"name":"Id","in":"path","description":"Id of Sales representative","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Sales representative","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/SalesRep/{Id}"],"summary":"Updates an existing Sales representative subject to caller is entitled to edit Sales representatives","description":"Updates a existing Sales representative.\n The Id property is optional, if not provided it will auto generate an Id.\n For possible entity Fields, refer to the schema section for SalesRep in json format, subject to caller is entitled to edit Sales representatives","parameters":[{"name":"Id","in":"path","description":"Id of Sales representative","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Sales representative. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Sales representative. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/SalesRep"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/SalesRepGroup":{"get":{"tags":["/SalesRepGroup"],"summary":"Returns latest versions of all matching Sales representative groupsin json format. This action requires the caller entitled to view Sales representative groups","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Sales representative group fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for SalesRepGroup","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Sales representative group field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for SalesRepGroup","schema":{},"examples":{"Filter by Rule, in operator":{"description":"Filter by Rule, in operator","value":"Rule,IN,A,B,C"},"Filter by Rule, not in operator":{"description":"Filter by Rule, not in operator","value":"Rule,NOT_IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Sales representative group field. For possible fields, refer to the schema section for SalesRepGroup","schema":{},"examples":{"Sort by Rule, descending order":{"description":"Sort by Rule, descending order","value":"Rule:DESC"},"Sort by Rule, ascending order":{"description":"Sort by Rule, ascending order","value":"Rule:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Sales representative groups","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Sales representative groups. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/SalesRepGroup"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/SalesRepGroup"],"summary":"Creates a new Sales representative group. This action requires the caller entitled to create Sales representative groups","description":"Creates a new  Sales representative group.\nFields required for creation is Id.\n For possible entity Fields, refer to the schema section for SalesRepGroup. This action requires the caller entitled to create Sales representative groups","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Sales representative group. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Sales representative group. The response body would contain the created Sales representative group","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/SalesRepGroup"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/SalesRepGroup/{Id}":{"get":{"tags":["/SalesRepGroup/{Id}"],"summary":"Returns latest version of a specific Sales representative groupin json format. This action requires the caller entitled to view Sales representative groups","parameters":[{"name":"Id","in":"path","description":"Id of Sales representative group","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Sales representative group fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for SalesRepGroup","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Sales representative group field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for SalesRepGroup","schema":{},"examples":{"Filter by Rule, in operator":{"description":"Filter by Rule, in operator","value":"Rule,IN,A,B,C"},"Filter by Rule, not in operator":{"description":"Filter by Rule, not in operator","value":"Rule,NOT_IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Sales representative group field. For possible fields, refer to the schema section for SalesRepGroup","schema":{},"examples":{"Sort by Rule, descending order":{"description":"Sort by Rule, descending order","value":"Rule:DESC"},"Sort by Rule, ascending order":{"description":"Sort by Rule, ascending order","value":"Rule:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Sales representative groups","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Sales representative group. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/SalesRepGroup"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/SalesRepGroup/{Id}"],"summary":"Deletes an existing Sales representative group subject to caller is entitled to delete Sales representative groups","description":"Deletes a existing Sales representative group.\n. This action is subject to caller is entitled to delete Sales representative groups","parameters":[{"name":"Id","in":"path","description":"Id of Sales representative group","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Sales representative group","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/SalesRepGroup/{Id}"],"summary":"Updates an existing Sales representative group subject to caller is entitled to edit Sales representative groups","description":"Updates a existing Sales representative group.\nFields required to be passed while editing is Id.\n For possible entity Fields, refer to the schema section for SalesRepGroup in json format, subject to caller is entitled to edit Sales representative groups","parameters":[{"name":"Id","in":"path","description":"Id of Sales representative group","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Sales representative group. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Sales representative group. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/SalesRepGroup"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/TaxCode":{"get":{"tags":["/TaxCode"],"summary":"Returns latest versions of all matching Tax codesin json format. This action requires the caller entitled to view Tax codes","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Tax code field. For possible fields, refer to the schema section for TaxCode","schema":{},"examples":{"Sort by TaxCode, descending order":{"description":"Sort by TaxCode, descending order","value":"TaxCode:DESC"},"Sort by TaxCode, ascending order":{"description":"Sort by TaxCode, ascending order","value":"TaxCode:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Tax code fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for TaxCode","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Tax code field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for TaxCode","schema":{},"examples":{"Filter by TaxCode, not in operator":{"description":"Filter by TaxCode, not in operator","value":"TaxCode,NOT_IN,A,B,C"},"Filter by TaxCode, in operator":{"description":"Filter by TaxCode, in operator","value":"TaxCode,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Tax codes","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Tax codes. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/TaxCode"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/TaxCode"],"summary":"Creates a new Tax code. This action requires the caller entitled to create Tax codes","description":"Creates a new  Tax code.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are TaxCode,TaxRate,Name.\n For possible entity Fields, refer to the schema section for TaxCode. This action requires the caller entitled to create Tax codes","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Tax code. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Tax code. The response body would contain the created Tax code","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/TaxCode"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/TaxCode/{Id}":{"get":{"tags":["/TaxCode/{Id}"],"summary":"Returns latest version of a specific Tax codein json format. This action requires the caller entitled to view Tax codes","parameters":[{"name":"Id","in":"path","description":"Id of Tax code","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Tax code field. For possible fields, refer to the schema section for TaxCode","schema":{},"examples":{"Sort by TaxCode, descending order":{"description":"Sort by TaxCode, descending order","value":"TaxCode:DESC"},"Sort by TaxCode, ascending order":{"description":"Sort by TaxCode, ascending order","value":"TaxCode:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Tax code fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for TaxCode","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Tax code field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for TaxCode","schema":{},"examples":{"Filter by TaxCode, not in operator":{"description":"Filter by TaxCode, not in operator","value":"TaxCode,NOT_IN,A,B,C"},"Filter by TaxCode, in operator":{"description":"Filter by TaxCode, in operator","value":"TaxCode,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Tax codes","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Tax code. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/TaxCode"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/TaxCode/{Id}"],"summary":"Deletes an existing Tax code subject to caller is entitled to delete Tax codes","description":"Deletes a existing Tax code.\n. This action is subject to caller is entitled to delete Tax codes","parameters":[{"name":"Id","in":"path","description":"Id of Tax code","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Tax code","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/TaxCode/{Id}"],"summary":"Updates an existing Tax code subject to caller is entitled to edit Tax codes","description":"Updates a existing Tax code.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are TaxCode,TaxRate,Name.\n For possible entity Fields, refer to the schema section for TaxCode in json format, subject to caller is entitled to edit Tax codes","parameters":[{"name":"Id","in":"path","description":"Id of Tax code","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Tax code. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Tax code. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/TaxCode"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/UnitOfMeasure":{"get":{"tags":["/UnitOfMeasure"],"summary":"Returns latest versions of all matching Unit of measuresin json format. This action requires the caller entitled to view Unit of measures","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Unit of measure field. For possible fields, refer to the schema section for UnitOfMeasure","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Unit of measures","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Unit of measure field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for UnitOfMeasure","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Unit of measure fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for UnitOfMeasure","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Unit of measures. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/UnitOfMeasure"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/UnitOfMeasure"],"summary":"Creates a new Unit of measure. This action requires the caller entitled to create Unit of measures","description":"Creates a new  Unit of measure.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for UnitOfMeasure. This action requires the caller entitled to create Unit of measures","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Unit of measure. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Unit of measure. The response body would contain the created Unit of measure","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/UnitOfMeasure"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/UnitOfMeasure/{Id}":{"get":{"tags":["/UnitOfMeasure/{Id}"],"summary":"Returns latest version of a specific Unit of measurein json format. This action requires the caller entitled to view Unit of measures","parameters":[{"name":"Id","in":"path","description":"Id of Unit of measure","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Unit of measure field. For possible fields, refer to the schema section for UnitOfMeasure","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Unit of measures","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Unit of measure field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for UnitOfMeasure","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Unit of measure fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for UnitOfMeasure","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Unit of measure. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/UnitOfMeasure"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/UnitOfMeasure/{Id}"],"summary":"Deletes an existing Unit of measure subject to caller is entitled to delete Unit of measures","description":"Deletes a existing Unit of measure.\n. This action is subject to caller is entitled to delete Unit of measures","parameters":[{"name":"Id","in":"path","description":"Id of Unit of measure","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Unit of measure","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/UnitOfMeasure/{Id}"],"summary":"Updates an existing Unit of measure subject to caller is entitled to edit Unit of measures","description":"Updates a existing Unit of measure.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for UnitOfMeasure in json format, subject to caller is entitled to edit Unit of measures","parameters":[{"name":"Id","in":"path","description":"Id of Unit of measure","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Unit of measure. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Unit of measure. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/UnitOfMeasure"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/UnitOfMeasureType":{"get":{"tags":["/UnitOfMeasureType"],"summary":"Returns latest versions of all matching Unit of measure typesin json format. This action requires the caller entitled to view Unit of measure types","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Unit of measure types","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Unit of measure type field. For possible fields, refer to the schema section for UnitOfMeasureType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Unit of measure type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for UnitOfMeasureType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Unit of measure type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for UnitOfMeasureType","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Unit of measure types. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/UnitOfMeasureType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/UnitOfMeasureType"],"summary":"Creates a new Unit of measure type. This action requires the caller entitled to create Unit of measure types","description":"Creates a new  Unit of measure type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for UnitOfMeasureType. This action requires the caller entitled to create Unit of measure types","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Unit of measure type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Unit of measure type. The response body would contain the created Unit of measure type","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/UnitOfMeasureType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/UnitOfMeasureType/{Id}":{"get":{"tags":["/UnitOfMeasureType/{Id}"],"summary":"Returns latest version of a specific Unit of measure typein json format. This action requires the caller entitled to view Unit of measure types","parameters":[{"name":"Id","in":"path","description":"Id of Unit of measure type","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Unit of measure types","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Unit of measure type field. For possible fields, refer to the schema section for UnitOfMeasureType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Unit of measure type field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for UnitOfMeasureType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Unit of measure type fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for UnitOfMeasureType","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Unit of measure type. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/UnitOfMeasureType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/UnitOfMeasureType/{Id}"],"summary":"Deletes an existing Unit of measure type subject to caller is entitled to delete Unit of measure types","description":"Deletes a existing Unit of measure type.\n. This action is subject to caller is entitled to delete Unit of measure types","parameters":[{"name":"Id","in":"path","description":"Id of Unit of measure type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Unit of measure type","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/UnitOfMeasureType/{Id}"],"summary":"Updates an existing Unit of measure type subject to caller is entitled to edit Unit of measure types","description":"Updates a existing Unit of measure type.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for UnitOfMeasureType in json format, subject to caller is entitled to edit Unit of measure types","parameters":[{"name":"Id","in":"path","description":"Id of Unit of measure type","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Unit of measure type. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Unit of measure type. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/UnitOfMeasureType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel":{"get":{"tags":["/Vessel"],"summary":"Returns latest versions of all matching Vesselsin json format. This action requires the caller entitled to view Vessels","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Vessel","schema":{},"examples":{"Filter by ShipBuilder, not in operator":{"description":"Filter by ShipBuilder, not in operator","value":"ShipBuilder,NOT_IN,A,B,C"},"Filter by ShipBuilder, in operator":{"description":"Filter by ShipBuilder, in operator","value":"ShipBuilder,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Vessel fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Vessel","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessels","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel field. For possible fields, refer to the schema section for Vessel","schema":{},"examples":{"Sort by ShipBuilder, ascending order":{"description":"Sort by ShipBuilder, ascending order","value":"ShipBuilder:ASC"},"Sort by ShipBuilder, descending order":{"description":"Sort by ShipBuilder, descending order","value":"ShipBuilder:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Vessels. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Vessel"],"summary":"Creates a new Vessel. This action requires the caller entitled to create Vessels","description":"Creates a new  Vessel.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for Vessel. This action requires the caller entitled to create Vessels","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Vessel. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Vessel. The response body would contain the created Vessel","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}":{"get":{"tags":["/Vessel/{Id}"],"summary":"Returns latest version of a specific Vesselin json format. This action requires the caller entitled to view Vessels","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Vessel","schema":{},"examples":{"Filter by ShipBuilder, not in operator":{"description":"Filter by ShipBuilder, not in operator","value":"ShipBuilder,NOT_IN,A,B,C"},"Filter by ShipBuilder, in operator":{"description":"Filter by ShipBuilder, in operator","value":"ShipBuilder,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Vessel fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Vessel","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessels","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel field. For possible fields, refer to the schema section for Vessel","schema":{},"examples":{"Sort by ShipBuilder, ascending order":{"description":"Sort by ShipBuilder, ascending order","value":"ShipBuilder:ASC"},"Sort by ShipBuilder, descending order":{"description":"Sort by ShipBuilder, descending order","value":"ShipBuilder:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Vessel/{Id}"],"summary":"Deletes an existing Vessel subject to caller is entitled to delete Vessels","description":"Deletes a existing Vessel.\n. This action is subject to caller is entitled to delete Vessels","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Vessel","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Vessel/{Id}"],"summary":"Updates an existing Vessel subject to caller is entitled to edit Vessels","description":"Updates a existing Vessel.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Vessel in json format, subject to caller is entitled to edit Vessels","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Vessel. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Vessel. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/AuxiliaryConsumptions":{"get":{"tags":["/Vessel/{Id}/AuxiliaryConsumptions"],"summary":"Returns latest versions of all matching Vessel auxiliary consumptions belonging to the parent Vesselin json format. This action requires the caller entitled to view Vessel auxiliary consumptions","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Vessel auxiliary consumption fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselAuxiliaryConsumption","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel auxiliary consumptions","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel auxiliary consumption field. For possible fields, refer to the schema section for VesselAuxiliaryConsumption","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel auxiliary consumption field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselAuxiliaryConsumption","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Vessel auxiliary consumptions belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.VesselAuxiliaryConsumption"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Vessel/{Id}/AuxiliaryConsumptions"],"summary":"Creates a new Vessel auxiliary consumption belonging to Vessel. This action requires the caller entitled to create Vessel auxiliary consumptions","description":"Creates a new  Vessel auxiliary consumption.\nVessel auxiliary consumption is a sub-entity of  Vessel The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is EngineType.\n For possible entity Fields, refer to the schema section for VesselAuxiliaryConsumption. This action requires the caller entitled to create Vessel auxiliary consumptions","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Vessel auxiliary consumption. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Vessel auxiliary consumption for the parent Vessel. The response body would contain the created Vessel auxiliary consumption","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.VesselAuxiliaryConsumption"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/AuxiliaryConsumptions/{AuxiliaryConsumptionsId}":{"get":{"tags":["/Vessel/{Id}/AuxiliaryConsumptions/{AuxiliaryConsumptionsId}"],"summary":"Returns latest version of a specific Vessel auxiliary consumption belonging to the parent Vesselin json format. This action requires the caller entitled to view Vessel auxiliary consumptions","parameters":[{"name":"AuxiliaryConsumptionsId","in":"path","description":"Id of Vessel auxiliary consumption","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Vessel auxiliary consumption fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselAuxiliaryConsumption","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel auxiliary consumptions","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel auxiliary consumption field. For possible fields, refer to the schema section for VesselAuxiliaryConsumption","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel auxiliary consumption field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselAuxiliaryConsumption","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Vessel auxiliary consumption belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.VesselAuxiliaryConsumption"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Vessel/{Id}/AuxiliaryConsumptions/{AuxiliaryConsumptionsId}"],"summary":"Deletes an existing Vessel auxiliary consumption belonging to Vessel subject to caller is entitled to delete Vessel auxiliary consumptions","description":"Deletes a existing Vessel auxiliary consumption.\nVessel auxiliary consumption is a sub-entity of Vessel. This action is subject to caller is entitled to delete Vessel auxiliary consumptions","parameters":[{"name":"AuxiliaryConsumptionsId","in":"path","description":"Id of Vessel auxiliary consumption","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Vessel auxiliary consumption belonging to the parent Vessel","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Vessel/{Id}/AuxiliaryConsumptions/{AuxiliaryConsumptionsId}"],"summary":"Updates an existing Vessel auxiliary consumption belonging to Vessel subject to caller is entitled to edit Vessel auxiliary consumptions","description":"Updates a existing Vessel auxiliary consumption.\nVessel auxiliary consumption is a sub-entity of Vessel The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is EngineType.\n For possible entity Fields, refer to the schema section for VesselAuxiliaryConsumption in json format, subject to caller is entitled to edit Vessel auxiliary consumptions","parameters":[{"name":"AuxiliaryConsumptionsId","in":"path","description":"Id of Vessel auxiliary consumption","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Vessel auxiliary consumption. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Vessel auxiliary consumption belonging to the parent Vessel. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.VesselAuxiliaryConsumption"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/BunkerTanks":{"get":{"tags":["/Vessel/{Id}/BunkerTanks"],"summary":"Returns latest versions of all matching Bunker tanks belonging to the parent Vesselin json format. This action requires the caller entitled to view Bunker tanks","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Bunker tanks","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Bunker tank field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BunkerTank","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Bunker tank field. For possible fields, refer to the schema section for BunkerTank","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Bunker tank fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BunkerTank","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Bunker tanks belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.BunkerTank"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Vessel/{Id}/BunkerTanks"],"summary":"Creates a new Bunker tank belonging to Vessel. This action requires the caller entitled to create Bunker tanks","description":"Creates a new  Bunker tank.\nBunker tank is a sub-entity of  Vessel The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for BunkerTank. This action requires the caller entitled to create Bunker tanks","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Bunker tank. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Bunker tank for the parent Vessel. The response body would contain the created Bunker tank","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.BunkerTank"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/BunkerTanks/{BunkerTanksId}":{"get":{"tags":["/Vessel/{Id}/BunkerTanks/{BunkerTanksId}"],"summary":"Returns latest version of a specific Bunker tank belonging to the parent Vesselin json format. This action requires the caller entitled to view Bunker tanks","parameters":[{"name":"BunkerTanksId","in":"path","description":"Id of Bunker tank","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Bunker tanks","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Bunker tank field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for BunkerTank","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Bunker tank field. For possible fields, refer to the schema section for BunkerTank","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Bunker tank fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for BunkerTank","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Bunker tank belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.BunkerTank"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Vessel/{Id}/BunkerTanks/{BunkerTanksId}"],"summary":"Deletes an existing Bunker tank belonging to Vessel subject to caller is entitled to delete Bunker tanks","description":"Deletes a existing Bunker tank.\nBunker tank is a sub-entity of Vessel. This action is subject to caller is entitled to delete Bunker tanks","parameters":[{"name":"BunkerTanksId","in":"path","description":"Id of Bunker tank","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Bunker tank belonging to the parent Vessel","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Vessel/{Id}/BunkerTanks/{BunkerTanksId}"],"summary":"Updates an existing Bunker tank belonging to Vessel subject to caller is entitled to edit Bunker tanks","description":"Updates a existing Bunker tank.\nBunker tank is a sub-entity of Vessel The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for BunkerTank in json format, subject to caller is entitled to edit Bunker tanks","parameters":[{"name":"BunkerTanksId","in":"path","description":"Id of Bunker tank","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Bunker tank. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Bunker tank belonging to the parent Vessel. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.BunkerTank"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/Emissions":{"get":{"tags":["/Vessel/{Id}/Emissions"],"summary":"Returns latest versions of all matching Emissions belonging to the parent Vesselin json format. This action requires the caller entitled to view Emissions","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Emissions","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Emission field. For possible fields, refer to the schema section for Emission","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Emission field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Emission","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Emission fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Emission","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Emissions belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.Emission"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Vessel/{Id}/Emissions"],"summary":"Creates a new Emission belonging to Vessel. This action requires the caller entitled to create Emissions","description":"Creates a new  Emission.\nEmission is a sub-entity of  VesselFields required for creation is Year.\n For possible entity Fields, refer to the schema section for Emission. This action requires the caller entitled to create Emissions","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Emission. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Emission for the parent Vessel. The response body would contain the created Emission","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.Emission"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/Emissions/{EmissionsId}":{"get":{"tags":["/Vessel/{Id}/Emissions/{EmissionsId}"],"summary":"Returns latest version of a specific Emission belonging to the parent Vesselin json format. This action requires the caller entitled to view Emissions","parameters":[{"name":"EmissionsId","in":"path","description":"Id of Emission","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Emissions","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Emission field. For possible fields, refer to the schema section for Emission","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Emission field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Emission","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Emission fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Emission","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Emission belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.Emission"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Vessel/{Id}/Emissions/{EmissionsId}"],"summary":"Deletes an existing Emission belonging to Vessel subject to caller is entitled to delete Emissions","description":"Deletes a existing Emission.\nEmission is a sub-entity of Vessel. This action is subject to caller is entitled to delete Emissions","parameters":[{"name":"EmissionsId","in":"path","description":"Id of Emission","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Emission belonging to the parent Vessel","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Vessel/{Id}/Emissions/{EmissionsId}"],"summary":"Updates an existing Emission belonging to Vessel subject to caller is entitled to edit Emissions","description":"Updates a existing Emission.\nEmission is a sub-entity of VesselFields required to be passed while editing is Year.\n For possible entity Fields, refer to the schema section for Emission in json format, subject to caller is entitled to edit Emissions","parameters":[{"name":"EmissionsId","in":"path","description":"Id of Emission","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Emission. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Emission belonging to the parent Vessel. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.Emission"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/Holds":{"get":{"tags":["/Vessel/{Id}/Holds"],"summary":"Returns latest versions of all matching Holds belonging to the parent Vesselin json format. This action requires the caller entitled to view Holds","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Hold field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Hold","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Holds","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Hold fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Hold","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Hold field. For possible fields, refer to the schema section for Hold","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Holds belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.Hold"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Vessel/{Id}/Holds"],"summary":"Creates a new Hold belonging to Vessel. This action requires the caller entitled to create Holds","description":"Creates a new  Hold.\nHold is a sub-entity of  Vessel The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for Hold. This action requires the caller entitled to create Holds","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Hold. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Hold for the parent Vessel. The response body would contain the created Hold","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.Hold"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/Holds/{HoldsId}":{"get":{"tags":["/Vessel/{Id}/Holds/{HoldsId}"],"summary":"Returns latest version of a specific Hold belonging to the parent Vesselin json format. This action requires the caller entitled to view Holds","parameters":[{"name":"HoldsId","in":"path","description":"Id of Hold","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Hold field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Hold","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Holds","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Hold fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Hold","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Hold field. For possible fields, refer to the schema section for Hold","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Hold belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.Hold"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Vessel/{Id}/Holds/{HoldsId}"],"summary":"Deletes an existing Hold belonging to Vessel subject to caller is entitled to delete Holds","description":"Deletes a existing Hold.\nHold is a sub-entity of Vessel. This action is subject to caller is entitled to delete Holds","parameters":[{"name":"HoldsId","in":"path","description":"Id of Hold","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Hold belonging to the parent Vessel","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Vessel/{Id}/Holds/{HoldsId}"],"summary":"Updates an existing Hold belonging to Vessel subject to caller is entitled to edit Holds","description":"Updates a existing Hold.\nHold is a sub-entity of Vessel The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Hold in json format, subject to caller is entitled to edit Holds","parameters":[{"name":"HoldsId","in":"path","description":"Id of Hold","required":true,"schema":{}},{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Hold. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Hold belonging to the parent Vessel. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.Hold"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/NameHistory":{"get":{"tags":["/Vessel/{Id}/NameHistory"],"summary":"Returns latest versions of all matching Vessel histories belonging to the parent Vesselin json format. This action requires the caller entitled to view Vessel histories","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel history field. For possible fields, refer to the schema section for VesselNameOwnershipHistory","schema":{},"examples":{"Sort by RegisteredOwner, descending order":{"description":"Sort by RegisteredOwner, descending order","value":"RegisteredOwner:DESC"},"Sort by RegisteredOwner, ascending order":{"description":"Sort by RegisteredOwner, ascending order","value":"RegisteredOwner:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel histories","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel history field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselNameOwnershipHistory","schema":{},"examples":{"Filter by RegisteredOwner, not in operator":{"description":"Filter by RegisteredOwner, not in operator","value":"RegisteredOwner,NOT_IN,A,B,C"},"Filter by RegisteredOwner, in operator":{"description":"Filter by RegisteredOwner, in operator","value":"RegisteredOwner,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Vessel history fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselNameOwnershipHistory","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Vessel histories belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.VesselNameOwnershipHistory"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Vessel/{Id}/NameHistory"],"summary":"Creates a new Vessel history belonging to Vessel. This action requires the caller entitled to create Vessel histories","description":"Creates a new  Vessel history.\nVessel history is a sub-entity of  VesselFields required for creation is Name.\n For possible entity Fields, refer to the schema section for VesselNameOwnershipHistory. This action requires the caller entitled to create Vessel histories","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Vessel history. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Vessel history for the parent Vessel. The response body would contain the created Vessel history","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.VesselNameOwnershipHistory"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/NameHistory/{NameHistoryId}":{"get":{"tags":["/Vessel/{Id}/NameHistory/{NameHistoryId}"],"summary":"Returns latest version of a specific Vessel history belonging to the parent Vesselin json format. This action requires the caller entitled to view Vessel histories","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"NameHistoryId","in":"path","description":"Id of Vessel history","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel history field. For possible fields, refer to the schema section for VesselNameOwnershipHistory","schema":{},"examples":{"Sort by RegisteredOwner, descending order":{"description":"Sort by RegisteredOwner, descending order","value":"RegisteredOwner:DESC"},"Sort by RegisteredOwner, ascending order":{"description":"Sort by RegisteredOwner, ascending order","value":"RegisteredOwner:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel histories","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel history field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselNameOwnershipHistory","schema":{},"examples":{"Filter by RegisteredOwner, not in operator":{"description":"Filter by RegisteredOwner, not in operator","value":"RegisteredOwner,NOT_IN,A,B,C"},"Filter by RegisteredOwner, in operator":{"description":"Filter by RegisteredOwner, in operator","value":"RegisteredOwner,IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Vessel history fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselNameOwnershipHistory","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Vessel history belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.VesselNameOwnershipHistory"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Vessel/{Id}/NameHistory/{NameHistoryId}"],"summary":"Deletes an existing Vessel history belonging to Vessel subject to caller is entitled to delete Vessel histories","description":"Deletes a existing Vessel history.\nVessel history is a sub-entity of Vessel. This action is subject to caller is entitled to delete Vessel histories","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"NameHistoryId","in":"path","description":"Id of Vessel history","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Vessel history belonging to the parent Vessel","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Vessel/{Id}/NameHistory/{NameHistoryId}"],"summary":"Updates an existing Vessel history belonging to Vessel subject to caller is entitled to edit Vessel histories","description":"Updates a existing Vessel history.\nVessel history is a sub-entity of VesselFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for VesselNameOwnershipHistory in json format, subject to caller is entitled to edit Vessel histories","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"NameHistoryId","in":"path","description":"Id of Vessel history","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Vessel history. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Vessel history belonging to the parent Vessel. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.VesselNameOwnershipHistory"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/ShipsGears":{"get":{"tags":["/Vessel/{Id}/ShipsGears"],"summary":"Returns latest versions of all matching Ships gears belonging to the parent Vesselin json format. This action requires the caller entitled to view Ships gears","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Ships gear field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ShipsGear","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Ships gear field. For possible fields, refer to the schema section for ShipsGear","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Ships gears","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Ships gear fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ShipsGear","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Ships gears belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.ShipsGear"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Vessel/{Id}/ShipsGears"],"summary":"Creates a new Ships gear belonging to Vessel. This action requires the caller entitled to create Ships gears","description":"Creates a new  Ships gear.\nShips gear is a sub-entity of  Vessel The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for ShipsGear. This action requires the caller entitled to create Ships gears","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Ships gear. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Ships gear for the parent Vessel. The response body would contain the created Ships gear","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.ShipsGear"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/ShipsGears/{ShipsGearsId}":{"get":{"tags":["/Vessel/{Id}/ShipsGears/{ShipsGearsId}"],"summary":"Returns latest version of a specific Ships gear belonging to the parent Vesselin json format. This action requires the caller entitled to view Ships gears","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"ShipsGearsId","in":"path","description":"Id of Ships gear","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Ships gear field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for ShipsGear","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Ships gear field. For possible fields, refer to the schema section for ShipsGear","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Ships gears","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Ships gear fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for ShipsGear","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Ships gear belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.ShipsGear"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Vessel/{Id}/ShipsGears/{ShipsGearsId}"],"summary":"Deletes an existing Ships gear belonging to Vessel subject to caller is entitled to delete Ships gears","description":"Deletes a existing Ships gear.\nShips gear is a sub-entity of Vessel. This action is subject to caller is entitled to delete Ships gears","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"ShipsGearsId","in":"path","description":"Id of Ships gear","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Ships gear belonging to the parent Vessel","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Vessel/{Id}/ShipsGears/{ShipsGearsId}"],"summary":"Updates an existing Ships gear belonging to Vessel subject to caller is entitled to edit Ships gears","description":"Updates a existing Ships gear.\nShips gear is a sub-entity of Vessel The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for ShipsGear in json format, subject to caller is entitled to edit Ships gears","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"ShipsGearsId","in":"path","description":"Id of Ships gear","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Ships gear. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Ships gear belonging to the parent Vessel. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.ShipsGear"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/SpeedAndConsumptions":{"get":{"tags":["/Vessel/{Id}/SpeedAndConsumptions"],"summary":"Returns latest versions of all matching Vessel speed and consumptions belonging to the parent Vesselin json format. This action requires the caller entitled to view Vessel speed and consumptions","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel speed and consumptions","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Vessel speed and consumption fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselSpeedAndConsumption","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel speed and consumption field. For possible fields, refer to the schema section for VesselSpeedAndConsumption","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel speed and consumption field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselSpeedAndConsumption","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Vessel speed and consumptions belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.VesselSpeedAndConsumption"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Vessel/{Id}/SpeedAndConsumptions"],"summary":"Creates a new Vessel speed and consumption belonging to Vessel. This action requires the caller entitled to create Vessel speed and consumptions","description":"Creates a new  Vessel speed and consumption.\nVessel speed and consumption is a sub-entity of  Vessel The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for VesselSpeedAndConsumption. This action requires the caller entitled to create Vessel speed and consumptions","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Vessel speed and consumption. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Vessel speed and consumption for the parent Vessel. The response body would contain the created Vessel speed and consumption","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.VesselSpeedAndConsumption"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/SpeedAndConsumptions/{SpeedAndConsumptionsId}":{"get":{"tags":["/Vessel/{Id}/SpeedAndConsumptions/{SpeedAndConsumptionsId}"],"summary":"Returns latest version of a specific Vessel speed and consumption belonging to the parent Vesselin json format. This action requires the caller entitled to view Vessel speed and consumptions","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"SpeedAndConsumptionsId","in":"path","description":"Id of Vessel speed and consumption","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel speed and consumptions","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Vessel speed and consumption fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselSpeedAndConsumption","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel speed and consumption field. For possible fields, refer to the schema section for VesselSpeedAndConsumption","schema":{},"examples":{"Sort by Id, ascending order":{"description":"Sort by Id, ascending order","value":"Id:ASC"},"Sort by Id, descending order":{"description":"Sort by Id, descending order","value":"Id:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel speed and consumption field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselSpeedAndConsumption","schema":{},"examples":{"Filter by Id, not in operator":{"description":"Filter by Id, not in operator","value":"Id,NOT_IN,A,B,C"},"Filter by Id, in operator":{"description":"Filter by Id, in operator","value":"Id,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Vessel speed and consumption belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.VesselSpeedAndConsumption"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Vessel/{Id}/SpeedAndConsumptions/{SpeedAndConsumptionsId}"],"summary":"Deletes an existing Vessel speed and consumption belonging to Vessel subject to caller is entitled to delete Vessel speed and consumptions","description":"Deletes a existing Vessel speed and consumption.\nVessel speed and consumption is a sub-entity of Vessel. This action is subject to caller is entitled to delete Vessel speed and consumptions","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"SpeedAndConsumptionsId","in":"path","description":"Id of Vessel speed and consumption","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Vessel speed and consumption belonging to the parent Vessel","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Vessel/{Id}/SpeedAndConsumptions/{SpeedAndConsumptionsId}"],"summary":"Updates an existing Vessel speed and consumption belonging to Vessel subject to caller is entitled to edit Vessel speed and consumptions","description":"Updates a existing Vessel speed and consumption.\nVessel speed and consumption is a sub-entity of Vessel The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for VesselSpeedAndConsumption in json format, subject to caller is entitled to edit Vessel speed and consumptions","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"SpeedAndConsumptionsId","in":"path","description":"Id of Vessel speed and consumption","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Vessel speed and consumption. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Vessel speed and consumption belonging to the parent Vessel. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.VesselSpeedAndConsumption"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/Vettings":{"get":{"tags":["/Vessel/{Id}/Vettings"],"summary":"Returns latest versions of all matching Vettings belonging to the parent Vesselin json format. This action requires the caller entitled to view Vettings","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vetting field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Vetting","schema":{},"examples":{"Filter by Value, in operator":{"description":"Filter by Value, in operator","value":"Value,IN,A,B,C"},"Filter by Value, not in operator":{"description":"Filter by Value, not in operator","value":"Value,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Vetting fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Vetting","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vetting field. For possible fields, refer to the schema section for Vetting","schema":{},"examples":{"Sort by Value, descending order":{"description":"Sort by Value, descending order","value":"Value:DESC"},"Sort by Value, ascending order":{"description":"Sort by Value, ascending order","value":"Value:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vettings","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Vettings belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.Vetting"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Vessel/{Id}/Vettings"],"summary":"Creates a new Vetting belonging to Vessel. This action requires the caller entitled to create Vettings","description":"Creates a new  Vetting.\nVetting is a sub-entity of  Vessel The Id property is optional, if not provided it will auto generate an Id.\n For possible entity Fields, refer to the schema section for Vetting. This action requires the caller entitled to create Vettings","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Vetting. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Vetting for the parent Vessel. The response body would contain the created Vetting","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.Vetting"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Vessel/{Id}/Vettings/{VettingsId}":{"get":{"tags":["/Vessel/{Id}/Vettings/{VettingsId}"],"summary":"Returns latest version of a specific Vetting belonging to the parent Vesselin json format. This action requires the caller entitled to view Vettings","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"VettingsId","in":"path","description":"Id of Vetting","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vetting field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Vetting","schema":{},"examples":{"Filter by Value, in operator":{"description":"Filter by Value, in operator","value":"Value,IN,A,B,C"},"Filter by Value, not in operator":{"description":"Filter by Value, not in operator","value":"Value,NOT_IN,A,B,C"}}},{"name":"fields","in":"query","description":"Comma separated list of Vetting fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Vetting","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vetting field. For possible fields, refer to the schema section for Vetting","schema":{},"examples":{"Sort by Value, descending order":{"description":"Sort by Value, descending order","value":"Value:DESC"},"Sort by Value, ascending order":{"description":"Sort by Value, ascending order","value":"Value:ASC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vettings","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Vetting belonging to the parent Vessel. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.Vetting"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Vessel/{Id}/Vettings/{VettingsId}"],"summary":"Deletes an existing Vetting belonging to Vessel subject to caller is entitled to delete Vettings","description":"Deletes a existing Vetting.\nVetting is a sub-entity of Vessel. This action is subject to caller is entitled to delete Vettings","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"VettingsId","in":"path","description":"Id of Vetting","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Vetting belonging to the parent Vessel","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Vessel/{Id}/Vettings/{VettingsId}"],"summary":"Updates an existing Vetting belonging to Vessel subject to caller is entitled to edit Vettings","description":"Updates a existing Vetting.\nVetting is a sub-entity of Vessel The Id property is optional, if not provided it will auto generate an Id.\n For possible entity Fields, refer to the schema section for Vetting in json format, subject to caller is entitled to edit Vettings","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"VettingsId","in":"path","description":"Id of Vetting","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Vetting. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Vetting belonging to the parent Vessel. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel.Vetting"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/binary/Vessel/{Id}/VesselImage":{"get":{"tags":["/binary/Vessel/{Id}/VesselImage"],"summary":"Returns latest version of the VesselImage of Vessel, subject to caller's view entitlements","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  downloading of VesselImage of Vessel. The response body would contain the downloaded VesselImage","headers":{"Location":{"description":"Location of the existing binary resource","style":"simple"}},"content":{"application/octet-stream":{"schema":{"items":{"$ref":"#/components/schemas/Vessel"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/binary/Vessel/{Id}/VesselImage"],"summary":"Deletes an existing Vessel belonging to Vessel subject to caller is entitled to delete Vessels","description":"Deletes a existing Vessel.\nVessel is a sub-entity of Vessel. This action is subject to caller is entitled to delete Vessels","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of VesselImage of Vessel","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/binary/Vessel/{Id}/VesselImage"],"summary":"Updates an existing Vessel belonging to Vessel subject to caller is entitled to edit Vessels","description":"Updates a existing Vessel.\nVessel is a sub-entity of Vessel The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for Vessel in json format, subject to caller is entitled to edit Vessels","parameters":[{"name":"Id","in":"path","description":"Id of Vessel","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Vessel. Any subentity field (if any) would be ignored.","content":{"*/*":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of VesselImage of Vessel. The response body would contain the updated entity with the VesselImage containing the generated id of the updated file","headers":{"ETag":{"description":"ETag of the resource in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated resource","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Vessel"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/VesselClass":{"get":{"tags":["/VesselClass"],"summary":"Returns latest versions of all matching Vessel classesin json format. This action requires the caller entitled to view Vessel classes","parameters":[{"name":"fields","in":"query","description":"Comma separated list of Vessel class fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselClass","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel class field. For possible fields, refer to the schema section for VesselClass","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel classes","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel class field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselClass","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Vessel classes. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselClass"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/VesselClass"],"summary":"Creates a new Vessel class. This action requires the caller entitled to create Vessel classes","description":"Creates a new  Vessel class.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are MinSize,MaxSize,Name.\n For possible entity Fields, refer to the schema section for VesselClass. This action requires the caller entitled to create Vessel classes","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Vessel class. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Vessel class. The response body would contain the created Vessel class","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselClass"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/VesselClass/{Id}":{"get":{"tags":["/VesselClass/{Id}"],"summary":"Returns latest version of a specific Vessel classin json format. This action requires the caller entitled to view Vessel classes","parameters":[{"name":"Id","in":"path","description":"Id of Vessel class","required":true,"schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Vessel class fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselClass","schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel class field. For possible fields, refer to the schema section for VesselClass","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel classes","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel class field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselClass","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Vessel class. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselClass"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/VesselClass/{Id}"],"summary":"Deletes an existing Vessel class subject to caller is entitled to delete Vessel classes","description":"Deletes a existing Vessel class.\n. This action is subject to caller is entitled to delete Vessel classes","parameters":[{"name":"Id","in":"path","description":"Id of Vessel class","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Vessel class","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/VesselClass/{Id}"],"summary":"Updates an existing Vessel class subject to caller is entitled to edit Vessel classes","description":"Updates a existing Vessel class.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are MinSize,MaxSize,Name.\n For possible entity Fields, refer to the schema section for VesselClass in json format, subject to caller is entitled to edit Vessel classes","parameters":[{"name":"Id","in":"path","description":"Id of Vessel class","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Vessel class. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Vessel class. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselClass"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/VesselGroup":{"get":{"tags":["/VesselGroup"],"summary":"Returns latest versions of all matching Vessel groupsin json format. This action requires the caller entitled to view Vessel groups","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel groups","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Vessel group fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselGroup","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel group field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselGroup","schema":{},"examples":{"Filter by Rule, in operator":{"description":"Filter by Rule, in operator","value":"Rule,IN,A,B,C"},"Filter by Rule, not in operator":{"description":"Filter by Rule, not in operator","value":"Rule,NOT_IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel group field. For possible fields, refer to the schema section for VesselGroup","schema":{},"examples":{"Sort by Rule, descending order":{"description":"Sort by Rule, descending order","value":"Rule:DESC"},"Sort by Rule, ascending order":{"description":"Sort by Rule, ascending order","value":"Rule:ASC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Vessel groups. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselGroup"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/VesselGroup"],"summary":"Creates a new Vessel group. This action requires the caller entitled to create Vessel groups","description":"Creates a new  Vessel group.\nFields required for creation is Id.\n For possible entity Fields, refer to the schema section for VesselGroup. This action requires the caller entitled to create Vessel groups","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Vessel group. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Vessel group. The response body would contain the created Vessel group","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselGroup"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/VesselGroup/{Id}":{"get":{"tags":["/VesselGroup/{Id}"],"summary":"Returns latest version of a specific Vessel groupin json format. This action requires the caller entitled to view Vessel groups","parameters":[{"name":"Id","in":"path","description":"Id of Vessel group","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel groups","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Vessel group fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselGroup","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel group field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselGroup","schema":{},"examples":{"Filter by Rule, in operator":{"description":"Filter by Rule, in operator","value":"Rule,IN,A,B,C"},"Filter by Rule, not in operator":{"description":"Filter by Rule, not in operator","value":"Rule,NOT_IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel group field. For possible fields, refer to the schema section for VesselGroup","schema":{},"examples":{"Sort by Rule, descending order":{"description":"Sort by Rule, descending order","value":"Rule:DESC"},"Sort by Rule, ascending order":{"description":"Sort by Rule, ascending order","value":"Rule:ASC"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Vessel group. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselGroup"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/VesselGroup/{Id}"],"summary":"Deletes an existing Vessel group subject to caller is entitled to delete Vessel groups","description":"Deletes a existing Vessel group.\n. This action is subject to caller is entitled to delete Vessel groups","parameters":[{"name":"Id","in":"path","description":"Id of Vessel group","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Vessel group","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/VesselGroup/{Id}"],"summary":"Updates an existing Vessel group subject to caller is entitled to edit Vessel groups","description":"Updates a existing Vessel group.\nFields required to be passed while editing is Id.\n For possible entity Fields, refer to the schema section for VesselGroup in json format, subject to caller is entitled to edit Vessel groups","parameters":[{"name":"Id","in":"path","description":"Id of Vessel group","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Vessel group. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Vessel group. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselGroup"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/VesselReportingFact":{"get":{"tags":["/VesselReportingFact"],"summary":"Returns latest versions of all matching Vessel reporting factsin json format. This action requires the caller entitled to view Vessel reporting facts","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel reporting fact field. For possible fields, refer to the schema section for VesselReportingFact","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Vessel reporting fact fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselReportingFact","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel reporting fact field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselReportingFact","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel reporting facts","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Vessel reporting facts. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselReportingFact"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/VesselReportingFact"],"summary":"Creates a new Vessel reporting fact. This action requires the caller entitled to create Vessel reporting facts","description":"Creates a new  Vessel reporting fact.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are DataType,Name.\n For possible entity Fields, refer to the schema section for VesselReportingFact. This action requires the caller entitled to create Vessel reporting facts","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Vessel reporting fact. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Vessel reporting fact. The response body would contain the created Vessel reporting fact","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselReportingFact"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/VesselReportingFact/{Id}":{"get":{"tags":["/VesselReportingFact/{Id}"],"summary":"Returns latest version of a specific Vessel reporting factin json format. This action requires the caller entitled to view Vessel reporting facts","parameters":[{"name":"Id","in":"path","description":"Id of Vessel reporting fact","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel reporting fact field. For possible fields, refer to the schema section for VesselReportingFact","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Vessel reporting fact fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselReportingFact","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel reporting fact field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselReportingFact","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel reporting facts","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Vessel reporting fact. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselReportingFact"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/VesselReportingFact/{Id}"],"summary":"Deletes an existing Vessel reporting fact subject to caller is entitled to delete Vessel reporting facts","description":"Deletes a existing Vessel reporting fact.\n. This action is subject to caller is entitled to delete Vessel reporting facts","parameters":[{"name":"Id","in":"path","description":"Id of Vessel reporting fact","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Vessel reporting fact","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/VesselReportingFact/{Id}"],"summary":"Updates an existing Vessel reporting fact subject to caller is entitled to edit Vessel reporting facts","description":"Updates a existing Vessel reporting fact.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are DataType,Name.\n For possible entity Fields, refer to the schema section for VesselReportingFact in json format, subject to caller is entitled to edit Vessel reporting facts","parameters":[{"name":"Id","in":"path","description":"Id of Vessel reporting fact","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Vessel reporting fact. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Vessel reporting fact. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselReportingFact"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/VesselSpeedDescription":{"get":{"tags":["/VesselSpeedDescription"],"summary":"Returns latest versions of all matching Vessel speed descriptionsin json format. This action requires the caller entitled to view Vessel speed descriptions","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel speed description field. For possible fields, refer to the schema section for VesselSpeedDescription","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel speed description field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselSpeedDescription","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel speed descriptions","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Vessel speed description fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselSpeedDescription","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Vessel speed descriptions. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselSpeedDescription"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/VesselSpeedDescription"],"summary":"Creates a new Vessel speed description. This action requires the caller entitled to create Vessel speed descriptions","description":"Creates a new  Vessel speed description.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for VesselSpeedDescription. This action requires the caller entitled to create Vessel speed descriptions","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Vessel speed description. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Vessel speed description. The response body would contain the created Vessel speed description","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselSpeedDescription"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/VesselSpeedDescription/{Id}":{"get":{"tags":["/VesselSpeedDescription/{Id}"],"summary":"Returns latest version of a specific Vessel speed descriptionin json format. This action requires the caller entitled to view Vessel speed descriptions","parameters":[{"name":"Id","in":"path","description":"Id of Vessel speed description","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel speed description field. For possible fields, refer to the schema section for VesselSpeedDescription","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel speed description field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselSpeedDescription","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel speed descriptions","schema":{}},{"name":"fields","in":"query","description":"Comma separated list of Vessel speed description fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselSpeedDescription","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Vessel speed description. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselSpeedDescription"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/VesselSpeedDescription/{Id}"],"summary":"Deletes an existing Vessel speed description subject to caller is entitled to delete Vessel speed descriptions","description":"Deletes a existing Vessel speed description.\n. This action is subject to caller is entitled to delete Vessel speed descriptions","parameters":[{"name":"Id","in":"path","description":"Id of Vessel speed description","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Vessel speed description","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/VesselSpeedDescription/{Id}"],"summary":"Updates an existing Vessel speed description subject to caller is entitled to edit Vessel speed descriptions","description":"Updates a existing Vessel speed description.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for VesselSpeedDescription in json format, subject to caller is entitled to edit Vessel speed descriptions","parameters":[{"name":"Id","in":"path","description":"Id of Vessel speed description","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Vessel speed description. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Vessel speed description. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselSpeedDescription"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/VesselSubType":{"get":{"tags":["/VesselSubType"],"summary":"Returns latest versions of all matching Vessel subtypesin json format. This action requires the caller entitled to view Vessel subtypes","parameters":[{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel subtypes","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel subtype field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselSubType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel subtype field. For possible fields, refer to the schema section for VesselSubType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Vessel subtype fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselSubType","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Vessel subtypes. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselSubType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/VesselSubType"],"summary":"Creates a new Vessel subtype. This action requires the caller entitled to create Vessel subtypes","description":"Creates a new  Vessel subtype.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for VesselSubType. This action requires the caller entitled to create Vessel subtypes","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Vessel subtype. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Vessel subtype. The response body would contain the created Vessel subtype","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselSubType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/VesselSubType/{Id}":{"get":{"tags":["/VesselSubType/{Id}"],"summary":"Returns latest version of a specific Vessel subtypein json format. This action requires the caller entitled to view Vessel subtypes","parameters":[{"name":"Id","in":"path","description":"Id of Vessel subtype","required":true,"schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel subtypes","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel subtype field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselSubType","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel subtype field. For possible fields, refer to the schema section for VesselSubType","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Vessel subtype fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselSubType","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Vessel subtype. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselSubType"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/VesselSubType/{Id}"],"summary":"Deletes an existing Vessel subtype subject to caller is entitled to delete Vessel subtypes","description":"Deletes a existing Vessel subtype.\n. This action is subject to caller is entitled to delete Vessel subtypes","parameters":[{"name":"Id","in":"path","description":"Id of Vessel subtype","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Vessel subtype","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/VesselSubType/{Id}"],"summary":"Updates an existing Vessel subtype subject to caller is entitled to edit Vessel subtypes","description":"Updates a existing Vessel subtype.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for VesselSubType in json format, subject to caller is entitled to edit Vessel subtypes","parameters":[{"name":"Id","in":"path","description":"Id of Vessel subtype","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Vessel subtype. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Vessel subtype. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselSubType"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/VesselTradingStatus":{"get":{"tags":["/VesselTradingStatus"],"summary":"Returns latest versions of all matching Vessel trading statusesin json format. This action requires the caller entitled to view Vessel trading statuses","parameters":[{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel trading status field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselTradingStatus","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel trading status field. For possible fields, refer to the schema section for VesselTradingStatus","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Vessel trading status fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselTradingStatus","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel trading statuses","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Vessel trading statuses. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselTradingStatus"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/VesselTradingStatus"],"summary":"Creates a new Vessel trading status. This action requires the caller entitled to create Vessel trading statuses","description":"Creates a new  Vessel trading status.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation is Name.\n For possible entity Fields, refer to the schema section for VesselTradingStatus. This action requires the caller entitled to create Vessel trading statuses","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Vessel trading status. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Vessel trading status. The response body would contain the created Vessel trading status","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselTradingStatus"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/VesselTradingStatus/{Id}":{"get":{"tags":["/VesselTradingStatus/{Id}"],"summary":"Returns latest version of a specific Vessel trading statusin json format. This action requires the caller entitled to view Vessel trading statuses","parameters":[{"name":"Id","in":"path","description":"Id of Vessel trading status","required":true,"schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Vessel trading status field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for VesselTradingStatus","schema":{},"examples":{"Filter by Name, not in operator":{"description":"Filter by Name, not in operator","value":"Name,NOT_IN,A,B,C"},"Filter by Name, in operator":{"description":"Filter by Name, in operator","value":"Name,IN,A,B,C"}}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Vessel trading status field. For possible fields, refer to the schema section for VesselTradingStatus","schema":{},"examples":{"Sort by Name, ascending order":{"description":"Sort by Name, ascending order","value":"Name:ASC"},"Sort by Name, descending order":{"description":"Sort by Name, descending order","value":"Name:DESC"}}},{"name":"fields","in":"query","description":"Comma separated list of Vessel trading status fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for VesselTradingStatus","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Vessel trading statuses","schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Vessel trading status. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselTradingStatus"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/VesselTradingStatus/{Id}"],"summary":"Deletes an existing Vessel trading status subject to caller is entitled to delete Vessel trading statuses","description":"Deletes a existing Vessel trading status.\n. This action is subject to caller is entitled to delete Vessel trading statuses","parameters":[{"name":"Id","in":"path","description":"Id of Vessel trading status","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Vessel trading status","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/VesselTradingStatus/{Id}"],"summary":"Updates an existing Vessel trading status subject to caller is entitled to edit Vessel trading statuses","description":"Updates a existing Vessel trading status.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing is Name.\n For possible entity Fields, refer to the schema section for VesselTradingStatus in json format, subject to caller is entitled to edit Vessel trading statuses","parameters":[{"name":"Id","in":"path","description":"Id of Vessel trading status","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Vessel trading status. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Vessel trading status. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/VesselTradingStatus"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Water":{"get":{"tags":["/Water"],"summary":"Returns latest versions of all matching Watersin json format. This action requires the caller entitled to view Waters","parameters":[{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Water field. For possible fields, refer to the schema section for Water","schema":{},"examples":{"Sort by WaterType, descending order":{"description":"Sort by WaterType, descending order","value":"WaterType:DESC"},"Sort by WaterType, ascending order":{"description":"Sort by WaterType, ascending order","value":"WaterType:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Water fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Water","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Waters","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Water field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Water","schema":{},"examples":{"Filter by WaterType, not in operator":{"description":"Filter by WaterType, not in operator","value":"WaterType,NOT_IN,A,B,C"},"Filter by WaterType, in operator":{"description":"Filter by WaterType, in operator","value":"WaterType,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  all matching Waters. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Water"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"post":{"tags":["/Water"],"summary":"Creates a new Water. This action requires the caller entitled to create Waters","description":"Creates a new  Water.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required for creation are Salinity,WaterType.\n For possible entity Fields, refer to the schema section for Water. This action requires the caller entitled to create Waters","parameters":[{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be set while creating the Water. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"201":{"description":"Indicates successful  creation of Water. The response body would contain the created Water","headers":{"ETag":{"description":"ETag of the created entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the created entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Water"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}},"/Water/{Id}":{"get":{"tags":["/Water/{Id}"],"summary":"Returns latest version of a specific Waterin json format. This action requires the caller entitled to view Waters","parameters":[{"name":"Id","in":"path","description":"Id of Water","required":true,"schema":{}},{"name":"sortBy","in":"query","description":"Sort by clause. This query parameter can be repeated to apply sorting on multiple filters. Sorting can be applied on any Water field. For possible fields, refer to the schema section for Water","schema":{},"examples":{"Sort by WaterType, descending order":{"description":"Sort by WaterType, descending order","value":"WaterType:DESC"},"Sort by WaterType, ascending order":{"description":"Sort by WaterType, ascending order","value":"WaterType:ASC"}}},{"name":"fields","in":"query","description":"Comma separated list of Water fields to be returned in the resultant json. If not provided, all fields will be returned.  For possible list of fields, refer to the schema section for Water","schema":{}},{"name":"maxResults","in":"query","description":"Maximum number of returned Waters","schema":{}},{"name":"filter","in":"query","description":"Filters to be applied. This query parameter can be repeated to apply multiple filters. Format : EntityField,Operator,Value1,...ValueN. Where EntityField is any of the Water field. Operator is the operator symbol and value1..n refers to the operator value(s).  Multiple values can be passed separated by commas if Operator require/accepts multiple values. For possible EntityFields, refer to the schema section for Water","schema":{},"examples":{"Filter by WaterType, not in operator":{"description":"Filter by WaterType, not in operator","value":"WaterType,NOT_IN,A,B,C"},"Filter by WaterType, in operator":{"description":"Filter by WaterType, in operator","value":"WaterType,IN,A,B,C"}}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"200":{"description":"Indicates successful  in receiving  the specific Water. The response body would be a json containing resultant set.","headers":{"ETag":{"description":"ETag of the existing resource in format rootEntityId:revisionId if a specific resource is asked","style":"simple"},"Location":{"description":"Location of the existing resource if a specific resource is asked","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Water"}}}}},"400":{"description":"Invalid search request arguments","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"delete":{"tags":["/Water/{Id}"],"summary":"Deletes an existing Water subject to caller is entitled to delete Waters","description":"Deletes a existing Water.\n. This action is subject to caller is entitled to delete Waters","parameters":[{"name":"Id","in":"path","description":"Id of Water","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"responses":{"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"204":{"description":"Indicates successful  deletion of  the specific Water","content":{"application/json":{}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data deletion was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}},"patch":{"tags":["/Water/{Id}"],"summary":"Updates an existing Water subject to caller is entitled to edit Waters","description":"Updates a existing Water.\n The Id property is optional, if not provided it will auto generate an Id.\nFields required to be passed while editing are Salinity,WaterType.\n For possible entity Fields, refer to the schema section for Water in json format, subject to caller is entitled to edit Waters","parameters":[{"name":"Id","in":"path","description":"Id of Water","required":true,"schema":{}},{"name":"If-Match","in":"header","schema":{}}],"requestBody":{"description":"A json containing field/values to be updated in the specified Water. Any subentity field (if any) would be ignored.","content":{"application/json":{}},"required":true},"responses":{"200":{"description":"Indicates successful  update of  the specific Water. The response body would be a json containing updated entity.","headers":{"ETag":{"description":"ETag of the updated entity in format rootEntityId:revisionId","style":"simple"},"Location":{"description":"Location of the updated entity","style":"simple"}},"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Water"}}}}},"202":{"description":"Request submitted for 4-eyes approval","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/Rest4EyesMessage"}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"403":{"description":"User action forbidden","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"404":{"description":"Entity not found","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"409":{"description":"Conflicting entity already exists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"412":{"description":"Data change was done on an outdated revision","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}},"500":{"description":"Internal server error / Request not processable / Four-Eyes request submission failed","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/RestServiceError"}}}}}}}}},"components":{"schemas":{"Water":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"Id":{"type":"string","deprecated":false,"description":"Water Type identifier"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Salinity":{"deprecated":false},"WaterType":{"type":"string","deprecated":false,"description":"Water Type"}},"required":["Salinity","WaterType"]},"LegalEntity":{"properties":{"AcurisCreditRubricId":{"type":"string","deprecated":false},"AcurisPrimeId":{"type":"string","deprecated":false},"AcurisPrimeIndustry":{"type":"string","deprecated":false},"Bank":{"type":"boolean","deprecated":false},"BrandName":{"type":"string","deprecated":false},"BusinessDescription":{"type":"string","deprecated":false},"BusinessLocation":{"type":"string","deprecated":false},"BusinessVersions":{"properties":{"Comment":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"LegalName":{"type":"string","deprecated":false},"SourceURL":{"type":"string","deprecated":false},"ValidTo":{"type":"string","deprecated":false},"VersionId":{"type":"integer","format":"int32","deprecated":false}},"required":["VersionId","LegalName"]},"CentralIndexKey":{"type":"string","deprecated":false,"description":"The Central Index Key (CIK) is used on the SEC's computer systems to identify corporations and individual people who have filed disclosure with the SEC"},"CompanyRegistrationId":{"type":"string","deprecated":false},"ControlParent":{"type":"string","deprecated":false},"DealogicId":{"type":"string","deprecated":false},"DealogicIndustry":{"type":"string","deprecated":false},"DisplayName":{"type":"string","deprecated":false,"description":"Brand name or Legal name, if Brand name is not available (read only)"},"FinancialSponsor":{"type":"boolean","deprecated":false},"FitchRating":{"type":"string","deprecated":false},"GIC":{"type":"string","deprecated":false},"GICSIndustry":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"IncorporationLocation":{"type":"string","deprecated":false},"InvestmentStrategyDescription":{"type":"string","deprecated":false},"InvestorStyle":{"type":"string","deprecated":false},"InvestorType":{"type":"string","deprecated":false},"IsInActive":{"type":"boolean","deprecated":false},"LegalEntityIdentifier":{"type":"string","deprecated":false,"description":"Global identifier of the legal entity (LEI)"},"LegalName":{"type":"string","deprecated":false},"Logo":{"type":"string","format":"binary","deprecated":false},"LogoURL":{"type":"string","deprecated":false},"MajorityOwner":{"type":"string","deprecated":false},"MoodysRating":{"type":"string","deprecated":false},"OwnershipStakes":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"Owner":{"type":"string","deprecated":false},"OwnershipPercent":{"deprecated":false}},"required":["Owner"]},"OwnershipType":{"type":"string","deprecated":false},"PrimaryNAICS2017Industry":{"type":"string","deprecated":false},"PrimaryTicker":{"type":"string","deprecated":false},"ProperName":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SecondaryNAICS2017Industries":{"type":"array","deprecated":false,"items":{"type":"string"}},"SelerityId":{"type":"string","deprecated":false},"SnPRating":{"type":"string","deprecated":false},"Synonyms":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"Name":{"type":"string","deprecated":false,"description":"Name of the Synonym"}},"required":["Name"]},"WebsiteAddress":{"type":"string","deprecated":false},"XtractCompanyId":{"type":"string","deprecated":false},"XtractEntityId":{"type":"string","deprecated":false},"XtractSponsorId":{"type":"string","deprecated":false},"XtractUnderwriterId":{"type":"string","deprecated":false}},"required":["DealogicId","LegalName"]},"BookHierarchy":{"properties":{"Deleted":{"type":"boolean","deprecated":false,"description":"Hierarchy has been deleted and will be removed after the next restart"},"Depth":{"type":"string","deprecated":false},"Description":{"type":"string","deprecated":false,"description":"Human readable description for the hierarchy"},"EnforcedType":{"type":"string","deprecated":false},"EntityClassStr":{"type":"string","deprecated":true,"description":"Use the native API instead, which has different entity types per class."},"Id":{"type":"string","deprecated":false,"description":"Identifier of the Hierarchy used as record ID, within record field names and within other technical APIs. Only alpha-numeric characters and underscores are allowed."},"IsDefault":{"type":"boolean","deprecated":true,"description":"Not needed as Counterparties and Books don't have to belong to a hierarchy anymore."},"LevelDefault":{"properties":{"CustomField":{"type":"string","deprecated":false,"description":"Hidden field to keep reference of custom field entity."},"DefaultValue":{"properties":{"DefaultValue":{"type":"string","deprecated":false,"description":"The value of the default"},"Id":{"type":"string","deprecated":false,"description":"LevelDefault Id"},"Level":{"type":"integer","format":"int32","deprecated":false,"description":"The level in the hierarchy that the entity must occupy to trigger the default"}},"required":["Level"]},"FieldName":{"type":"string","deprecated":false,"description":"Name of field to default"},"Id":{"type":"string","deprecated":false,"description":"LevelDefault Id"}},"required":["FieldName"]},"Levels":{"properties":{"EnforcedSubtype":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Book level. If not provided while creating Book level the id is internally generated. This field cannot be edited."},"Level":{"type":"integer","format":"int32","deprecated":false},"Name":{"type":"string","deprecated":false,"description":"Level Name"}}},"RequiresRestart":{"type":"boolean","deprecated":false,"description":"Configuration entity has recently been added and requires a restart."},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Id"]},"EventDate":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the Event date. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"CodeMappingJsonFmt":{"type":"string","deprecated":false,"description":"List of all available code type values. DEPRECATED: Use native CT_ fields instead."},"CustomSortOrder":{"deprecated":false,"description":"Fractional number defining the custom sort order"},"Default":{"type":"boolean","deprecated":false},"Description":{"type":"string","deprecated":false,"description":"Name of event in a textual form"},"Group":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Arrival, 1 - Ballast, 2 - Berthing, 3 - Bunker, 4 - Cargo, 5 - Contract, 6 - Depart, 7 - Inspection, 8 - Lightering, 9 - Miscellaneous, 10 - Pilot, 11 - Shift, 12 - Stop, 13 - STS, 14 - Tugs, 15 - Waiting, 16 - Weather","enum":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]},"Id":{"type":"string","deprecated":false,"description":"Event date identifier"},"Name":{"type":"string","deprecated":false},"NextDate":{"type":"string","deprecated":false,"description":"Activity this Event date must be less than"},"Offset":{"deprecated":false,"description":"Days +- the configured Offset date"},"OffsetDate":{"type":"string","deprecated":false,"description":"The Event date the offset is applied to"},"PreviousDate":{"type":"string","deprecated":false,"description":"Activity this Event date must be greater than"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Special":{"type":"integer","format":"int32","deprecated":false,"description":"Used to indicate arrival or departure time in schedule. Possible values: 0 - Arrival, 1 - Departure, 2 - Arrived port, 3 - Departed port, 4 - ETB, 5 - ETS, 6 - Commenced, 7 - Completed, 8 - Laytime begin, 9 - Laytime end","enum":[0,1,2,3,4,5,6,7,8,9]},"Stoppage":{"type":"array","deprecated":false,"items":{"type":"integer","format":"int32","description":"Stops cargo operation from counting. Possible values: 0 - Start, 1 - Stop","enum":[0,1]}},"Type":{"type":"array","deprecated":false,"items":{"type":"integer","format":"int32","description":"Type of vessel. Possible values: 0 - Dry, 1 - Tank, 2 - Gas, 3 - Dry/Tank","enum":[0,1,2,3]}}},"required":["Group","Type","Name"]},"Vessel.VesselAuxiliaryConsumption":{"properties":{"AtSea":{"deprecated":false,"description":"Additional consumption at sea"},"Clean":{"type":"integer","format":"int32","deprecated":false,"description":"Tank Cleaning"},"Discharge":{"deprecated":false,"description":"Tank Discharge Consumption"},"EngineType":{"type":"integer","format":"int32","deprecated":false,"description":"Engine Type. Possible values: 0 - Main, 1 - Aux1, 2 - Aux2, 3 - Aux3","enum":[0,1,2,3]},"Heat":{"type":"integer","format":"int32","deprecated":false,"description":"Tank Heating"},"Id":{"type":"string","deprecated":false,"description":"Auxiliary Consumption identifier"},"Idle":{"deprecated":false,"description":"Idle Consumption"},"Inert":{"type":"integer","format":"int32","deprecated":false,"description":"Tank Inerting"},"Load":{"deprecated":false,"description":"Tank Loading Consumption"},"MaintTemp":{"type":"integer","format":"int32","deprecated":false,"description":"Tank Maintain Temperature"},"Work":{"deprecated":false,"description":"Dry Working Consumption"}},"required":["EngineType"]},"BusinessDate":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Reference ID of the Business date."},"Name":{"type":"string","deprecated":false,"description":"Unique name of the Business date."},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"LegalEntity.OwnershipStake":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"Owner":{"type":"string","deprecated":false},"OwnershipPercent":{"deprecated":false}},"required":["Owner"]},"CommodityStrategyHierarchy.LevelDefault.LevelDefaultValue":{"properties":{"DefaultValue":{"type":"string","deprecated":false,"description":"The value of the default"},"Id":{"type":"string","deprecated":false,"description":"LevelDefault Id"},"Level":{"type":"integer","format":"int32","deprecated":false,"description":"The level in the hierarchy that the entity must occupy to trigger the default"}},"required":["Level"]},"GeoZone":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"Id":{"type":"string","deprecated":false,"description":"Zone identifier"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Zone":{"type":"string","deprecated":false}},"required":["Zone"]},"UnitOfMeasureType":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Unit of meassure type identifier"},"Name":{"type":"string","deprecated":false,"description":"Unit of meassure type name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"CommodityStrategyHierarchy":{"properties":{"Deleted":{"type":"boolean","deprecated":false,"description":"Hierarchy has been deleted and will be removed after the next restart"},"Depth":{"type":"string","deprecated":false},"Description":{"type":"string","deprecated":false,"description":"Human readable description for the hierarchy"},"EnforcedType":{"type":"string","deprecated":false},"EntityClassStr":{"type":"string","deprecated":true,"description":"Use the native API instead, which has different entity types per class."},"Id":{"type":"string","deprecated":false,"description":"Identifier of the Hierarchy used as record ID, within record field names and within other technical APIs. Only alpha-numeric characters and underscores are allowed."},"IsDefault":{"type":"boolean","deprecated":true,"description":"Not needed as Counterparties and Books don't have to belong to a hierarchy anymore."},"LevelDefault":{"properties":{"CustomField":{"type":"string","deprecated":false,"description":"Hidden field to keep reference of custom field entity."},"DefaultValue":{"properties":{"DefaultValue":{"type":"string","deprecated":false,"description":"The value of the default"},"Id":{"type":"string","deprecated":false,"description":"LevelDefault Id"},"Level":{"type":"integer","format":"int32","deprecated":false,"description":"The level in the hierarchy that the entity must occupy to trigger the default"}},"required":["Level"]},"FieldName":{"type":"string","deprecated":false,"description":"Name of field to default"},"Id":{"type":"string","deprecated":false,"description":"LevelDefault Id"}},"required":["FieldName"]},"Levels":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Level. If not provided while creating Level the id is internally generated. This field cannot be edited."},"Level":{"type":"integer","format":"int32","deprecated":false},"Name":{"type":"string","deprecated":false,"description":"Level Name"}}},"RequiresRestart":{"type":"boolean","deprecated":false,"description":"Configuration entity has recently been added and requires a restart."},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Id"]},"Counterparty.BICTypeRelation":{"properties":{"BIC":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the BIC Type Relation. If not provided while creating BIC Type Relation the id is internally generated. This field cannot be edited."},"Type":{"type":"string","deprecated":false}},"required":["Type","BIC"]},"Vessel.Hold":{"properties":{"Coating":{"type":"string","deprecated":false},"HatchCenterDistance":{"deprecated":false},"HatchDimensionX":{"type":"integer","format":"int32","deprecated":false},"HatchDimensionY":{"type":"integer","format":"int32","deprecated":false},"HatchType":{"type":"string","deprecated":false},"Hatches":{"type":"integer","format":"int32","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Hold identifier"},"Name":{"type":"string","deprecated":false}},"required":["Name"]},"InvestorType":{"properties":{"Code":{"type":"string","deprecated":false},"DealogicId":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"Name":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["DealogicId","Code","Name"]},"CounterpartyHierarchy.CounterpartyLevel":{"properties":{"EnforcedSubtype":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Counterparty level. If not provided while creating Counterparty level the id is internally generated. This field cannot be edited."},"Level":{"type":"integer","format":"int32","deprecated":false},"Name":{"type":"string","deprecated":false,"description":"Level Name"}}},"Vessel.Vetting":{"properties":{"Category":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 1 - Safety score, 2 - GHG, 3 - EVDI, 4 - Inspection outcome","enum":[1,2,3,4]},"Checked":{"format":"date-time","deprecated":false},"Comments":{"type":"string","deprecated":false},"Counterparty":{"type":"string","deprecated":false},"Expiry":{"format":"date","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Auto generated identifier or passed in creation function call"},"Modified":{"format":"date-time","deprecated":false},"Type":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 1 - Rightship, 2 - Oil major, 3 - Other","enum":[1,2,3]},"User":{"type":"string","deprecated":false},"Value":{"type":"string","deprecated":false}}},"ConfirmationFieldType":{"properties":{"Default":{"type":"boolean","deprecated":false,"description":"When true, defines this confirmation field type as the default.  Only one record may be set as true."},"Description":{"type":"string","deprecated":false,"description":"Description or long name of the Confirmation field type."},"Id":{"type":"string","deprecated":false,"description":"Reference ID of the Confirmation field type."},"Name":{"type":"string","deprecated":false,"description":"Name or code of the Confirmation field type."},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"CounterpartyType":{"properties":{"Description":{"type":"string","deprecated":false,"description":"A meaningful Counterparty Type description"},"Id":{"type":"string","deprecated":false,"description":"Counterparty Type Identifier"},"Name":{"type":"string","deprecated":false,"description":"Counterparty Type Name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"ClearingFormat":{"properties":{"Description":{"type":"string","deprecated":false,"description":"A meaningful Clearing Format description"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Id":{"type":"string","deprecated":false,"description":"Clearing Format Identifier"},"MTCode":{"type":"string","deprecated":false,"description":"Code to be used in MT messages. This is an MT equivalent of the MX value provided in Code attribute"},"MXCode":{"type":"string","deprecated":false,"description":"The code that should be output on financial messages. This corresponds to the code used in MX messages"},"Name":{"type":"string","deprecated":false,"description":"Clearing Format Name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."},"Structure":{"type":"string","deprecated":false,"description":"Code structure pattern"}},"required":["Name"]},"Book":{"properties":{"AreaDate":{"format":"date","deprecated":false},"AreaDate_ValueSource":{"type":"integer","format":"int32","deprecated":false},"BookOwner":{"type":"string","deprecated":false,"description":"Owner of the account."},"BusinessDate":{"type":"string","deprecated":false,"description":"Business date of the Book."},"BusinessUnitId":{"type":"string","deprecated":false},"ClearingGroupId":{"type":"string","deprecated":false},"CodeMappingJsonFmt":{"type":"string","deprecated":false,"description":"List of all available code type values. DEPRECATED: Use native CT_ fields instead."},"Contacts":{"properties":{"ContactTypeId":{"type":"string","deprecated":false,"description":"Classification of the contact according to the configurable contact types"},"Description":{"type":"string","deprecated":false,"description":"Description of the contact"},"Email":{"type":"string","deprecated":false,"description":"Main email address of the contact"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Fax":{"type":"string","deprecated":false,"description":"Main fax number of the contact"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Contact. If not provided while creating Contact the id is internally generated. This field cannot be edited."},"Mobile":{"type":"string","deprecated":false,"description":"Mobile phone number of the contact."},"Name":{"type":"string","deprecated":false,"description":"Name of the contact"},"NamePrefix":{"type":"string","deprecated":false,"description":"Prefix to apply to the contact name."},"Other":{"type":"string","deprecated":false,"description":"Free use text fields for comments, remarks etc"},"Phone":{"type":"string","deprecated":false,"description":"Main phone number of the contact"},"Signature":{"type":"string","format":"binary","deprecated":false,"description":"The image of the signature of the person identified by this contact"},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."}},"required":["Name"]},"CounterpartyId":{"type":"string","deprecated":false},"CounterpartyId_ValueSource":{"type":"integer","format":"int32","deprecated":false},"Currency":{"type":"string","deprecated":false,"description":"Currency of the book"},"DealerBIC":{"type":"string","deprecated":false,"description":"The Bank Identifier Code, as a 4-character unique identifier for each bank that executed and reported an OTC trade, as required by MiFID."},"Description":{"type":"string","deprecated":false,"description":"Description of the book used"},"DeskId":{"type":"string","deprecated":false,"description":"Reference ID for the desk."},"DfCurveNPV":{"type":"string","deprecated":false},"EntitySubtype":{"type":"string","deprecated":true,"description":"Use 'Subtype' instead."},"EntityType":{"type":"string","deprecated":true,"description":"Use 'Type' instead."},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Book. If not provided while creating Book the id is internally generated. This field cannot be edited."},"InterGLCounterpartyId":{"type":"string","deprecated":false},"IsArchived":{"type":"boolean","deprecated":false,"description":"Indicates whether the book is archived or live."},"LegalEntity":{"type":"string","deprecated":false,"description":"Legal entity of the Bank itself owning the Book ('Us')"},"LocationId":{"type":"string","deprecated":false},"MarkId":{"type":"string","deprecated":false,"description":"Default desk Mark Id associated with a user."},"Name":{"type":"string","deprecated":false,"description":"Name of the book"},"PartOfGroups":{"type":"array","deprecated":false,"items":{"type":"string"}},"RateGroup":{"type":"string","deprecated":false},"RateGroup_ValueSource":{"type":"integer","format":"int32","deprecated":false},"ReportingCurrency":{"type":"string","deprecated":false},"ReportingCurrency_ValueSource":{"type":"integer","format":"int32","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."},"Subtype":{"type":"string","deprecated":false,"description":"Classification of the book according to the configurable book subtype"},"TraderFirstName":{"type":"string","deprecated":false,"description":"Trader first name."},"TraderLastName":{"type":"string","deprecated":false,"description":"Trader last name."},"TradingAllowedFlag":{"type":"integer","format":"int32","deprecated":false,"description":"Trading allowed on this account or not.. Possible values: 0 - Unknown, 1 - Yes, 2 - No","enum":[0,1,2]},"Type":{"type":"string","deprecated":false,"description":"Classification of the book according to the configurable book type"}},"required":["Name"]},"Currency":{"properties":{"ActiveCMD":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the currency for commodities. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"BusinessDate":{"type":"string","deprecated":false,"description":"Business date for currency."},"CLSEnabled":{"type":"boolean","deprecated":false,"description":"CLS (Continuous Linked Settlement) enabled flag. This flag identifies whether risk is associated with the currency."},"Calendar":{"type":"string","deprecated":false,"description":"Calendar for currency."},"DayCntConvention":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Undef, 2 - ACT/365, 3 - ACT/360, 11 - 30/360","enum":[0,2,3,11]},"Description":{"type":"string","deprecated":false},"DisplayName":{"type":"string","deprecated":false},"FinancialCenter":{"type":"string","deprecated":false,"description":"The Principal Financial Center of the currency."},"ISOCode":{"type":"string","deprecated":false,"description":"ISO 4217 alpha code"},"Id":{"type":"string","deprecated":false,"description":"If defined during creation, the legacy Id of an undefined type. The internal RDX Id otherwise."},"Name":{"type":"string","deprecated":false},"NumericCode":{"type":"string","deprecated":false,"description":"ISO 4217 numeric code"},"Ranking":{"type":"integer","format":"int32","deprecated":false,"description":"Ranking is used to set the order or priority."},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SettlDays":{"type":"integer","format":"int32","deprecated":false},"Symbol":{"type":"string","deprecated":false,"description":"Currency symbol"},"Type":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Currency, 1 - Complementary currency, 2 - Precious metal, 3 - Funds code, 4 - Bond market unit, 5 - Unit of account, 6 - Special","enum":[0,1,2,3,4,5,6]},"ValueDec":{"type":"integer","format":"int32","deprecated":false,"description":"Number of decimal places in value"}}},"Counterparty.Split":{"properties":{"Counterparty":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Split. If not provided while creating Split the id is internally generated. This field cannot be edited."},"Percentage":{"deprecated":false}},"required":["Counterparty","Percentage"]},"AttachmentBase.Attachment":{"properties":{"Attachment":{"type":"string","format":"binary","deprecated":false},"Category":{"type":"string","deprecated":false},"Confirmation":{"type":"boolean","deprecated":false},"CreatedBy":{"type":"string","deprecated":false},"CreatedOn":{"format":"date-time","deprecated":false},"Description":{"type":"string","deprecated":false},"DocType":{"type":"string","deprecated":false},"Document":{"type":"boolean","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Attachment"},"ModifiedBy":{"type":"string","deprecated":false},"ModifiedOn":{"format":"date-time","deprecated":false},"Notification":{"type":"boolean","deprecated":false},"Type":{"type":"string","deprecated":false}}},"Vessel.VesselNameOwnershipHistory":{"properties":{"Classification":{"type":"string","deprecated":false,"description":"Previous vessel classification society"},"DateOfChange":{"format":"date-time","deprecated":false,"description":"Date vessel stopped using name"},"Flag":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Vessel history"},"MMSI":{"type":"string","deprecated":false,"description":"Maritime Mobile Service Identity"},"Name":{"type":"string","deprecated":false,"description":"Previous vessel name"},"PortOfRegistry":{"type":"string","deprecated":false},"RegisteredOwner":{"type":"string","deprecated":false,"description":"Previously registered owner of the vessel"}},"required":["Name"]},"CounterpartyHierarchy.LevelDefault.LevelDefaultValue":{"properties":{"DefaultValue":{"type":"string","deprecated":false,"description":"The value of the default"},"Id":{"type":"string","deprecated":false,"description":"LevelDefault Id"},"Level":{"type":"integer","format":"int32","deprecated":false,"description":"The level in the hierarchy that the entity must occupy to trigger the default"}},"required":["Level"]},"VesselReportingFact":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"BunkerGrade":{"type":"string","deprecated":false,"description":"Bunker grade this fact relates to"},"ControlType":{"type":"integer","format":"int32","deprecated":false,"description":"Specific functionality in Softmar this fact relates to. Possible values: 1 - Off Hire From, 2 - Off Hire to, 3 - Off Hire, 4 - Boil Off, 5 - Consumed, 6 - Off Hire Consumed, 7 - ROB, 8 - Stemmed, 9 - ETA, 10 - ETB, 11 - ETS","enum":[1,2,3,4,5,6,7,8,9,10,11]},"CustomSortOrder":{"deprecated":false,"description":"Fractional number defining the custom sort order"},"DataType":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 1 - General, 2 - Port, 3 - Speed, 4 - Distance, 5 - Weather, 6 - Sea Condition, 7 - Fuel ROB, 8 - Fuel Consumed, 9 - Water, 10 - Emissions, 11 - LNG, 12 - Unit, 13 - With/Against, 14 - Date, 15 - IMO, 16 - Text, 17 - Position, 18 - Voyage","enum":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]},"Description":{"type":"string","deprecated":false},"ISO19848ID":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Vessel reporting fact. If not provided while creating Vessel reporting fact the id is internally generated. This field cannot be edited."},"Name":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"ShownByDefault":{"type":"boolean","deprecated":false,"description":"Should this fact be shown by default?"},"ValidationMax":{"deprecated":false},"ValidationMin":{"deprecated":false},"VesselType":{"type":"array","deprecated":false,"items":{"type":"integer","format":"int32","description":"Type of vessel the fact is applicable for. Possible values: 0 - Dry, 1 - Tank, 2 - Gas, 3 - Dry/Tank","enum":[0,1,2,3]}}},"required":["DataType","Name"]},"AnalyticsLocation":{"properties":{"Code":{"type":"string","deprecated":false},"DealogicId":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"Name":{"type":"string","deprecated":false},"ParentLocation":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Type":{"type":"string","deprecated":false}},"required":["DealogicId","Type","Code","Name"]},"DepositoryCodeFormat":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Depository Code Format Identifier"},"MTCode":{"type":"string","deprecated":false,"description":"Code to be used on the MT messages."},"MXCode":{"type":"string","deprecated":false,"description":"Code to be used on the MX messages."},"Name":{"type":"string","deprecated":false,"description":"Descriptive name of the format"},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"Exchange":{"properties":{"Description":{"type":"string","deprecated":false,"description":"Description or long name of the Exchange."},"Id":{"type":"string","deprecated":false,"description":"Reference ID of the Exchange."},"Name":{"type":"string","deprecated":false,"description":"Name or short name of the Exchange."},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"Counterparty.InvestmentManager":{"properties":{"Default":{"type":"boolean","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"InvestmentManager":{"type":"string","deprecated":false}},"required":["InvestmentManager"]},"GradeFactor":{"properties":{"Description":{"type":"string","deprecated":false,"description":"Description or long name of the Grade factor."},"Id":{"type":"string","deprecated":false,"description":"Reference ID of the Grade factor."},"Name":{"type":"string","deprecated":false,"description":"Name or short name of the Grade factor."},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"BookHierarchy.BookLevel":{"properties":{"EnforcedSubtype":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Book level. If not provided while creating Book level the id is internally generated. This field cannot be edited."},"Level":{"type":"integer","format":"int32","deprecated":false},"Name":{"type":"string","deprecated":false,"description":"Level Name"}}},"BusinessUnit":{"properties":{"Description":{"type":"string","deprecated":false,"description":"A meaningful Business Unit description"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Id":{"type":"string","deprecated":false,"description":"Business Unit Identifier"},"Name":{"type":"string","deprecated":false,"description":"Business Unit Name"},"RCFieldName":{"type":"string","deprecated":false,"description":"The fieldname of RefData where the Restricted Code is stored. Mainly used in RIL flow."},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."}},"required":["Name"]},"ModeOfTransport":{"properties":{"Description":{"type":"string","deprecated":false,"description":"Description or long name of the Mode of transport."},"Id":{"type":"string","deprecated":false,"description":"Reference ID of the Mode of transport."},"Name":{"type":"string","deprecated":false,"description":"Name or short name of the Mode of transport."},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"UnitOfMeasure":{"type":"string","deprecated":false}},"required":["Name"]},"Incoterm":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the term. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"Description":{"type":"string","deprecated":false,"description":"Description of the term"},"DisplayName":{"type":"string","deprecated":false,"description":"Name and version of the term"},"Id":{"type":"string","deprecated":false,"description":"Identifier of the term"},"Name":{"type":"string","deprecated":false,"description":"Name of the term"},"Remarks":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Version":{"type":"string","deprecated":false,"description":"Version of the term"}},"required":["Name"]},"VesselGroup":{"properties":{"Description":{"type":"string","deprecated":false,"description":"Description of the group used"},"EntitlementGroup":{"type":"boolean","deprecated":false},"Exclude":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of entities to be excluded from the group in spite of falling into the rule criteria (JSON array)"}},"GroupInclude":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of groups to be included (JSON array)"}},"Id":{"type":"string","deprecated":false,"description":"Identifier of the Group used as record/chain ID and within other technical APIs. Only alpha-numeric characters and underscores are allowed."},"Include":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of entities to be included in the group in spite of not falling into the rule criteria (JSON array)"}},"Name":{"type":"string","deprecated":false,"description":"Name of the group"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Rule":{"type":"string","deprecated":false}},"required":["Id"]},"BookGroup":{"properties":{"BookExclude":{"type":"string","deprecated":true,"description":"Use 'Exclude' instead."},"BookGroupInclude":{"type":"string","deprecated":true,"description":"Use 'GroupInclude' instead."},"BookInclude":{"type":"string","deprecated":true,"description":"Use 'Include' instead."},"DefaultBookTradeExpr":{"type":"string","deprecated":false,"description":"Expression defining in which Book a certain Trade should be inserted."},"Description":{"type":"string","deprecated":false,"description":"Description of the group used"},"EntitlementGroup":{"type":"boolean","deprecated":false},"Exclude":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of entities to be excluded from the group in spite of falling into the rule criteria (JSON array)"}},"GroupInclude":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of groups to be included (JSON array)"}},"Id":{"type":"string","deprecated":false,"description":"Identifier of the Group used as record/chain ID and within other technical APIs. Only alpha-numeric characters and underscores are allowed."},"Include":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of entities to be included in the group in spite of not falling into the rule criteria (JSON array)"}},"Name":{"type":"string","deprecated":false,"description":"Name of the group"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Rule":{"type":"string","deprecated":false}},"required":["Id"]},"Counterparty.SWIFTFields":{"properties":{"ConfirmationFieldType":{"type":"string","deprecated":false},"Field72Line1":{"type":"string","deprecated":false},"Field72Line2":{"type":"string","deprecated":false},"Field72Line3":{"type":"string","deprecated":false},"Field72Line4":{"type":"string","deprecated":false},"Field72Line5":{"type":"string","deprecated":false},"Field72Line6":{"type":"string","deprecated":false},"Field83FormatOption":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - A, 1 - J","enum":[0,1]},"Field83Line1":{"type":"string","deprecated":false},"Field83Line2":{"type":"string","deprecated":false},"Field83Line3":{"type":"string","deprecated":false},"Field83Line4":{"type":"string","deprecated":false},"Field83Line5":{"type":"string","deprecated":false},"Field87FormatOption":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - A, 1 - J","enum":[0,1]},"Field87Line1":{"type":"string","deprecated":false},"Field87Line2":{"type":"string","deprecated":false},"Field87Line3":{"type":"string","deprecated":false},"Field87Line4":{"type":"string","deprecated":false},"Field87Line5":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"}},"required":["ConfirmationFieldType"]},"Country":{"properties":{"Alpha2":{"type":"string","deprecated":false,"description":"ISO 3166-1 alpha-2 code"},"Alpha3":{"type":"string","deprecated":false,"description":"ISO 3166-1 alpha-3 code"},"Calendar":{"type":"string","deprecated":false,"description":"Calendar for country."},"Currency":{"type":"string","deprecated":false,"description":"The main currency of this country."},"Description":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"If defined during creation, the legacy Id of an undefined type. The internal RDX Id otherwise."},"Name":{"type":"string","deprecated":false},"NumericCode":{"type":"string","deprecated":false,"description":"ISO 3166-1 numeric code"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SEPA":{"type":"boolean","deprecated":false,"description":"Is this country a member of the 'Single Euro Payments Area' (SEPA)?"}}},"CommodityStrategy":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the index. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"Description":{"type":"string","deprecated":false,"description":"Description or long name of the strategy"},"Id":{"type":"string","deprecated":false,"description":"Identifier of the strategy"},"Name":{"type":"string","deprecated":false,"description":"Name or short name of the strategy"},"Reporting":{"type":"boolean","deprecated":false,"description":"Strategy is only used for reporting"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Type":{"type":"string","deprecated":false,"description":"Classification of the strategy according to the configurable strategy type"}},"required":["Name"]},"BunkerGrade":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the bunker grade. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"Id":{"type":"string","deprecated":false,"description":"Bunker grade identifier"},"MTToCO2":{"deprecated":false,"description":"Amount of CO2 generated per MT consumed"},"Name":{"type":"string","deprecated":false,"description":"Bunker grade name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"AttachmentBase":{"properties":{"Attachments":{"properties":{"Attachment":{"type":"string","format":"binary","deprecated":false},"Category":{"type":"string","deprecated":false},"Confirmation":{"type":"boolean","deprecated":false},"CreatedBy":{"type":"string","deprecated":false},"CreatedOn":{"format":"date-time","deprecated":false},"Description":{"type":"string","deprecated":false},"DocType":{"type":"string","deprecated":false},"Document":{"type":"boolean","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Attachment"},"ModifiedBy":{"type":"string","deprecated":false},"ModifiedOn":{"format":"date-time","deprecated":false},"Notification":{"type":"boolean","deprecated":false},"Type":{"type":"string","deprecated":false}}},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Attachment base"},"Name":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false}}},"Counterparty.DepositoryCode":{"properties":{"Code":{"type":"string","deprecated":false},"Format":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Depository code. If not provided while creating Depository code the id is internally generated. This field cannot be edited."}},"required":["Format","Code"]},"AcurisPrimeIndustry":{"properties":{"Code":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"Name":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Code","Name"]},"Counterparty.BusinessUnitSubEntity":{"properties":{"BusinessUnit":{"type":"string","deprecated":false},"Currency":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Business Unit Relation. If not provided while creating Business Unit Relation the id is internally generated. This field cannot be edited."}},"required":["BusinessUnit"]},"CounterpartySubtype":{"properties":{"Description":{"type":"string","deprecated":false,"description":"A meaningful Counterparty Subtype description"},"Id":{"type":"string","deprecated":false,"description":"Counterparty Subtype Identifier"},"Name":{"type":"string","deprecated":false,"description":"Counterparty Subtype Name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"BookSubtype":{"properties":{"Description":{"type":"string","deprecated":false,"description":"A meaningful Book Subtype description"},"Id":{"type":"string","deprecated":false,"description":"Book Subtype Identifier"},"Name":{"type":"string","deprecated":false,"description":"Book Subtype Name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"Counterparty.Contact":{"properties":{"ContactTypeId":{"type":"string","deprecated":false,"description":"Classification of the contact according to the configurable contact types"},"Description":{"type":"string","deprecated":false,"description":"Description of the contact"},"Email":{"type":"string","deprecated":false,"description":"Main email address of the contact"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Fax":{"type":"string","deprecated":false,"description":"Main fax number of the contact"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Contact. If not provided while creating Contact the id is internally generated. This field cannot be edited."},"Mobile":{"type":"string","deprecated":false,"description":"Mobile phone number of the contact."},"Name":{"type":"string","deprecated":false,"description":"Name of the contact"},"NamePrefix":{"type":"string","deprecated":false,"description":"Prefix to apply to the contact name."},"Other":{"type":"string","deprecated":false,"description":"Free use text fields for comments, remarks etc"},"Phone":{"type":"string","deprecated":false,"description":"Main phone number of the contact"},"Signature":{"type":"string","format":"binary","deprecated":false,"description":"The image of the signature of the person identified by this contact"},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."}},"required":["Name"]},"LegalEntity.AnalyticsBusinessVersion":{"properties":{"Comment":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"LegalName":{"type":"string","deprecated":false},"SourceURL":{"type":"string","deprecated":false},"ValidTo":{"type":"string","deprecated":false},"VersionId":{"type":"integer","format":"int32","deprecated":false}},"required":["VersionId","LegalName"]},"CounterpartyStatusCMD":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Counterparty status identifier"},"Name":{"type":"string","deprecated":false,"description":"Full name of counterparty status"},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"Counterparty.Farm":{"properties":{"Description":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Farm. If not provided while creating Farm the id is internally generated. This field cannot be edited."},"Name":{"type":"string","deprecated":false},"SplitDefaults":{"properties":{"Counterparty":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Split. If not provided while creating Split the id is internally generated. This field cannot be edited."},"Percentage":{"deprecated":false}},"required":["Counterparty","Percentage"]}},"required":["Name"]},"SalesRep":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the Sales representative. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"AssistantFirstName":{"type":"string","deprecated":false},"AssistantLastName":{"type":"string","deprecated":false},"CodeMappingJsonFmt":{"type":"string","deprecated":false,"description":"List of all available code type values. DEPRECATED: Use native CT_ fields instead."},"FirstName":{"type":"string","deprecated":false,"description":"Salesperson first name"},"FullName":{"type":"string","deprecated":false,"description":"Salesperson first and last name (read only)"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Sales representative. If not provided while creating Sales representative the id is internally generated. This field cannot be edited."},"LastName":{"type":"string","deprecated":false,"description":"Salesperson last name"},"Number":{"type":"string","deprecated":false,"description":"Sales representative number"},"PartOfGroups":{"type":"array","deprecated":false,"items":{"type":"string"}},"Phone":{"type":"string","deprecated":false,"description":"Sales representative's phone number"},"RevisionId":{"type":"integer","format":"int32","deprecated":false}}},"NAICS2017Industry":{"properties":{"Code":{"type":"string","deprecated":false},"DealogicId":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"Name":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["DealogicId","Code","Name"]},"CommodityStrategyHierarchy.Level":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Level. If not provided while creating Level the id is internally generated. This field cannot be edited."},"Level":{"type":"integer","format":"int32","deprecated":false},"Name":{"type":"string","deprecated":false,"description":"Level Name"}}},"LaytimeTerm":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the Laytime term. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"CodeMappingJsonFmt":{"type":"string","deprecated":false,"description":"List of all available code type values. DEPRECATED: Use native CT_ fields instead."},"Days":{"deprecated":false},"DaysFrom":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 1 - Monday, 2 - Tuesday, 3 - Wednesday, 4 - Thursday, 5 - Friday, 6 - Saturday, 7 - Sunday","enum":[1,2,3,4,5,6,7]},"DaysTo":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 1 - Monday, 2 - Tuesday, 3 - Wednesday, 4 - Thursday, 5 - Friday, 6 - Saturday, 7 - Sunday","enum":[1,2,3,4,5,6,7]},"Description":{"type":"string","deprecated":false,"description":"Description of the Laytime term"},"Id":{"type":"string","deprecated":false,"description":"Laytime term identifier"},"Name":{"type":"string","deprecated":false,"description":"Name of the Laytime term"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"TimeFrom":{"format":"time","deprecated":false},"TimeTo":{"format":"time","deprecated":false}},"required":["TimeFrom","TimeTo","DaysTo","DaysFrom","Name"]},"VesselTradingStatus":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Trading status identifier"},"Name":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Trading":{"type":"boolean","deprecated":false,"description":"Vessel is trading and can be used in applications"}},"required":["Name"]},"Calendar":{"properties":{"Description":{"type":"string","deprecated":false,"description":"Description of the Calendar."},"Friday":{"type":"boolean","deprecated":false,"description":"Indicates if Friday is a working day or not for this calendar"},"Holidays":{"properties":{"Description":{"type":"string","deprecated":false,"description":"Description of the Holiday."},"EventDate":{"format":"date","deprecated":false,"description":"Date of the Holiday."},"Id":{"type":"string","deprecated":false,"description":"Reference ID of the Holiday."}},"required":["EventDate"]},"Id":{"type":"string","deprecated":false,"description":"Reference ID of the Calendar."},"Monday":{"type":"boolean","deprecated":false,"description":"Indicates if Monday is a working day or not for this calendar"},"Name":{"type":"string","deprecated":false,"description":"Unique name of the Calendar."},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Saturday":{"type":"boolean","deprecated":false,"description":"Indicates if Saturday is a working day or not for this calendar. By default, Saturday is not a working day"},"Sunday":{"type":"boolean","deprecated":false,"description":"Indicates if Sunday is a working day or not for this calendar. By default, Sunday is not a working day"},"Thursday":{"type":"boolean","deprecated":false,"description":"Indicates if Thursday is a working day or not for this calendar"},"Tuesday":{"type":"boolean","deprecated":false,"description":"Indicates if Tuesday is a working day or not for this calendar"},"Wednesday":{"type":"boolean","deprecated":false,"description":"Indicates if Wednesday is a working day or not for this calendar"}},"required":["Name"]},"CounterpartyHierarchy":{"properties":{"Deleted":{"type":"boolean","deprecated":false,"description":"Hierarchy has been deleted and will be removed after the next restart"},"Depth":{"type":"string","deprecated":false},"Description":{"type":"string","deprecated":false,"description":"Human readable description for the hierarchy"},"EnforcedType":{"type":"string","deprecated":false},"EntityClassStr":{"type":"string","deprecated":true,"description":"Use the native API instead, which has different entity types per class."},"Id":{"type":"string","deprecated":false,"description":"Identifier of the Hierarchy used as record ID, within record field names and within other technical APIs. Only alpha-numeric characters and underscores are allowed."},"IsDefault":{"type":"boolean","deprecated":true,"description":"Not needed as Counterparties and Books don't have to belong to a hierarchy anymore."},"LevelDefault":{"properties":{"CustomField":{"type":"string","deprecated":false,"description":"Hidden field to keep reference of custom field entity."},"DefaultValue":{"properties":{"DefaultValue":{"type":"string","deprecated":false,"description":"The value of the default"},"Id":{"type":"string","deprecated":false,"description":"LevelDefault Id"},"Level":{"type":"integer","format":"int32","deprecated":false,"description":"The level in the hierarchy that the entity must occupy to trigger the default"}},"required":["Level"]},"FieldName":{"type":"string","deprecated":false,"description":"Name of field to default"},"Id":{"type":"string","deprecated":false,"description":"LevelDefault Id"}},"required":["FieldName"]},"Levels":{"properties":{"EnforcedSubtype":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Counterparty level. If not provided while creating Counterparty level the id is internally generated. This field cannot be edited."},"Level":{"type":"integer","format":"int32","deprecated":false},"Name":{"type":"string","deprecated":false,"description":"Level Name"}}},"RequiresRestart":{"type":"boolean","deprecated":false,"description":"Configuration entity has recently been added and requires a restart."},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Id"]},"FreightCharge":{"properties":{"AccountType":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Detail, 1 - Group","enum":[0,1]},"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the Charge. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"Code":{"type":"integer","format":"int32","deprecated":false},"DisplayName":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Charge"},"Name":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SignIndicator":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - +1, 1 - -1","enum":[0,1]},"TotalTo":{"type":"string","deprecated":false},"Unit":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Lumpsum, 1 - Unit","enum":[0,1]},"VoyageTypes":{"type":"array","deprecated":false,"items":{"type":"integer","format":"int32","description":"null. Possible values: 0 - Cargo, 1 - TC, 2 - Voyage, 3 - Port, 4 - Freight, 5 - Hire, 6 - Owner","enum":[0,1,2,3,4,5,6]}}},"required":["VoyageTypes","Unit","AccountType","Code","Name"]},"VesselClass":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Vessel Class identifier"},"MaxSize":{"type":"integer","format":"int32","deprecated":false},"MinSize":{"type":"integer","format":"int32","deprecated":false},"Name":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"VesselType":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Dry, 1 - Tank, 2 - Gas, 3 - Dry/Tank","enum":[0,1,2,3]}},"required":["MinSize","MaxSize","Name"]},"ClearingSystem.ClearingSystemCountryRelation":{"properties":{"ClearingSystemType":{"type":"string","deprecated":false},"Country":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Country relation. If not provided while creating Country relation the id is internally generated. This field cannot be edited."}},"required":["Country","ClearingSystemType"]},"LegalEntity.LegalEntitySynonym":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"Name":{"type":"string","deprecated":false,"description":"Name of the Synonym"}},"required":["Name"]},"AddressType":{"properties":{"Description":{"type":"string","deprecated":false,"description":"A meaningful Address Type description"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Id":{"type":"string","deprecated":false,"description":"Address Type Identifier"},"Name":{"type":"string","deprecated":false,"description":"Address Type Name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."}},"required":["Name"]},"ClearingCodeType":{"properties":{"Description":{"type":"string","deprecated":false,"description":"A meaningful Clearing Code Type description"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Id":{"type":"string","deprecated":false,"description":"Clearing Code Type Identifier"},"Name":{"type":"string","deprecated":false,"description":"Clearing Code Type Name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."}},"required":["Name"]},"Port.PortTerminal":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"AllowedCommodities":{"type":"array","deprecated":false,"items":{"type":"string"}},"Beam":{"deprecated":false},"Default":{"type":"boolean","deprecated":false,"description":"Default terminal"},"Draft":{"deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Terminal identifier"},"LOA":{"deprecated":false},"Latitude":{"deprecated":false},"Longitude":{"deprecated":false},"Name":{"type":"string","deprecated":false,"description":"Terminal name"},"Owner":{"type":"string","deprecated":false},"PilotDistance":{"type":"integer","format":"int32","deprecated":false},"PilotDuration":{"deprecated":false},"Restrictions":{"type":"string","deprecated":false},"SeasonalZone":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Summer, 1 - Winter","enum":[0,1]},"WaterType":{"type":"string","deprecated":false}},"required":["Name"]},"ContactType":{"properties":{"Description":{"type":"string","deprecated":false,"description":"A meaningful Contact Type description"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Id":{"type":"string","deprecated":false,"description":"Contact Type Identifier"},"Name":{"type":"string","deprecated":false,"description":"Contact Type Name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."}},"required":["Name"]},"GICSIndustry":{"properties":{"Code":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"Name":{"type":"string","deprecated":false},"Parent":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Type":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Sector, 1 - Industry group, 2 - Industry, 3 - Sub-Industry","enum":[0,1,2,3]}},"required":["Type","Code","Name"]},"AnalysisCode":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Analysis code"},"Name":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"Counterparty.ClearingCode":{"properties":{"ClearingFormat":{"type":"string","deprecated":false},"ClearingSystem":{"type":"string","deprecated":false},"Code":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Clearing code. If not provided while creating Clearing code the id is internally generated. This field cannot be edited."},"Type":{"type":"string","deprecated":false}},"required":["ClearingFormat","Type","Code","ClearingSystem"]},"Port":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"AlternativeNames":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"Id":{"type":"string","deprecated":false,"description":"Alternative Port name identifier"},"Name":{"type":"string","deprecated":false}},"required":["Name"]},"CO2Zone":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Europe, 1 - Other","enum":[0,1]},"Canal":{"type":"boolean","deprecated":false},"CodeMappingJsonFmt":{"type":"string","deprecated":false,"description":"List of all available code type values. DEPRECATED: Use native CT_ fields instead."},"Country":{"type":"string","deprecated":false},"GeoZoneNumber":{"type":"integer","format":"int32","deprecated":false,"description":"Geo zone"},"IceClass":{"type":"boolean","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Port identifier"},"LSZone":{"type":"string","deprecated":false,"description":"Low Sulphur Zone"},"Latitude":{"deprecated":false},"Longitude":{"deprecated":false},"Name":{"type":"string","deprecated":false,"description":"Full name of the Location"},"OpenLoopScrubberRestricted":{"type":"boolean","deprecated":false},"Remarks":{"type":"string","deprecated":false},"RestrictBallast":{"type":"boolean","deprecated":false},"RestrictLaden":{"type":"boolean","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"RiverLake":{"type":"string","deprecated":false},"Terminals":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"AllowedCommodities":{"type":"array","deprecated":false,"items":{"type":"string"}},"Beam":{"deprecated":false},"Default":{"type":"boolean","deprecated":false,"description":"Default terminal"},"Draft":{"deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Terminal identifier"},"LOA":{"deprecated":false},"Latitude":{"deprecated":false},"Longitude":{"deprecated":false},"Name":{"type":"string","deprecated":false,"description":"Terminal name"},"Owner":{"type":"string","deprecated":false},"PilotDistance":{"type":"integer","format":"int32","deprecated":false},"PilotDuration":{"deprecated":false},"Restrictions":{"type":"string","deprecated":false},"SeasonalZone":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Summer, 1 - Winter","enum":[0,1]},"WaterType":{"type":"string","deprecated":false}},"required":["Name"]},"TimeZone":{"deprecated":false},"TimeZoneGroup":{"type":"string","deprecated":false},"UNCode":{"type":"string","deprecated":false,"description":"UNCode"},"Zones":{"type":"array","deprecated":false,"items":{"type":"string"}}},"required":["TimeZone","Country","GeoZoneNumber","Name"]},"BunkerSpecification":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the bunker grade. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"Id":{"type":"string","deprecated":false,"description":"Bunker specification identifier"},"Name":{"type":"string","deprecated":false,"description":"Bunker specification name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"Counterparty.BankAccount":{"properties":{"ABANumber":{"type":"string","deprecated":false,"description":"ABA routing number for the account"},"AccountName":{"type":"string","deprecated":false,"description":"The account name for this account"},"AccountNumber":{"type":"string","deprecated":false},"Default":{"type":"boolean","deprecated":false,"description":"Default account for the counterparty"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Bank account. If not provided while creating Bank account the id is internally generated. This field cannot be edited."},"Name":{"type":"string","deprecated":false,"description":"Display name of the Bank account"},"Remarks":{"type":"string","deprecated":false,"description":"General remarks"},"SwiftCode":{"type":"string","deprecated":false},"ViaBank":{"type":"string","deprecated":false}},"required":["Name"]},"VesselSpeedDescription":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Speed Description identifier"},"Name":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"IonUser":{"properties":{"BusinessUnitId":{"type":"string","deprecated":false,"description":"The BusinessUnit linked to this user. Mainly used in RIL flow"},"BusinessUnitName":{"type":"string","deprecated":false,"description":"The BusinessUnit 'Name' field linked to this user."},"CodeMappingJsonFmt":{"type":"string","deprecated":false,"description":"List of all available code type values. DEPRECATED: Use native CT_ fields instead."},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the ION user. If not provided while creating ION user the id is internally generated. This field cannot be edited."},"Name":{"type":"string","deprecated":false,"description":"The name of the user. It is taken from the ION platform user 'UserName' field."},"PlatformUserId":{"type":"string","deprecated":false,"description":"Contains the same value as the UserID field of the platform user."},"RCFieldName":{"type":"string","deprecated":false,"description":"The BusinessUnit 'RCFieldName' field linked to this user."},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."}},"required":["Name"]},"ClearingSystem":{"properties":{"Countries":{"properties":{"ClearingSystemType":{"type":"string","deprecated":false},"Country":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Country relation. If not provided while creating Country relation the id is internally generated. This field cannot be edited."}},"required":["Country","ClearingSystemType"]},"Description":{"type":"string","deprecated":false,"description":"A meaningful Clearing System description"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Id":{"type":"string","deprecated":false,"description":"Clearing System Identifier"},"Name":{"type":"string","deprecated":false,"description":"Clearing System Name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."},"SupportedClearingFormats":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of clearing formats associated to this clearing system"}}},"required":["Name"]},"Feed":{"properties":{"Currency":{"type":"string","deprecated":false},"FeedSourceType":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Plain, 1 - Golden","enum":[0,1]},"FeedType":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 1 - Chain, 2 - Pattern, 3 - Queue","enum":[1,2,3]},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Feed"},"Name":{"type":"string","deprecated":false},"RequiresRestart":{"type":"boolean","deprecated":false,"description":"Configuration entity has recently been added and requires a restart."},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Source":{"type":"string","deprecated":false},"TriggerType":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 1 - None, 2 - Service, 3 - xRS Context, 4 - CMStatus","enum":[1,2,3,4]},"TriggerValue":{"type":"string","deprecated":false}},"required":["FeedType","Name"]},"Commodity.UOMConversion":{"properties":{"Conversion":{"deprecated":false,"description":"Conversion factor between the configured units of measure"},"DisplayName":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the UOM conversion. If not provided while creating UOM conversion the id is internally generated. This field cannot be edited."},"UOMFrom":{"type":"string","deprecated":false,"description":"Unit of measure to convert from"},"UOMTo":{"type":"string","deprecated":false,"description":"Unit of measure to convert to"}},"required":["UOMFrom","UOMTo","Conversion"]},"Vessel.VesselSpeedAndConsumption":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"BallastConsumption":{"deprecated":false,"description":"Consumption of fuel per day while in ballast (MT)"},"BallastRPM":{"type":"integer","format":"int32","deprecated":false,"description":"RPM at ballast speed"},"BallastSpeed":{"deprecated":false,"description":"Ballast speed of vessel in (KN)"},"Default":{"type":"boolean","deprecated":false,"description":"Default instance"},"Id":{"type":"string","deprecated":false,"description":"Speed and consumption identifier"},"LadenConsumption":{"deprecated":false,"description":"Consumption of fuel per day while laden (MT)"},"LadenRPM":{"type":"integer","format":"int32","deprecated":false,"description":"RPM at Laden speed"},"LadenSpeed":{"deprecated":false,"description":"Laden speed of vessel in (KN)"},"Name":{"type":"string","deprecated":false,"description":"Name to identify Speed and Consumption"}},"required":["Name"]},"UnitOfMeasure":{"properties":{"CodeMappingJsonFmt":{"type":"string","deprecated":false,"description":"List of all available code type values. DEPRECATED: Use native CT_ fields instead."},"Id":{"type":"string","deprecated":false,"description":"Unit of meassure identifier"},"Name":{"type":"string","deprecated":false,"description":"Unit of meassure name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"UOMType":{"type":"string","deprecated":false,"description":"Type of unit of measure"},"VesselTypeDry":{"type":"boolean","deprecated":false,"description":"Vessel type 'Dry' supports the unit of meassure"},"VesselTypeGas":{"type":"boolean","deprecated":false,"description":"Vessel type 'Gas' supports the unit of meassure"},"VesselTypeTank":{"type":"boolean","deprecated":false,"description":"Vessel type 'Tank' supports the unit of meassure"}},"required":["Name"]},"Grade":{"properties":{"Description":{"type":"string","deprecated":false,"description":"Description or long name of the Grade."},"Id":{"type":"string","deprecated":false,"description":"Reference ID of the Grade."},"Name":{"type":"string","deprecated":false,"description":"Name or short name of the Grade."},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Standard":{"type":"string","deprecated":false,"description":"Department that defines the grades acceptable to use for the Commodity"}},"required":["Name"]},"BondGroup":{"properties":{"Description":{"type":"string","deprecated":false,"description":"Description of the group used"},"EntitlementGroup":{"type":"boolean","deprecated":false},"Exclude":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of entities to be excluded from the group in spite of falling into the rule criteria (JSON array)"}},"GroupInclude":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of groups to be included (JSON array)"}},"Id":{"type":"string","deprecated":false,"description":"Identifier of the Group used as record/chain ID and within other technical APIs. Only alpha-numeric characters and underscores are allowed."},"Include":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of entities to be included in the group in spite of not falling into the rule criteria (JSON array)"}},"Name":{"type":"string","deprecated":false,"description":"Name of the group"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Rule":{"type":"string","deprecated":false}},"required":["Id"]},"FreightIndex":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the index. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"Calculated":{"type":"boolean","deprecated":false,"description":"Rate is calculated based on a formula"},"Calendar":{"type":"string","deprecated":false,"description":"Trading calendar of the index"},"CommissionPercent":{"deprecated":false},"DefaultPrecission":{"type":"integer","format":"int32","deprecated":false},"Description":{"type":"string","deprecated":false,"description":"Description of the index"},"DueDateCalendar":{"type":"string","deprecated":false},"Exchange":{"type":"string","deprecated":false},"Formula":{"type":"string","deprecated":false,"description":"Rate formula"},"ForwardRate":{"type":"boolean","deprecated":false,"description":"Forward rates available"},"Id":{"type":"string","deprecated":false,"description":"Identifier of the index"},"LinkedEstimate":{"type":"string","deprecated":false},"MTPerDay":{"deprecated":false},"Name":{"type":"string","deprecated":false,"description":"Name of the index"},"PeriodsToRemain":{"type":"integer","format":"int32","deprecated":false},"RateCurrency":{"type":"string","deprecated":false},"RateValueType":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Worldscale, 1 - Day, 2 - MT, 3 - Volatiltiy, 4 - Lots, 5 - Lumpsum, 6 - BBL, 7 - Box","enum":[0,1,2,3,4,5,6,7]},"Remarks":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SizeClass":{"type":"string","deprecated":false},"StandardVoyageDuration":{"deprecated":false},"StandardVoyageQuantity":{"type":"integer","format":"int32","deprecated":false},"TradingPlace":{"type":"string","deprecated":false},"Type":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Tanker, 1 - Dry, 2 - Bunker, 3 - Volatiltiy, 4 - Volume","enum":[0,1,2,3,4]},"VolatilityPercent":{"deprecated":false},"VolatilityRoute":{"type":"string","deprecated":false}},"required":["RateCurrency","Name"]},"Vessel.ShipsGear":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Ships Gear identifier"},"MaxWeight":{"type":"integer","format":"int32","deprecated":false,"description":"Max weight crane can lift in MT"},"Name":{"type":"string","deprecated":false}},"required":["Name"]},"ContractGroup":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the contract group. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"Id":{"type":"string","deprecated":false,"description":"Contract group identifier"},"Name":{"type":"string","deprecated":false,"description":"Contract group name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"ConfirmationPlatform":{"properties":{"BIC":{"type":"string","deprecated":false,"description":"BIC for the Confirmation platform."},"Closed":{"type":"boolean","deprecated":false,"description":"When true, this Confirmation platform is not active and will not appear in drop-downs."},"Description":{"type":"string","deprecated":false,"description":"Description or long name of the Confirmation platform."},"Id":{"type":"string","deprecated":false,"description":"Reference ID of the Confirmation platform."},"Name":{"type":"string","deprecated":false,"description":"Name or short name of the Confirmation platform."},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"BookType":{"properties":{"Description":{"type":"string","deprecated":false,"description":"A meaningful Book Type description"},"Id":{"type":"string","deprecated":false,"description":"Book Type Identifier"},"Name":{"type":"string","deprecated":false,"description":"Book Type Name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"Packaging":{"properties":{"Description":{"type":"string","deprecated":false,"description":"Description or long name of the Packaging."},"Id":{"type":"string","deprecated":false,"description":"Reference ID of the Packaging."},"Name":{"type":"string","deprecated":false,"description":"Name or short name of the Packaging."},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"EconomicArea":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Economic area identifier"},"Name":{"type":"string","deprecated":false,"description":"Full name of the economic area"},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"Vessel.BunkerTank":{"properties":{"Capacity":{"type":"integer","format":"int32","deprecated":false},"CapacityUnit":{"type":"string","deprecated":false,"description":"Unit of measure"},"Id":{"type":"string","deprecated":false,"description":"Bunker Tank identifier"},"Name":{"type":"string","deprecated":false}},"required":["Name"]},"OwnershipType":{"properties":{"Code":{"type":"string","deprecated":false},"DealogicId":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"Name":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["DealogicId","Code","Name"]},"EntityConfig.FieldConfig":{"properties":{"Feed":{"type":"string","deprecated":false},"FeedField":{"type":"string","deprecated":false},"FieldConfigIdentifier":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Field config. If not provided while creating Field config the id is internally generated. This field cannot be edited."},"RDXFieldName":{"type":"string","deprecated":false},"ReferenceCreation":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 1 - No, 2 - Auto","enum":[1,2]},"ReferenceFieldId":{"type":"string","deprecated":false}},"required":["RDXFieldName","Feed"]},"Counterparty.Address":{"properties":{"AddressLine1":{"type":"string","deprecated":false,"description":"Address line 1."},"AddressLine2":{"type":"string","deprecated":false,"description":"Address line 2."},"AddressLine3":{"type":"string","deprecated":false,"description":"Address line 3."},"AddressLine4":{"type":"string","deprecated":false,"description":"Address line 4."},"AddressLine5":{"type":"string","deprecated":false,"description":"Address line 5."},"AddressLine6":{"type":"string","deprecated":false,"description":"(Temp) Address line 6."},"AddressLine7":{"type":"string","deprecated":false,"description":"(Temp) Address line 7."},"AddressTypeId":{"type":"string","deprecated":false},"Area":{"type":"string","deprecated":false,"description":"Specifies the account owner's resident geographical region or area."},"Block":{"type":"string","deprecated":false,"description":"Area of land bounded by streets."},"BuildingName":{"type":"string","deprecated":false,"description":"Name of the building or house."},"BuildingNumber":{"type":"string","deprecated":false,"description":"Number that identifies the position of a building on a street."},"Country":{"type":"string","deprecated":false,"description":"Country of the address"},"CountrySubDivision":{"type":"string","deprecated":false,"description":"Codified representation of the jurisdiction as published in ISO 3166-2."},"CountyIdentification":{"type":"string","deprecated":false,"description":"Identifier of a county."},"Department":{"type":"string","deprecated":false,"description":"Identification of a division of a large organization or building."},"Description":{"type":"string","deprecated":false,"description":"Description of the address"},"DistrictName":{"type":"string","deprecated":false,"description":"Name of a district, i.e. a part of a town or region."},"Email":{"type":"string","deprecated":false,"description":"Email of the address"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Fax":{"type":"string","deprecated":false,"description":"Fax Number of the address"},"Floor":{"type":"string","deprecated":false,"description":"Floor or store within a building."},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Address. If not provided while creating Address the id is internally generated. This field cannot be edited."},"Lot":{"type":"string","deprecated":false,"description":"Identification of an allotment of land."},"Phone":{"type":"string","deprecated":false,"description":"Phone number of the address"},"PostCode":{"type":"string","deprecated":false,"description":"Post code of the address"},"PostOfficeBox":{"type":"string","deprecated":false,"description":"Numbered box in a post office, assigned to a person or organization, where letters are kept until called for."},"Province":{"type":"string","deprecated":false,"description":"A territory governed as an administrative or political unit of a country."},"RegionIdentification":{"type":"string","deprecated":false,"description":"Identification of an administrative division of a country, state, or territory."},"ShortAddressLine1":{"type":"string","deprecated":false,"description":"Short address line 1."},"ShortAddressLine2":{"type":"string","deprecated":false,"description":"Short address line 2."},"ShortAddressLine3":{"type":"string","deprecated":false,"description":"Short address line 3."},"ShortAddressLine4":{"type":"string","deprecated":false,"description":"Short address line 4."},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."},"State":{"type":"string","deprecated":false,"description":"State of the address"},"Street":{"type":"string","deprecated":false,"description":"Street of the address"},"SubDepartment":{"type":"string","deprecated":false,"description":"Identification of a sub-division of a large organization or building."},"Town":{"type":"string","deprecated":false,"description":"Town of the address"}},"required":["AddressTypeId"]},"CommodityStrategyType":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Strategy type identifier"},"Name":{"type":"string","deprecated":false,"description":"Name of the strategy type"},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"CounterpartyGroup":{"properties":{"CounterpartyExclude":{"type":"string","deprecated":true,"description":"Use 'Exclude' instead."},"CounterpartyGroupInclude":{"type":"string","deprecated":true,"description":"Use 'GroupInclude' instead."},"CounterpartyInclude":{"type":"string","deprecated":true,"description":"Use 'Include' instead."},"Description":{"type":"string","deprecated":false,"description":"Description of the group used"},"EntitlementGroup":{"type":"boolean","deprecated":false},"Exclude":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of entities to be excluded from the group in spite of falling into the rule criteria (JSON array)"}},"GroupInclude":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of groups to be included (JSON array)"}},"Id":{"type":"string","deprecated":false,"description":"Identifier of the Group used as record/chain ID and within other technical APIs. Only alpha-numeric characters and underscores are allowed."},"Include":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of entities to be included in the group in spite of not falling into the rule criteria (JSON array)"}},"Name":{"type":"string","deprecated":false,"description":"Name of the group"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Rule":{"type":"string","deprecated":false}},"required":["Id"]},"BookHierarchy.LevelDefault.LevelDefaultValue":{"properties":{"DefaultValue":{"type":"string","deprecated":false,"description":"The value of the default"},"Id":{"type":"string","deprecated":false,"description":"LevelDefault Id"},"Level":{"type":"integer","format":"int32","deprecated":false,"description":"The level in the hierarchy that the entity must occupy to trigger the default"}},"required":["Level"]},"CommodityStrategyHierarchy.LevelDefault":{"properties":{"CustomField":{"type":"string","deprecated":false,"description":"Hidden field to keep reference of custom field entity."},"DefaultValue":{"properties":{"DefaultValue":{"type":"string","deprecated":false,"description":"The value of the default"},"Id":{"type":"string","deprecated":false,"description":"LevelDefault Id"},"Level":{"type":"integer","format":"int32","deprecated":false,"description":"The level in the hierarchy that the entity must occupy to trigger the default"}},"required":["Level"]},"FieldName":{"type":"string","deprecated":false,"description":"Name of field to default"},"Id":{"type":"string","deprecated":false,"description":"LevelDefault Id"}},"required":["FieldName"]},"CounterpartyHierarchy.LevelDefault":{"properties":{"CustomField":{"type":"string","deprecated":false,"description":"Hidden field to keep reference of custom field entity."},"DefaultValue":{"properties":{"DefaultValue":{"type":"string","deprecated":false,"description":"The value of the default"},"Id":{"type":"string","deprecated":false,"description":"LevelDefault Id"},"Level":{"type":"integer","format":"int32","deprecated":false,"description":"The level in the hierarchy that the entity must occupy to trigger the default"}},"required":["Level"]},"FieldName":{"type":"string","deprecated":false,"description":"Name of field to default"},"Id":{"type":"string","deprecated":false,"description":"LevelDefault Id"}},"required":["FieldName"]},"InheritableField":{"properties":{"CodeTypeField":{"type":"string","deprecated":false,"description":"Hidden field to keep reference of codeType field entity."},"CustomField":{"type":"string","deprecated":false,"description":"Hidden field to keep reference of custom field entity."},"EntityClass":{"type":"string","deprecated":false,"description":"Entity Type to which the Inheritable field needs to be added to"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Inheritable field"},"Name":{"type":"string","deprecated":false,"description":"Name of the inheritable field"},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["EntityClass","Name"]},"VesselSubType":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Vessel subtype identifier"},"Name":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"ContractStatus":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the contract status. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"CodeMappingJsonFmt":{"type":"string","deprecated":false,"description":"List of all available code type values. DEPRECATED: Use native CT_ fields instead."},"ContractGroups":{"type":"array","deprecated":false,"items":{"type":"string","description":"Contract groups used to determine the functionality the contract status allows"}},"ControlTypes":{"type":"array","deprecated":false,"items":{"type":"integer","format":"int32","description":"Status controls. Possible values: 1 - Rules, 2 - COA, 3 - Default, 4 - Lock, 5 - Cancelled, 6 - Fixed, 7 - Running, 8 - Redelivered, 9 - Nominated, 10 - Last Voyage, 11 - Loaded, 12 - Discharged, 13 - Started, 14 - Finalized","enum":[1,2,3,4,5,6,7,8,9,10,11,12,13,14]}},"Id":{"type":"string","deprecated":false,"description":"Contract status identifier"},"Name":{"type":"string","deprecated":false,"description":"Contract status name"},"NextStatus":{"type":"array","deprecated":false,"items":{"type":"string","description":"Allowable next status"}},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"Counterparty.Farm.Split":{"properties":{"Counterparty":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Split. If not provided while creating Split the id is internally generated. This field cannot be edited."},"Percentage":{"deprecated":false}},"required":["Counterparty","Percentage"]},"CommodityGroup":{"properties":{"Classification":{"type":"boolean","deprecated":false,"description":"Enable Class for Commodity Group"},"Description":{"type":"string","deprecated":false,"description":"Description of the group used"},"EntitlementGroup":{"type":"boolean","deprecated":false},"Exclude":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of entities to be excluded from the group in spite of falling into the rule criteria (JSON array)"}},"GroupInclude":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of groups to be included (JSON array)"}},"Id":{"type":"string","deprecated":false,"description":"Identifier of the Group used as record/chain ID and within other technical APIs. Only alpha-numeric characters and underscores are allowed."},"Include":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of entities to be included in the group in spite of not falling into the rule criteria (JSON array)"}},"Name":{"type":"string","deprecated":false,"description":"Name of the group"},"Oil":{"type":"boolean","deprecated":false,"description":"Enable Oil for Commodity Group"},"Packaging":{"type":"boolean","deprecated":false,"description":"Enable Packaging for Commodity Group"},"Protein":{"type":"boolean","deprecated":false,"description":"Enable Protein for Commodity Group"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Rule":{"type":"string","deprecated":false}},"required":["Id"]},"FreightPaymentTerm":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the Freight payment term. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"CodeMappingJsonFmt":{"type":"string","deprecated":false,"description":"List of all available code type values. DEPRECATED: Use native CT_ fields instead."},"DaysOfMonth":{"type":"array","deprecated":false,"items":{"type":"integer","format":"int32","description":"One or multiple days of a month [1..31]"}},"Id":{"type":"string","deprecated":false,"description":"Freight payment term identifier"},"Name":{"type":"string","deprecated":false,"description":"Description of Payment term"},"Payment1Event":{"type":"integer","format":"int32","deprecated":false,"description":"1st Payment event. Possible values: 0 - Loading completed, 1 - Before breaking bulk, 2 - Arrival load port, 3 - Departure load port, 4 - Arrival discharge port, 5 - Departure discharge port, 6 - Bill of lading date, 7 - Invoice date, 8 - Discharge completed, 9 - Laytime agreed","enum":[0,1,2,3,4,5,6,7,8,9]},"Payment1Offset":{"type":"integer","format":"int32","deprecated":false,"description":"Payment 1 offset in days"},"Payment1Percent":{"type":"integer","format":"int32","deprecated":false,"description":"1st Payment %"},"Payment1Timing":{"type":"integer","format":"int32","deprecated":false,"description":"Payment is before or after Payment 1 event. Possible values: 0 - Before, 1 - After","enum":[0,1]},"Payment2Event":{"type":"integer","format":"int32","deprecated":false,"description":"2nd Payment event. Possible values: 0 - Loading completed, 1 - Before breaking bulk, 2 - Arrival load port, 3 - Departure load port, 4 - Arrival discharge port, 5 - Departure discharge port, 6 - Bill of lading date, 7 - Invoice date, 8 - Discharge completed, 9 - Laytime agreed","enum":[0,1,2,3,4,5,6,7,8,9]},"Payment2Offset":{"type":"integer","format":"int32","deprecated":false,"description":"Payment 2 offset in days"},"Payment2Percent":{"type":"integer","format":"int32","deprecated":false,"description":"2nd Payment %"},"Payment2Timing":{"type":"integer","format":"int32","deprecated":false,"description":"Payment is before or after Payment 2 event. Possible values: 0 - Before, 1 - After","enum":[0,1]},"Reaccuring":{"type":"integer","format":"int32","deprecated":false,"description":"Reaccuring every X days."},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"TimeCharterType":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Semi monthly, 1 - Every X days, 2 - On X days of month, 3 - Every X months","enum":[0,1,2,3]},"Type":{"type":"integer","format":"int32","deprecated":false,"description":"Type of the freight payment: Voyage charter or Time charter.. Possible values: 0 - Voyage charter, 1 - Time charter","enum":[0,1]}},"required":["Type","Name"]},"Vessel":{"properties":{"A60":{"type":"boolean","deprecated":false,"description":"A60"},"AirDraught":{"deprecated":false,"description":"Maximum air draught of the ship. Air draught is the distance from the surface of the water to the highest point on a ship."},"AuxiliaryConsumptions":{"properties":{"AtSea":{"deprecated":false,"description":"Additional consumption at sea"},"Clean":{"type":"integer","format":"int32","deprecated":false,"description":"Tank Cleaning"},"Discharge":{"deprecated":false,"description":"Tank Discharge Consumption"},"EngineType":{"type":"integer","format":"int32","deprecated":false,"description":"Engine Type. Possible values: 0 - Main, 1 - Aux1, 2 - Aux2, 3 - Aux3","enum":[0,1,2,3]},"Heat":{"type":"integer","format":"int32","deprecated":false,"description":"Tank Heating"},"Id":{"type":"string","deprecated":false,"description":"Auxiliary Consumption identifier"},"Idle":{"deprecated":false,"description":"Idle Consumption"},"Inert":{"type":"integer","format":"int32","deprecated":false,"description":"Tank Inerting"},"Load":{"deprecated":false,"description":"Tank Loading Consumption"},"MaintTemp":{"type":"integer","format":"int32","deprecated":false,"description":"Tank Maintain Temperature"},"Work":{"deprecated":false,"description":"Dry Working Consumption"}},"required":["EngineType"]},"BaleCubic":{"type":"integer","format":"int32","deprecated":false,"description":"Bale capacity of cargo holds"},"BallastCapacity":{"type":"integer","format":"int32","deprecated":false,"description":"Ballast capasity"},"BallastTanks":{"type":"integer","format":"int32","deprecated":false,"description":"Double of Ballast tanks"},"Beam":{"deprecated":false,"description":"Beam (M)"},"BowThrusters":{"type":"integer","format":"int32","deprecated":false,"description":"Number of bow thrusters"},"BuiltDate":{"format":"date","deprecated":false,"description":"Date vessel was delivered to owner"},"BunkerTanks":{"properties":{"Capacity":{"type":"integer","format":"int32","deprecated":false},"CapacityUnit":{"type":"string","deprecated":false,"description":"Unit of measure"},"Id":{"type":"string","deprecated":false,"description":"Bunker Tank identifier"},"Name":{"type":"string","deprecated":false}},"required":["Name"]},"CO2":{"type":"boolean","deprecated":false},"CallSign":{"type":"string","deprecated":false,"description":"Call Sign of vessel"},"Cars":{"type":"integer","format":"int32","deprecated":false,"description":"Car carrying capacity"},"Classification":{"type":"string","deprecated":false,"description":"Ship classification society"},"CodeMappingJsonFmt":{"type":"string","deprecated":false,"description":"List of all available code type values. DEPRECATED: Use native CT_ fields instead."},"Constants":{"type":"integer","format":"int32","deprecated":false,"description":"Standard constant value (MT)"},"CountryOfBuilder":{"type":"string","deprecated":false,"description":"Country of Builder"},"Cranes":{"type":"integer","format":"int32","deprecated":false,"description":"No. of Cranes"},"Deadweight":{"type":"integer","format":"int32","deprecated":false,"description":"Dead weight"},"Description":{"type":"string","deprecated":false},"Displacement":{"type":"integer","format":"int32","deprecated":false,"description":"The amount of water (in tons) displaced by the ship (light ship)"},"DoubleHull":{"type":"boolean","deprecated":false},"Draft":{"deprecated":false,"description":"Maximum draft of the ship. Draft is the distance between the waterline and the bottom of the hull (keel)."},"EEXI":{"deprecated":false,"description":"Energy Efficiency Existing Ship Index"},"Emissions":{"properties":{"CIIRating":{"type":"integer","format":"int32","deprecated":false,"description":"Carbon Intensity Indicator (CII) rating grade YTD. Possible values: 0 - A, 1 - B, 2 - C, 3 - D, 4 - E","enum":[0,1,2,3,4]},"CIIValue":{"deprecated":false,"description":"Carbon Intensity Indicator (CII) rating value"},"CIIValueYTD":{"deprecated":false,"description":"Carbon Intensity Indicator (CII) rating value current YTD"},"CO2YTD":{"deprecated":false,"description":"CO2 consumed YTD"},"DistanceYTD":{"deprecated":false,"description":"Distance travelled YTD"},"EEXI":{"deprecated":false,"description":"Energy Efficiency Existing Ship Index"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Emission"},"MTYTD":{"deprecated":false,"description":"MT cargo YTD"},"RequiredCIIValue":{"deprecated":false,"description":"Required Carbon Intensity Indicator (CII) rating value"},"RequiredEEXI":{"deprecated":false,"description":"Required Energy Efficiency Existing Ship Index"},"Year":{"type":"integer","format":"int32","deprecated":false}},"required":["Year"]},"EngineBuilder":{"type":"string","deprecated":false,"description":"Engine Builder"},"EngineMake":{"type":"string","deprecated":false,"description":"Engine designer"},"EngineModel":{"type":"string","deprecated":false},"Engines":{"type":"integer","format":"int32","deprecated":false,"description":"Double of engines"},"Flag":{"type":"string","deprecated":false},"FreshWater":{"type":"integer","format":"int32","deprecated":false,"description":"Fresh water on board (MT)"},"GasCubic":{"type":"integer","format":"int32","deprecated":false,"description":"The gas cubic capacity of the cargo tanks when filled to 100% of capacity"},"Gear":{"type":"boolean","deprecated":false,"description":"Is ship geared"},"GrainCubic":{"type":"integer","format":"int32","deprecated":false,"description":"Cubic capacity of cargo holds for grain (and other loose dry commodities)"},"GrossTonnage":{"type":"integer","format":"int32","deprecated":false},"Holds":{"properties":{"Coating":{"type":"string","deprecated":false},"HatchCenterDistance":{"deprecated":false},"HatchDimensionX":{"type":"integer","format":"int32","deprecated":false},"HatchDimensionY":{"type":"integer","format":"int32","deprecated":false},"HatchType":{"type":"string","deprecated":false},"Hatches":{"type":"integer","format":"int32","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Hold identifier"},"Name":{"type":"string","deprecated":false}},"required":["Name"]},"HullNumber":{"type":"string","deprecated":false,"description":"The Hull Identification Number (HIN) is a unique 12-digit number assigned by the manufacturer to vessels built after 1972."},"IMO":{"type":"integer","format":"int32","deprecated":false,"description":"International Maritime Organization number"},"IceClassID":{"type":"string","deprecated":false},"IceClassed":{"type":"boolean","deprecated":false,"description":"Indicates if the vessel ice classed (Yes/No)"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Vessel. If not provided while creating Vessel the id is internally generated. This field cannot be edited."},"KTM":{"deprecated":false,"description":"Keel To Mast of the ship."},"KeelLaid":{"format":"date","deprecated":false},"LBP":{"deprecated":false,"description":"Length betweeen perpendiculars"},"LOA":{"deprecated":false,"description":"Length Over All of the ship."},"LaneMeters":{"type":"integer","format":"int32","deprecated":false,"description":"Lane meter capacity each vehicle deck"},"LastNameChange":{"format":"date","deprecated":false,"description":"Vessel name date (for history of name changes, etc.)"},"LaunchDate":{"format":"date","deprecated":false},"LiquidCubic":{"type":"integer","format":"int32","deprecated":false,"description":"The liquid cubic capacity of the cargo tanks when filled to 98% of capacity"},"MMSI":{"type":"string","deprecated":false,"description":"Maritime Mobile Service Identity"},"MaxOutput":{"type":"string","deprecated":false,"description":"Maximum continuous output (power unit, e.g. KW)"},"MaxOutputPower":{"deprecated":false,"description":"Maximum continuous output (power)"},"MaxOutputRPM":{"deprecated":false,"description":"Maximum continuous output RPM"},"MaxWorkingLoad":{"type":"integer","format":"int32","deprecated":false,"description":"Max Working Load"},"MoldedDepth":{"deprecated":false},"Name":{"type":"string","deprecated":false,"description":"Ship Name"},"NameHistory":{"properties":{"Classification":{"type":"string","deprecated":false,"description":"Previous vessel classification society"},"DateOfChange":{"format":"date-time","deprecated":false,"description":"Date vessel stopped using name"},"Flag":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Vessel history"},"MMSI":{"type":"string","deprecated":false,"description":"Maritime Mobile Service Identity"},"Name":{"type":"string","deprecated":false,"description":"Previous vessel name"},"PortOfRegistry":{"type":"string","deprecated":false},"RegisteredOwner":{"type":"string","deprecated":false,"description":"Previously registered owner of the vessel"}},"required":["Name"]},"NetTonnage":{"type":"integer","format":"int32","deprecated":false,"description":"Vessel net tonnage"},"NumberOfHolds":{"type":"integer","format":"int32","deprecated":false},"PartOfGroups":{"type":"array","deprecated":false,"items":{"type":"string"}},"PortOfRegistry":{"type":"string","deprecated":false},"PropellerType":{"type":"string","deprecated":false},"Propellers":{"type":"integer","format":"int32","deprecated":false,"description":"Double of propellers"},"PropulsionType":{"type":"string","deprecated":false,"description":"Propulsion type code (e.g. Motor, Gas Turbine)"},"Range":{"type":"integer","format":"int32","deprecated":false,"description":"Range of the vessel NM assuming full fuel tanks [NM]"},"ReeferCubic":{"type":"integer","format":"int32","deprecated":false,"description":"Cubic meter capacity of the refrigerated cargo space"},"RegisteredOwner":{"type":"string","deprecated":false,"description":"Registered owner of the vessel"},"RequiredEEXI":{"deprecated":false,"description":"Required Energy Efficiency Existing Ship Index"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SBT":{"type":"boolean","deprecated":false},"ScrappedDate":{"format":"date","deprecated":false,"description":"Date vessel was scrapped or destroyed"},"ScrubberType":{"type":"integer","format":"int32","deprecated":false,"description":"Type of scrubber. Possible values: 0 - Unknown, 1 - None, 2 - Hybrid, 3 - Closed Loop, 4 - Open Loop, 5 - Open Loop (Clean)","enum":[0,1,2,3,4,5]},"SelfUnloading":{"type":"boolean","deprecated":false,"description":"Is vessel self-unloading"},"ShipBuilder":{"type":"string","deprecated":false,"description":"Full name of ship builder"},"ShipsGears":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Ships Gear identifier"},"MaxWeight":{"type":"integer","format":"int32","deprecated":false,"description":"Max weight crane can lift in MT"},"Name":{"type":"string","deprecated":false}},"required":["Name"]},"Slops":{"type":"integer","format":"int32","deprecated":false,"description":"Slops 98 %"},"SpeedAndConsumptions":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"BallastConsumption":{"deprecated":false,"description":"Consumption of fuel per day while in ballast (MT)"},"BallastRPM":{"type":"integer","format":"int32","deprecated":false,"description":"RPM at ballast speed"},"BallastSpeed":{"deprecated":false,"description":"Ballast speed of vessel in (KN)"},"Default":{"type":"boolean","deprecated":false,"description":"Default instance"},"Id":{"type":"string","deprecated":false,"description":"Speed and consumption identifier"},"LadenConsumption":{"deprecated":false,"description":"Consumption of fuel per day while laden (MT)"},"LadenRPM":{"type":"integer","format":"int32","deprecated":false,"description":"RPM at Laden speed"},"LadenSpeed":{"deprecated":false,"description":"Laden speed of vessel in (KN)"},"Name":{"type":"string","deprecated":false,"description":"Name to identify Speed and Consumption"}},"required":["Name"]},"SternThrusters":{"type":"integer","format":"int32","deprecated":false,"description":"Number of stern thrusters"},"TEU":{"type":"integer","format":"int32","deprecated":false,"description":"Twentyfoot Equivalent Unit (measurement of container carrying capacity)"},"TPC":{"deprecated":false,"description":"Tons per Centimeter - how many tons are required to increase the draught by 1 cm - (useful for trying to estimate the volume of cargo onboard)"},"TPCMinus1":{"deprecated":false,"description":"Tons per Centimeter -1"},"TankCount":{"type":"integer","format":"int32","deprecated":false},"TanksCoated":{"type":"boolean","deprecated":false,"description":"Indicated if the vessel tanks are coated (Yes/No)"},"TradingStatus":{"type":"string","deprecated":false},"TropicDeadweight":{"type":"integer","format":"int32","deprecated":false,"description":"Tropic Deadweight"},"TropicDraft":{"deprecated":false,"description":"Tropic Draft"},"VesselClass":{"type":"string","deprecated":false,"description":"Class of vessel"},"VesselImage":{"type":"string","format":"binary","deprecated":false,"description":"Picture of vessel"},"VesselSubtype":{"type":"string","deprecated":false,"description":"Vessel Sub type"},"VesselType":{"type":"integer","format":"int32","deprecated":false,"description":"Vessel Type. Possible values: 0 - Dry, 1 - Tank, 2 - Gas, 3 - Dry/Tank","enum":[0,1,2,3]},"Vettings":{"properties":{"Category":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 1 - Safety score, 2 - GHG, 3 - EVDI, 4 - Inspection outcome","enum":[1,2,3,4]},"Checked":{"format":"date-time","deprecated":false},"Comments":{"type":"string","deprecated":false},"Counterparty":{"type":"string","deprecated":false},"Expiry":{"format":"date","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Auto generated identifier or passed in creation function call"},"Modified":{"format":"date-time","deprecated":false},"Type":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 1 - Rightship, 2 - Oil major, 3 - Other","enum":[1,2,3]},"User":{"type":"string","deprecated":false},"Value":{"type":"string","deprecated":false}}},"WinterDeadweight":{"type":"integer","format":"int32","deprecated":false,"description":"Winter Deadweight"},"WinterDraft":{"deprecated":false,"description":"Winter Draft"}},"required":["Name"]},"Commodity":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the commodity. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"CASNumber":{"type":"string","deprecated":false,"description":"Unique numerical identifier assigned by the Chemical Abstracts Service (CAS)"},"CargoType":{"type":"integer","format":"int32","deprecated":false,"description":"Type of cargo. Possible values: 0 - Unknown, 1 - Dirty, 2 - Clean, 3 - Grain, 4 - Bale, 5 - Ore, 6 - Gas","enum":[0,1,2,3,4,5,6]},"CodeMappingJsonFmt":{"type":"string","deprecated":false,"description":"List of all available code type values. DEPRECATED: Use native CT_ fields instead."},"Conversion":{"properties":{"Conversion":{"deprecated":false,"description":"Conversion factor between the configured units of measure"},"DisplayName":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the UOM conversion. If not provided while creating UOM conversion the id is internally generated. This field cannot be edited."},"UOMFrom":{"type":"string","deprecated":false,"description":"Unit of measure to convert from"},"UOMTo":{"type":"string","deprecated":false,"description":"Unit of measure to convert to"}},"required":["UOMFrom","UOMTo","Conversion"]},"Description":{"type":"string","deprecated":false,"description":"Description of the commodity"},"FlashPoint":{"deprecated":false,"description":"Temperature the commodity ignites in air"},"GradeFactors":{"type":"array","deprecated":false,"items":{"type":"string"}},"Grades":{"type":"array","deprecated":false,"items":{"type":"string"}},"IBCCodeName":{"type":"string","deprecated":false,"description":"International bulk chemical code"},"Id":{"type":"string","deprecated":false,"description":"Commodity identifier"},"MarpolAnnex":{"type":"integer","format":"int32","deprecated":false,"description":"The marpol annex the commodity relates to 1 to 6"},"MarpolPollutionCategory":{"type":"string","deprecated":false,"description":"Marpol pollution catergory"},"MeltingPoint":{"deprecated":false,"description":"Melting temperature"},"Name":{"type":"string","deprecated":false,"description":"Full name of the commodity"},"PartOfGroups":{"type":"array","deprecated":false,"items":{"type":"string"}},"Prewash":{"type":"boolean","deprecated":false,"description":"Do tanks need to be prewashed before loading this cargo"},"Remarks":{"type":"string","deprecated":false,"description":"General Remarks"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"StowageFactor":{"deprecated":false,"description":"Stowage factor or specific gravity of the commodity"},"Temperature":{"deprecated":false,"description":"Temperature required"},"UNNumber":{"type":"string","deprecated":false,"description":"United Nations number of the commodity"},"UOMMass":{"type":"string","deprecated":false,"description":"Unit of measure mass"},"UOMVolume":{"type":"string","deprecated":false,"description":"Unit of measure volume"},"USCoastGuardCompatibility":{"type":"integer","format":"int32","deprecated":false},"VesselType":{"type":"integer","format":"int32","deprecated":false,"description":"Type of vessel. Possible values: 0 - Dry, 1 - Tank, 2 - Gas, 3 - Dry/Tank","enum":[0,1,2,3]},"Viscosity":{"deprecated":false,"description":"Resistance of fluid to flow"}},"required":["Name"]},"DealogicIndustry":{"properties":{"Code":{"type":"string","deprecated":false},"DealogicId":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"Name":{"type":"string","deprecated":false},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["DealogicId","Code","Name"]},"Counterparty":{"properties":{"AccountId":{"type":"string","deprecated":false,"description":"Reference ID of the account."},"AccountType":{"type":"integer","format":"int32","deprecated":false,"description":"Type of account.. Possible values: 0 - Unknown, 1 - Broker, 2 - Retail, 3 - Strip/Recon, 4 - Breakdown, 5 - Intradesk, 6 - In-House, 7 - Entity, 8 - ExecBroker, 9 - ClearingHouse","enum":[0,1,2,3,4,5,6,7,8,9]},"Active":{"type":"integer","format":"int32","deprecated":false,"description":"Activation status of the counterparty. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"Addresses":{"properties":{"AddressLine1":{"type":"string","deprecated":false,"description":"Address line 1."},"AddressLine2":{"type":"string","deprecated":false,"description":"Address line 2."},"AddressLine3":{"type":"string","deprecated":false,"description":"Address line 3."},"AddressLine4":{"type":"string","deprecated":false,"description":"Address line 4."},"AddressLine5":{"type":"string","deprecated":false,"description":"Address line 5."},"AddressLine6":{"type":"string","deprecated":false,"description":"(Temp) Address line 6."},"AddressLine7":{"type":"string","deprecated":false,"description":"(Temp) Address line 7."},"AddressTypeId":{"type":"string","deprecated":false},"Area":{"type":"string","deprecated":false,"description":"Specifies the account owner's resident geographical region or area."},"Block":{"type":"string","deprecated":false,"description":"Area of land bounded by streets."},"BuildingName":{"type":"string","deprecated":false,"description":"Name of the building or house."},"BuildingNumber":{"type":"string","deprecated":false,"description":"Number that identifies the position of a building on a street."},"Country":{"type":"string","deprecated":false,"description":"Country of the address"},"CountrySubDivision":{"type":"string","deprecated":false,"description":"Codified representation of the jurisdiction as published in ISO 3166-2."},"CountyIdentification":{"type":"string","deprecated":false,"description":"Identifier of a county."},"Department":{"type":"string","deprecated":false,"description":"Identification of a division of a large organization or building."},"Description":{"type":"string","deprecated":false,"description":"Description of the address"},"DistrictName":{"type":"string","deprecated":false,"description":"Name of a district, i.e. a part of a town or region."},"Email":{"type":"string","deprecated":false,"description":"Email of the address"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Fax":{"type":"string","deprecated":false,"description":"Fax Number of the address"},"Floor":{"type":"string","deprecated":false,"description":"Floor or store within a building."},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Address. If not provided while creating Address the id is internally generated. This field cannot be edited."},"Lot":{"type":"string","deprecated":false,"description":"Identification of an allotment of land."},"Phone":{"type":"string","deprecated":false,"description":"Phone number of the address"},"PostCode":{"type":"string","deprecated":false,"description":"Post code of the address"},"PostOfficeBox":{"type":"string","deprecated":false,"description":"Numbered box in a post office, assigned to a person or organization, where letters are kept until called for."},"Province":{"type":"string","deprecated":false,"description":"A territory governed as an administrative or political unit of a country."},"RegionIdentification":{"type":"string","deprecated":false,"description":"Identification of an administrative division of a country, state, or territory."},"ShortAddressLine1":{"type":"string","deprecated":false,"description":"Short address line 1."},"ShortAddressLine2":{"type":"string","deprecated":false,"description":"Short address line 2."},"ShortAddressLine3":{"type":"string","deprecated":false,"description":"Short address line 3."},"ShortAddressLine4":{"type":"string","deprecated":false,"description":"Short address line 4."},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."},"State":{"type":"string","deprecated":false,"description":"State of the address"},"Street":{"type":"string","deprecated":false,"description":"Street of the address"},"SubDepartment":{"type":"string","deprecated":false,"description":"Identification of a sub-division of a large organization or building."},"Town":{"type":"string","deprecated":false,"description":"Town of the address"}},"required":["AddressTypeId"]},"BICs":{"properties":{"BIC":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the BIC Type Relation. If not provided while creating BIC Type Relation the id is internally generated. This field cannot be edited."},"Type":{"type":"string","deprecated":false}},"required":["Type","BIC"]},"BankAccounts":{"properties":{"ABANumber":{"type":"string","deprecated":false,"description":"ABA routing number for the account"},"AccountName":{"type":"string","deprecated":false,"description":"The account name for this account"},"AccountNumber":{"type":"string","deprecated":false},"Default":{"type":"boolean","deprecated":false,"description":"Default account for the counterparty"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Bank account. If not provided while creating Bank account the id is internally generated. This field cannot be edited."},"Name":{"type":"string","deprecated":false,"description":"Display name of the Bank account"},"Remarks":{"type":"string","deprecated":false,"description":"General remarks"},"SwiftCode":{"type":"string","deprecated":false},"ViaBank":{"type":"string","deprecated":false}},"required":["Name"]},"BlockId":{"type":"string","deprecated":false,"description":"Associated block counterparty ID."},"BulkConfirmationExpected":{"type":"boolean","deprecated":false,"description":"When true, this counterparty expects to receive bulk confirmations."},"BusinessUnits":{"properties":{"BusinessUnit":{"type":"string","deprecated":false},"Currency":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Business Unit Relation. If not provided while creating Business Unit Relation the id is internally generated. This field cannot be edited."}},"required":["BusinessUnit"]},"CLSParticipantType":{"type":"integer","format":"int32","deprecated":false,"description":"Kind of member the counterparty engages in CLS session.. Possible values: 2 - Settlement, 4 - Third party","enum":[2,4]},"ClearingAgent":{"type":"boolean","deprecated":false,"description":"When true, this counterparty is also a clearing agent."},"ClearingCodes":{"properties":{"ClearingFormat":{"type":"string","deprecated":false},"ClearingSystem":{"type":"string","deprecated":false},"Code":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Clearing code. If not provided while creating Clearing code the id is internally generated. This field cannot be edited."},"Type":{"type":"string","deprecated":false}},"required":["ClearingFormat","Type","Code","ClearingSystem"]},"ClearingFCM":{"type":"boolean","deprecated":false,"description":"When true, this counterparty is also a clearing member firm of one or more exchanges."},"ClearingMatcher":{"type":"string","deprecated":false,"description":"The third party provider that performs matching for clearing eligible trades against the counterparty."},"ClearingMemberGroup":{"type":"string","deprecated":false,"description":"Clearing member group."},"Code":{"type":"string","deprecated":false,"description":"Code or abbreviation of the counterparty"},"CodeMappingJsonFmt":{"type":"string","deprecated":false,"description":"List of all available code type values. DEPRECATED: Use native CT_ fields instead."},"ConfirmationNeeded":{"type":"boolean","deprecated":false,"description":"When true, confirmations should be produced and a confirmation profile should be selected on trades with this counterparty."},"ConfirmationPlatform":{"type":"string","deprecated":false,"description":"Confirmation platform used by the counterparty"},"Contacts":{"properties":{"ContactTypeId":{"type":"string","deprecated":false,"description":"Classification of the contact according to the configurable contact types"},"Description":{"type":"string","deprecated":false,"description":"Description of the contact"},"Email":{"type":"string","deprecated":false,"description":"Main email address of the contact"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Fax":{"type":"string","deprecated":false,"description":"Main fax number of the contact"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Contact. If not provided while creating Contact the id is internally generated. This field cannot be edited."},"Mobile":{"type":"string","deprecated":false,"description":"Mobile phone number of the contact."},"Name":{"type":"string","deprecated":false,"description":"Name of the contact"},"NamePrefix":{"type":"string","deprecated":false,"description":"Prefix to apply to the contact name."},"Other":{"type":"string","deprecated":false,"description":"Free use text fields for comments, remarks etc"},"Phone":{"type":"string","deprecated":false,"description":"Main phone number of the contact"},"Signature":{"type":"string","format":"binary","deprecated":false,"description":"The image of the signature of the person identified by this contact"},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."}},"required":["Name"]},"CounterpartyConfirmationForCLSRequired":{"type":"boolean","deprecated":false,"description":"When true, this counterparty requires a confirmation for CLS trades."},"Country":{"type":"string","deprecated":false,"description":"Country of the counterparty"},"Custodian":{"type":"string","deprecated":false},"CustomerAccountCode":{"type":"string","deprecated":false,"description":"Customer Account Code"},"DateLastReviewed":{"format":"date","deprecated":false,"description":"Date the counterparty data has been reviewed the last time by an authorized user."},"DealerBIC":{"type":"string","deprecated":false,"description":"The Bank Identifier Code, as a 4-character unique identifier for each bank that executed and reported an OTC trade, as required by MiFID."},"DepositoryCodes":{"properties":{"Code":{"type":"string","deprecated":false},"Format":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Depository code. If not provided while creating Depository code the id is internally generated. This field cannot be edited."}},"required":["Format","Code"]},"DvPSettlement":{"type":"boolean","deprecated":false,"description":"When true, this counterparty settles using Delivery versus Payment."},"EconomicArea":{"type":"string","deprecated":false,"description":"Economic are for reporting purposes"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Use 'Subtype' instead."},"EntityType":{"type":"string","deprecated":true,"description":"Use 'Type' instead."},"Farms":{"properties":{"Description":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Farm. If not provided while creating Farm the id is internally generated. This field cannot be edited."},"Name":{"type":"string","deprecated":false},"SplitDefaults":{"properties":{"Counterparty":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Split. If not provided while creating Split the id is internally generated. This field cannot be edited."},"Percentage":{"deprecated":false}},"required":["Counterparty","Percentage"]}},"required":["Name"]},"Field50FormatOption":{"type":"integer","format":"int32","deprecated":false,"description":"Ordering customer format code.. Possible values: 0 - F, 1 - K","enum":[0,1]},"Field50Line1":{"type":"string","deprecated":false,"description":"Ordering customer line 1"},"Field50Line2":{"type":"string","deprecated":false,"description":"Ordering customer line 2"},"Field50Line3":{"type":"string","deprecated":false,"description":"Ordering customer line 3"},"Field50Line4":{"type":"string","deprecated":false,"description":"Ordering customer line 4"},"Field50Line5":{"type":"string","deprecated":false,"description":"Ordering customer line 5"},"FunctionalCurrency":{"type":"string","deprecated":false,"description":"Currency of the counterparty"},"FundManager":{"type":"boolean","deprecated":false,"description":"True when this counterparty is also a fund manager."},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Counterparty. If not provided while creating Counterparty the id is internally generated. This field cannot be edited."},"IndirectOnly":{"type":"boolean","deprecated":false,"description":"When true, a counterparty usually trades indirect but capable of trading direct."},"InvestmentManagers":{"properties":{"Default":{"type":"boolean","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"},"InvestmentManager":{"type":"string","deprecated":false}},"required":["InvestmentManager"]},"LegalEntity":{"type":"string","deprecated":false,"description":"Legal entity identifier of the bank managing the counterparty ('Us')"},"LegalEntityIdentifier":{"type":"string","deprecated":false,"description":"Global identifier of the legal entity (LEI)"},"MultimanagedAccount":{"type":"boolean","deprecated":false,"description":"True when this counterparty is managed by more than one fund manager."},"Name":{"type":"string","deprecated":false,"description":"Full name of the counterparty"},"NotDefaultConfirmProfile":{"type":"boolean","deprecated":false,"description":"When true, a confirmation profile should not be assigned for this counterparty unless it is configured directly on the counterparty."},"ParentCompany":{"type":"string","deprecated":false,"description":"Parent company of the counterparty"},"ParentKey":{"type":"string","deprecated":false,"description":"Parent key."},"PartOfGroups":{"type":"array","deprecated":false,"items":{"type":"string"}},"PrioritySettlement":{"type":"boolean","deprecated":false,"description":"When true, this counterparty's settlements should be processed with priority."},"Remarks":{"type":"string","deprecated":false,"description":"General remarks"},"RequiresInternalTradeMessage":{"type":"boolean","deprecated":false},"ReviewOneOffSSIAttach":{"type":"boolean","deprecated":false,"description":"When true, third party payment counterparty one-off SSIs must be reviewed."},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SSIParent":{"type":"string","deprecated":false},"SWIFTFields":{"properties":{"ConfirmationFieldType":{"type":"string","deprecated":false},"Field72Line1":{"type":"string","deprecated":false},"Field72Line2":{"type":"string","deprecated":false},"Field72Line3":{"type":"string","deprecated":false},"Field72Line4":{"type":"string","deprecated":false},"Field72Line5":{"type":"string","deprecated":false},"Field72Line6":{"type":"string","deprecated":false},"Field83FormatOption":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - A, 1 - J","enum":[0,1]},"Field83Line1":{"type":"string","deprecated":false},"Field83Line2":{"type":"string","deprecated":false},"Field83Line3":{"type":"string","deprecated":false},"Field83Line4":{"type":"string","deprecated":false},"Field83Line5":{"type":"string","deprecated":false},"Field87FormatOption":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - A, 1 - J","enum":[0,1]},"Field87Line1":{"type":"string","deprecated":false},"Field87Line2":{"type":"string","deprecated":false},"Field87Line3":{"type":"string","deprecated":false},"Field87Line4":{"type":"string","deprecated":false},"Field87Line5":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Internal identifier"}},"required":["ConfirmationFieldType"]},"SalesRepresentatives":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of sales representatives associated to this counterparty."}},"ShortName":{"type":"string","deprecated":false,"description":"Short name of the counterparty used for display when full name is too long"},"SkipSettle":{"type":"boolean","deprecated":false,"description":"When true, trades for this counterparty should not settle in the back office."},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."},"SplitComments":{"type":"string","deprecated":false},"SplitDefaults":{"properties":{"Counterparty":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Split. If not provided while creating Split the id is internally generated. This field cannot be edited."},"Percentage":{"deprecated":false}},"required":["Counterparty","Percentage"]},"StatusCMD":{"type":"string","deprecated":false,"description":"Status of the counterparty for commodities"},"StatusStr":{"type":"string","deprecated":false},"Subcustodian":{"type":"string","deprecated":false},"Subtype":{"type":"string","deprecated":false,"description":"Classification of the counterparty according to the configurable counterparty subtype"},"SuppressTBAAmendConfirmations":{"type":"boolean","deprecated":false,"description":"When true, this counterparty should not receive TBA confirmation amendments."},"TBAConfirmation":{"type":"boolean","deprecated":false,"description":"When true, this counterparty expects to receive TBA confirmations."},"TaxCode":{"type":"string","deprecated":false,"description":"Classification of the tax number according to the configurable tax types"},"TaxNumber":{"type":"string","deprecated":false},"ThirdPartyPayments":{"type":"boolean","deprecated":false,"description":"When true, counterparty one-off instructions can be extracted from the counterparty MT300 and saved on a trade automatically (provided SSI data is correct)."},"ThirdPartyProvider":{"type":"string","deprecated":false,"description":"When CLS participant type = Third Party, the identifier of the Third Party Provider. Either the Third party provider identifier or the Third party provider BIC will be populated."},"ThirdPartyProviderBIC":{"type":"string","deprecated":false,"description":"When CLS participant type = Third Party, the BIC of the Third Party Provider. Either the Third party provider identifier or the Third party provider BIC will be populated."},"TrustBank":{"type":"string","deprecated":false},"Type":{"type":"string","deprecated":false,"description":"Classification of the counterparty according to the configurable counterparty type"},"TypeCMD":{"type":"array","deprecated":false,"items":{"type":"string","description":"Type of the counterparty for commodities"}},"VendorAccountCode":{"type":"string","deprecated":false,"description":"Vendor Account Code"},"VerifySignature":{"type":"boolean","deprecated":false,"description":"When true, a captured image to manually compare against signed confirm is required."},"WithholdingTaxExemptionReason":{"type":"string","deprecated":false,"description":"Why this counterparty is exempt from withholding tax."},"WithholdingTaxLiable":{"type":"boolean","deprecated":false,"description":"When true, this counterparty is liable for withholding tax."},"__RESERVED_ALL_CPTYS_HrcParent":{"type":"string","deprecated":true,"description":"To be used by RefData only."}},"required":["ShortName","Name"]},"TaxCode":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Tax code identifier"},"Name":{"type":"string","deprecated":false,"description":"Tax code name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"TaxCode":{"type":"string","deprecated":false},"TaxRate":{"deprecated":false}},"required":["TaxCode","TaxRate","Name"]},"Book.Contact":{"properties":{"ContactTypeId":{"type":"string","deprecated":false,"description":"Classification of the contact according to the configurable contact types"},"Description":{"type":"string","deprecated":false,"description":"Description of the contact"},"Email":{"type":"string","deprecated":false,"description":"Main email address of the contact"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Fax":{"type":"string","deprecated":false,"description":"Main fax number of the contact"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Contact. If not provided while creating Contact the id is internally generated. This field cannot be edited."},"Mobile":{"type":"string","deprecated":false,"description":"Mobile phone number of the contact."},"Name":{"type":"string","deprecated":false,"description":"Name of the contact"},"NamePrefix":{"type":"string","deprecated":false,"description":"Prefix to apply to the contact name."},"Other":{"type":"string","deprecated":false,"description":"Free use text fields for comments, remarks etc"},"Phone":{"type":"string","deprecated":false,"description":"Main phone number of the contact"},"Signature":{"type":"string","format":"binary","deprecated":false,"description":"The image of the signature of the person identified by this contact"},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."}},"required":["Name"]},"EntityConfig":{"properties":{"EntityCategory":{"type":"string","deprecated":false},"EntityClass":{"type":"string","deprecated":false},"FeedConfigs":{"properties":{"ChainName":{"type":"string","deprecated":false},"Feed":{"type":"string","deprecated":false},"FeedIdField":{"type":"string","deprecated":false,"description":"RDX entity field used to map feed data to entity instances"},"FeedSourceType":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Plain, 1 - Golden","enum":[0,1]},"FeedType":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 1 - Chain, 2 - Pattern, 3 - Queue","enum":[1,2,3]},"Filter":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Feed config. If not provided while creating Feed config the id is internally generated. This field cannot be edited."},"QueueFunctionName":{"type":"string","deprecated":false},"QueueParam":{"type":"string","deprecated":false},"TriggerType":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 1 - None, 2 - Service, 3 - xRS Context, 4 - CMStatus","enum":[1,2,3,4]},"TriggerValue":{"type":"string","deprecated":false}},"required":["Feed"]},"FieldConfigs":{"properties":{"Feed":{"type":"string","deprecated":false},"FeedField":{"type":"string","deprecated":false},"FieldConfigIdentifier":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Field config. If not provided while creating Field config the id is internally generated. This field cannot be edited."},"RDXFieldName":{"type":"string","deprecated":false},"ReferenceCreation":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 1 - No, 2 - Auto","enum":[1,2]},"ReferenceFieldId":{"type":"string","deprecated":false}},"required":["RDXFieldName","Feed"]},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Entity config. If not provided while creating Entity config the id is internally generated. This field cannot be edited."},"NumberOfFeeds":{"type":"string","deprecated":false},"NumberOfFields":{"type":"string","deprecated":false},"RequiresRestart":{"type":"boolean","deprecated":false,"description":"Configuration entity has recently been added and requires a restart."},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["EntityClass"]},"BookHierarchy.LevelDefault":{"properties":{"CustomField":{"type":"string","deprecated":false,"description":"Hidden field to keep reference of custom field entity."},"DefaultValue":{"properties":{"DefaultValue":{"type":"string","deprecated":false,"description":"The value of the default"},"Id":{"type":"string","deprecated":false,"description":"LevelDefault Id"},"Level":{"type":"integer","format":"int32","deprecated":false,"description":"The level in the hierarchy that the entity must occupy to trigger the default"}},"required":["Level"]},"FieldName":{"type":"string","deprecated":false,"description":"Name of field to default"},"Id":{"type":"string","deprecated":false,"description":"LevelDefault Id"}},"required":["FieldName"]},"EntityConfig.FeedConfig":{"properties":{"ChainName":{"type":"string","deprecated":false},"Feed":{"type":"string","deprecated":false},"FeedIdField":{"type":"string","deprecated":false,"description":"RDX entity field used to map feed data to entity instances"},"FeedSourceType":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Plain, 1 - Golden","enum":[0,1]},"FeedType":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 1 - Chain, 2 - Pattern, 3 - Queue","enum":[1,2,3]},"Filter":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Feed config. If not provided while creating Feed config the id is internally generated. This field cannot be edited."},"QueueFunctionName":{"type":"string","deprecated":false},"QueueParam":{"type":"string","deprecated":false},"TriggerType":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 1 - None, 2 - Service, 3 - xRS Context, 4 - CMStatus","enum":[1,2,3,4]},"TriggerValue":{"type":"string","deprecated":false}},"required":["Feed"]},"BIC":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"When Event Type = BIC EXPIRED or BIC SUSPENDED then false, else true.. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"BIC":{"type":"string","deprecated":false},"BicCode":{"type":"string","deprecated":false,"description":"BIC (bank, country and location code)"},"BranchCode":{"type":"string","deprecated":false,"description":"BIC (branch code)"},"BranchInfo1":{"type":"string","deprecated":false,"description":"Branch information"},"BranchInfo2":{"type":"string","deprecated":false,"description":"Branch information"},"CityHeading":{"type":"string","deprecated":false},"CounterpartyList":{"type":"string","deprecated":false},"CountryName1":{"type":"string","deprecated":false,"description":"Country name where the bank identified by this BIC is located"},"CountryName2":{"type":"string","deprecated":false,"description":"Country name where the bank identified by this BIC is located"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"EventDate":{"format":"date","deprecated":false,"description":"The date of the event."},"EventType":{"type":"string","deprecated":false,"description":"The event or change description related to the BIC that has occurred in the past, in the present, or will occur in the future."},"ExtraInformation":{"type":"string","deprecated":false},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the BIC. If not provided while creating BIC the id is internally generated. This field cannot be edited."},"ImportTime":{"format":"date-time","deprecated":false,"description":"Date and time the BICplus file was imported into Message Manager."},"InstitutionName1":{"type":"string","deprecated":false,"description":"Institution Name"},"InstitutionName2":{"type":"string","deprecated":false,"description":"Institution Name"},"InstitutionName3":{"type":"string","deprecated":false,"description":"Institution Name"},"Location1":{"type":"string","deprecated":false,"description":"Location"},"Location2":{"type":"string","deprecated":false,"description":"Location"},"Location3":{"type":"string","deprecated":false,"description":"Location"},"POBCountry1":{"type":"string","deprecated":false,"description":"POB country name"},"POBCountry2":{"type":"string","deprecated":false,"description":"POB country name"},"POBLocation1":{"type":"string","deprecated":false,"description":"POB location"},"POBLocation2":{"type":"string","deprecated":false,"description":"POB location"},"POBLocation3":{"type":"string","deprecated":false,"description":"POB location"},"POBNumber":{"type":"string","deprecated":false},"PhysicalAddress1":{"type":"string","deprecated":false,"description":"Physical address"},"PhysicalAddress2":{"type":"string","deprecated":false,"description":"Physical address"},"PhysicalAddress3":{"type":"string","deprecated":false,"description":"Physical address"},"PhysicalAddress4":{"type":"string","deprecated":false,"description":"Physical address"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."},"SubtypeIndication":{"type":"string","deprecated":false},"Unpublished":{"type":"integer","format":"int32","deprecated":false,"description":"Indicates if the BIC is non-publicly available. A non-public available BIC is a still valid 11-char BIC code but the regular SWIFT files do not provide those. It can assume only two values: 1 if the BIC is NON-publicly available, 0 otherwise. "},"ValueAddedServices":{"type":"string","deprecated":false}},"required":["BicCode"]},"Port.AlternativePortName":{"properties":{"Active":{"type":"integer","format":"int32","deprecated":false,"description":"null. Possible values: 0 - Inactive, 1 - Active","enum":[0,1]},"Id":{"type":"string","deprecated":false,"description":"Alternative Port name identifier"},"Name":{"type":"string","deprecated":false}},"required":["Name"]},"SalesRepGroup":{"properties":{"Description":{"type":"string","deprecated":false,"description":"Description of the group used"},"EntitlementGroup":{"type":"boolean","deprecated":false},"Exclude":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of entities to be excluded from the group in spite of falling into the rule criteria (JSON array)"}},"GroupInclude":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of groups to be included (JSON array)"}},"Id":{"type":"string","deprecated":false,"description":"Identifier of the Group used as record/chain ID and within other technical APIs. Only alpha-numeric characters and underscores are allowed."},"Include":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of entities to be included in the group in spite of not falling into the rule criteria (JSON array)"}},"Name":{"type":"string","deprecated":false,"description":"Name of the group"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Rule":{"type":"string","deprecated":false}},"required":["Id"]},"CounterpartyTypeCMD":{"properties":{"Id":{"type":"string","deprecated":false,"description":"Counterparty type identifier"},"Name":{"type":"string","deprecated":false,"description":"Name of counterparty type"},"RevisionId":{"type":"integer","format":"int32","deprecated":false}},"required":["Name"]},"Calendar.Holiday":{"properties":{"Description":{"type":"string","deprecated":false,"description":"Description of the Holiday."},"EventDate":{"format":"date","deprecated":false,"description":"Date of the Holiday."},"Id":{"type":"string","deprecated":false,"description":"Reference ID of the Holiday."}},"required":["EventDate"]},"Vessel.Emission":{"properties":{"CIIRating":{"type":"integer","format":"int32","deprecated":false,"description":"Carbon Intensity Indicator (CII) rating grade YTD. Possible values: 0 - A, 1 - B, 2 - C, 3 - D, 4 - E","enum":[0,1,2,3,4]},"CIIValue":{"deprecated":false,"description":"Carbon Intensity Indicator (CII) rating value"},"CIIValueYTD":{"deprecated":false,"description":"Carbon Intensity Indicator (CII) rating value current YTD"},"CO2YTD":{"deprecated":false,"description":"CO2 consumed YTD"},"DistanceYTD":{"deprecated":false,"description":"Distance travelled YTD"},"EEXI":{"deprecated":false,"description":"Energy Efficiency Existing Ship Index"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Emission"},"MTYTD":{"deprecated":false,"description":"MT cargo YTD"},"RequiredCIIValue":{"deprecated":false,"description":"Required Carbon Intensity Indicator (CII) rating value"},"RequiredEEXI":{"deprecated":false,"description":"Required Energy Efficiency Existing Ship Index"},"Year":{"type":"integer","format":"int32","deprecated":false}},"required":["Year"]},"CodeTypeField":{"properties":{"Deleted":{"type":"boolean","deprecated":false,"description":"Code Type has been deleted and will be removed after the next restart."},"EntityTypes":{"type":"array","deprecated":false,"items":{"type":"string","description":"Entity types for which this code type can be used for."}},"EntityTypesOrig":{"type":"array","deprecated":false,"items":{"type":"string","description":"Image of EntityTypes when run started"}},"Id":{"type":"string","deprecated":false,"description":"Unique identifier of the code type"},"Identifier":{"type":"string","deprecated":false,"description":"Additional Identifier of the Code type used as record field name and within other technical APIs. Only alpha-numeric characters and underscores are allowed."},"IsUnique":{"type":"boolean","deprecated":false,"description":"If true, each code is checked for uniqueness across all codes of the same code type and entity type."},"LegacyId":{"type":"integer","format":"int32","deprecated":false,"description":"The legacy Id of the code type. If set, the code type will be available as part of the legacy data structures."},"Name":{"type":"string","deprecated":false,"description":"Display name of the code type"},"RequiresRestart":{"type":"boolean","deprecated":false,"description":"Configuration entity has recently been added and requires a restart."},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SetOfCodes":{"type":"boolean","deprecated":false,"description":"Specify whether the code type accepts only one code or multiple."},"SourceNames":{"type":"array","deprecated":false,"items":{"type":"string","description":"List of component source names which shall use this code type."}}},"required":["EntityTypes","Identifier"]},"BICType":{"properties":{"Default":{"type":"boolean","deprecated":false,"description":"BIC type is used as default."},"Description":{"type":"string","deprecated":false,"description":"A meaningful BIC Type description"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Id":{"type":"string","deprecated":false,"description":"BIC Type Identifier"},"Name":{"type":"string","deprecated":false,"description":"BIC Type Name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."}},"required":["Name"]},"CustomField":{"properties":{"DefaultValueExpr":{"type":"string","deprecated":false,"description":"Expression to calculate the default value of the custom field"},"Deleted":{"type":"boolean","deprecated":false,"description":"Custom field has been deleted and will be removed after the next restart"},"Description":{"type":"string","deprecated":false,"description":"Human readable description for the custom field"},"Editable":{"type":"boolean","deprecated":false,"description":"Flag indicating the editability of the field"},"EntityClass":{"type":"string","deprecated":false,"description":"Entity type to which the custom field needs to be added to"},"Id":{"type":"string","deprecated":false,"description":"Primary identifier of the Custom field"},"Identifier":{"type":"string","deprecated":false,"description":"Additional Identifier of the Custom field used as record field name and within other technical APIs. Only alpha-numeric characters and underscores are allowed."},"Name":{"type":"string","deprecated":false,"description":"Display name of the custom field"},"Overridden":{"type":"boolean","deprecated":false,"description":"Custom field overrides an existing native field"},"ReferenceType":{"type":"string","deprecated":false,"description":"The entity type of the reference, in case the type of the field is Reference or ReferenceSet."},"RequiresRestart":{"type":"boolean","deprecated":false,"description":"Configuration entity has recently been added and requires a restart."},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"Type":{"type":"integer","format":"int32","deprecated":false,"description":"Field type of custom field. Possible values: 0 - String, 1 - Real, 2 - Integer, 3 - Date, 4 - Time, 5 - Boolean, 6 - Date and time, 7 - Reference, 8 - Set of references","enum":[0,1,2,3,4,5,6,7,8]},"ValidationExpr":{"type":"string","deprecated":false,"description":"Custom Field value validator expression"},"ValidationFailureMessage":{"type":"string","deprecated":false,"description":"Validation failure message "}},"required":["Type","Identifier","EntityClass"]},"Future":{"properties":{"Country":{"type":"string","deprecated":false,"description":"Country of the future."},"CurrencyStr":{"type":"string","deprecated":false,"description":"Currency of the future."},"Description":{"type":"string","deprecated":false,"description":"Description of the future."},"FutureProductCode":{"type":"string","deprecated":false,"description":"Future Type."},"Id":{"type":"string","deprecated":false,"description":"Future Id."},"MaturityMonthYear":{"type":"string","deprecated":false,"description":"Year and month of the contract month (YYYYMM)."},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SecurityType":{"type":"integer","format":"int32","deprecated":false,"description":"Security Type.. Possible values: 0 - Undef, 1 - Fwd, 2 - Cash, 3 - Basis, 4 - Future, 5 - Option, 6 - Swap, 7 - Switch, 8 - Repo, 11 - Strategy, 12 - CDS, 13 - Equity, 14 - Fund, 15 - FX, 16 - CDS Curve, 17 - Repo Basket, 18 - MMCurvePoint, 19 - MMCurve","enum":[0,1,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19]},"Ticker":{"type":"string","deprecated":false}},"required":["MaturityMonthYear","FutureProductCode"]},"ClearingSystemType":{"properties":{"Description":{"type":"string","deprecated":false,"description":"A meaningful Clearing System Type description"},"EntitySubtype":{"type":"string","deprecated":true,"description":"Not required."},"EntityType":{"type":"string","deprecated":true,"description":"Not required."},"Id":{"type":"string","deprecated":false,"description":"Clearing System Type Identifier"},"Name":{"type":"string","deprecated":false,"description":"Clearing System Type Name"},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SoftDeleted":{"type":"integer","format":"int32","deprecated":true,"description":"Soft deletion not supported."}},"required":["Name"]},"Bond":{"properties":{"Country":{"type":"string","deprecated":false},"CouponInterest":{"deprecated":false,"description":"Coupon interest of the bond."},"CurrencyStr":{"type":"string","deprecated":false,"description":"Currency of the bond."},"Cusip":{"type":"string","deprecated":false,"description":"CUSIP of the bond."},"DateIssue":{"format":"date","deprecated":false,"description":"Issue date of the bond."},"DateMaturity":{"format":"date","deprecated":false,"description":"Maturity date of the bond."},"Description":{"type":"string","deprecated":false,"description":"Description of the bond."},"Id":{"type":"string","deprecated":false,"description":"Reference ID for the Bond."},"Isin":{"type":"string","deprecated":false,"description":"ISIN of the bond."},"PartOfGroups":{"type":"array","deprecated":false,"items":{"type":"string"}},"RevisionId":{"type":"integer","format":"int32","deprecated":false},"SecurityType":{"type":"integer","format":"int32","deprecated":false,"description":"Security Type.. Possible values: 0 - Undef, 1 - Fwd, 2 - Cash, 3 - Basis, 4 - Future, 5 - Option, 6 - Swap, 7 - Switch, 8 - Repo, 11 - Strategy, 12 - CDS, 13 - Equity, 14 - Fund, 15 - FX, 16 - CDS Curve, 17 - Repo Basket, 18 - MMCurvePoint, 19 - MMCurve","enum":[0,1,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19]},"Ticker":{"type":"string","deprecated":false,"description":"The ticker of the issuer of the bond."}}},"RestServiceError":{"properties":{"ErrorMessage":{"type":"string","description":"Error message"},"ErrCode":{"type":"integer","format":"int32","description":"Error code"}}},"Rest4EyesMessage":{"properties":{"Message":{"type":"string","description":"Message"}}}}}}